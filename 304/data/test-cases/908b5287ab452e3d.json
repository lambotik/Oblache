{
  "uid" : "908b5287ab452e3d",
  "name" : "GET bad_request.",
  "fullName" : "tests_api.test_bd.TestGET#test_get_with_bad_request",
  "historyId" : "5156f5dedc3d46e33a62122a588c6956",
  "time" : {
    "start" : 1738718059948,
    "stop" : 1738718120252,
    "duration" : 60304
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 504",
  "statusTrace" : "self = <tests_api.test_bd.TestGET object at 0x7f935454c440>\n\n    @allure.title('GET bad_request.')\n    def test_get_with_bad_request(self):\n        response = API.get_bad_request()\n>       Checking.check_status_code(response, 404)\n\ntests_api/test_bd.py:98: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [504]>, status_code = 404\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 504\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 504",
    "statusTrace" : "self = <tests_api.test_bd.TestGET object at 0x7f935454c440>\n\n    @allure.title('GET bad_request.')\n    def test_get_with_bad_request(self):\n        response = API.get_bad_request()\n>       Checking.check_status_code(response, 404)\n\ntests_api/test_bd.py:98: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [504]>, status_code = 404\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 504\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "Endpoint: /bad_request",
      "time" : {
        "start" : 1738718120251,
        "stop" : 1738718120251,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request:",
      "time" : {
        "start" : 1738718120251,
        "stop" : 1738718120251,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Url: https://dbend.areso.pro/bad_request",
        "time" : {
          "start" : 1738718120251,
          "stop" : 1738718120251,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': 'None'}",
        "time" : {
          "start" : 1738718120251,
          "stop" : 1738718120251,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Body: None",
        "time" : {
          "start" : 1738718120251,
          "stop" : 1738718120251,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 3,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Response:",
      "time" : {
        "start" : 1738718120251,
        "stop" : 1738718120251,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Status code: 504",
        "time" : {
          "start" : 1738718120251,
          "stop" : 1738718120251,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "JSON: <html>\r\n<head><title>504 Gateway Time-out</title></head>\r\n<body>\r\n<center><h1>504 Gateway Time-out</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
        "time" : {
          "start" : 1738718120251,
          "stop" : 1738718120251,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 404 == Response status code: 504",
      "time" : {
        "start" : 1738718120252,
        "stop" : 1738718120252,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 504\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 9,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "GET"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestGET"
  }, {
    "name" : "host",
    "value" : "fv-az1315-673"
  }, {
    "name" : "thread",
    "value" : "2475-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 4,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 83,
        "unknown" : 0,
        "total" : 87
      },
      "items" : [ {
        "uid" : "55dc6dcd1bbaa4d9",
        "reportUrl" : "https://lambotik.github.io/Oblache/303//#testresult/55dc6dcd1bbaa4d9",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 504",
        "time" : {
          "start" : 1738631617609,
          "stop" : 1738631678107,
          "duration" : 60498
        }
      }, {
        "uid" : "4c1f0d38d9b4fcac",
        "reportUrl" : "https://lambotik.github.io/Oblache/302//#testresult/4c1f0d38d9b4fcac",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 504",
        "time" : {
          "start" : 1738545280505,
          "stop" : 1738545340845,
          "duration" : 60340
        }
      }, {
        "uid" : "a31fda05659ef961",
        "reportUrl" : "https://lambotik.github.io/Oblache/301//#testresult/a31fda05659ef961",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 504",
        "time" : {
          "start" : 1738459002239,
          "stop" : 1738459062622,
          "duration" : 60383
        }
      }, {
        "uid" : "a6b83462c63753a1",
        "reportUrl" : "https://lambotik.github.io/Oblache/300//#testresult/a6b83462c63753a1",
        "status" : "passed",
        "time" : {
          "start" : 1738371849942,
          "stop" : 1738371850417,
          "duration" : 475
        }
      }, {
        "uid" : "bbe582453303eee1",
        "reportUrl" : "https://lambotik.github.io/Oblache/299//#testresult/bbe582453303eee1",
        "status" : "passed",
        "time" : {
          "start" : 1738350567765,
          "stop" : 1738350568072,
          "duration" : 307
        }
      }, {
        "uid" : "7a38d7fa1a7f43a6",
        "reportUrl" : "https://lambotik.github.io/Oblache/298//#testresult/7a38d7fa1a7f43a6",
        "status" : "passed",
        "time" : {
          "start" : 1738198758582,
          "stop" : 1738198758864,
          "duration" : 282
        }
      }, {
        "uid" : "eba4f4be058de3b1",
        "reportUrl" : "https://lambotik.github.io/Oblache/297//#testresult/eba4f4be058de3b1",
        "status" : "passed",
        "time" : {
          "start" : 1738112412844,
          "stop" : 1738112413130,
          "duration" : 286
        }
      }, {
        "uid" : "f2395b5dd0192d58",
        "reportUrl" : "https://lambotik.github.io/Oblache/296//#testresult/f2395b5dd0192d58",
        "status" : "passed",
        "time" : {
          "start" : 1738026024757,
          "stop" : 1738026025062,
          "duration" : 305
        }
      }, {
        "uid" : "d41efe7e794287b7",
        "reportUrl" : "https://lambotik.github.io/Oblache/295//#testresult/d41efe7e794287b7",
        "status" : "passed",
        "time" : {
          "start" : 1737939701710,
          "stop" : 1737939702053,
          "duration" : 343
        }
      }, {
        "uid" : "50f23b3e37129a63",
        "reportUrl" : "https://lambotik.github.io/Oblache/294//#testresult/50f23b3e37129a63",
        "status" : "passed",
        "time" : {
          "start" : 1737853346149,
          "stop" : 1737853346623,
          "duration" : 474
        }
      }, {
        "uid" : "3e5002fcc6ec042e",
        "reportUrl" : "https://lambotik.github.io/Oblache/293//#testresult/3e5002fcc6ec042e",
        "status" : "passed",
        "time" : {
          "start" : 1737766643698,
          "stop" : 1737766644194,
          "duration" : 496
        }
      }, {
        "uid" : "eaa9ecfa6dc1f862",
        "reportUrl" : "https://lambotik.github.io/Oblache/292//#testresult/eaa9ecfa6dc1f862",
        "status" : "passed",
        "time" : {
          "start" : 1737680479625,
          "stop" : 1737680480126,
          "duration" : 501
        }
      }, {
        "uid" : "30d93d234dded13a",
        "reportUrl" : "https://lambotik.github.io/Oblache/291//#testresult/30d93d234dded13a",
        "status" : "passed",
        "time" : {
          "start" : 1737594018007,
          "stop" : 1737594018289,
          "duration" : 282
        }
      }, {
        "uid" : "94e6a09af6905169",
        "reportUrl" : "https://lambotik.github.io/Oblache/290//#testresult/94e6a09af6905169",
        "status" : "passed",
        "time" : {
          "start" : 1737507702364,
          "stop" : 1737507702665,
          "duration" : 301
        }
      }, {
        "uid" : "50228f8ef4395d94",
        "reportUrl" : "https://lambotik.github.io/Oblache/289//#testresult/50228f8ef4395d94",
        "status" : "passed",
        "time" : {
          "start" : 1737421185045,
          "stop" : 1737421185337,
          "duration" : 292
        }
      }, {
        "uid" : "e4b43b598c8a6001",
        "reportUrl" : "https://lambotik.github.io/Oblache/288//#testresult/e4b43b598c8a6001",
        "status" : "passed",
        "time" : {
          "start" : 1737334874821,
          "stop" : 1737334875179,
          "duration" : 358
        }
      }, {
        "uid" : "f65c05ca1bf98f7c",
        "reportUrl" : "https://lambotik.github.io/Oblache/287//#testresult/f65c05ca1bf98f7c",
        "status" : "passed",
        "time" : {
          "start" : 1737248700922,
          "stop" : 1737248701441,
          "duration" : 519
        }
      }, {
        "uid" : "7a9efb2c6708a7b7",
        "reportUrl" : "https://lambotik.github.io/Oblache/286//#testresult/7a9efb2c6708a7b7",
        "status" : "passed",
        "time" : {
          "start" : 1737161896323,
          "stop" : 1737161896658,
          "duration" : 335
        }
      }, {
        "uid" : "de70c37ee3ae94c",
        "reportUrl" : "https://lambotik.github.io/Oblache/285//#testresult/de70c37ee3ae94c",
        "status" : "passed",
        "time" : {
          "start" : 1737075592271,
          "stop" : 1737075592746,
          "duration" : 475
        }
      }, {
        "uid" : "5b71209f54d1fab0",
        "reportUrl" : "https://lambotik.github.io/Oblache/284//#testresult/5b71209f54d1fab0",
        "status" : "passed",
        "time" : {
          "start" : 1736989199256,
          "stop" : 1736989199545,
          "duration" : 289
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "908b5287ab452e3d.json",
  "parameterValues" : [ ]
}