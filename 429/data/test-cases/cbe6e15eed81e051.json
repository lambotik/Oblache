{
  "uid" : "cbe6e15eed81e051",
  "name" : "POST registration Bulgaria language.",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_registration_for_bulgaria_language",
  "historyId" : "9770496b60bb3f26dd42c11f178217a0",
  "time" : {
    "start" : 1749518050254,
    "stop" : 1749518050736,
    "duration" : 482
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 502",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7fca88922870>\n\n    @allure.title('POST registration Bulgaria language.')\n    def test_post_registration_for_bulgaria_language(self):\n        response = API.post_registration_variety_email(\n            mail=random.choice(['gmail', 'mail', 'yandex']),\n            old_password=TestPOST.old_password,\n            prefix='bg',\n            language='bg-bg',\n            tos_agree=True)\n>       Checking.check_status_code(response, 201)\n\ntests_api/test_bd.py:151: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 201\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : true,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 502",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7fca88922870>\n\n    @allure.title('POST registration Bulgaria language.')\n    def test_post_registration_for_bulgaria_language(self):\n        response = API.post_registration_variety_email(\n            mail=random.choice(['gmail', 'mail', 'yandex']),\n            old_password=TestPOST.old_password,\n            prefix='bg',\n            language='bg-bg',\n            tos_agree=True)\n>       Checking.check_status_code(response, 201)\n\ntests_api/test_bd.py:151: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 201\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "post_registration_variety_email",
      "time" : {
        "start" : 1749518050254,
        "stop" : 1749518050736,
        "duration" : 482
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /register",
        "time" : {
          "start" : 1749518050735,
          "stop" : 1749518050735,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1749518050735,
          "stop" : 1749518050735,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': ''}",
          "time" : {
            "start" : 1749518050735,
            "stop" : 1749518050735,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: \n                                {\n                                \"email\": f'aqa2025_06_10_01_13_59@yandex.bg',\n                                \"password\": password,\n                                \"tos_agree\": True,\n                                \"language\": bg-bg\n                               }",
          "time" : {
            "start" : 1749518050735,
            "stop" : 1749518050735,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1749518050736,
          "stop" : 1749518050736,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 502",
          "time" : {
            "start" : 1749518050736,
            "stop" : 1749518050736,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
          "time" : {
            "start" : 1749518050736,
            "stop" : 1749518050736,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 7,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 201 == Response status code: 502",
      "time" : {
        "start" : 1749518050736,
        "stop" : 1749518050736,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 502\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 9,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "pkrvmf6wy0o8zjz"
  }, {
    "name" : "thread",
    "value" : "2580-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 17,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 197,
        "unknown" : 0,
        "total" : 214
      },
      "items" : [ {
        "uid" : "e3db2d6de9ca52ac",
        "reportUrl" : "https://lambotik.github.io/Oblache/428//#testresult/e3db2d6de9ca52ac",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1749431809041,
          "stop" : 1749431809386,
          "duration" : 345
        }
      }, {
        "uid" : "9d58b6b54ade8763",
        "reportUrl" : "https://lambotik.github.io/Oblache/427//#testresult/9d58b6b54ade8763",
        "status" : "passed",
        "time" : {
          "start" : 1749345558477,
          "stop" : 1749345558810,
          "duration" : 333
        }
      }, {
        "uid" : "8b1447f670611c2a",
        "reportUrl" : "https://lambotik.github.io/Oblache/426//#testresult/8b1447f670611c2a",
        "status" : "passed",
        "time" : {
          "start" : 1749258700104,
          "stop" : 1749258700428,
          "duration" : 324
        }
      }, {
        "uid" : "a9c70274745e4d2b",
        "reportUrl" : "https://lambotik.github.io/Oblache/425//#testresult/a9c70274745e4d2b",
        "status" : "passed",
        "time" : {
          "start" : 1749172341204,
          "stop" : 1749172341596,
          "duration" : 392
        }
      }, {
        "uid" : "de3022f90b86a920",
        "reportUrl" : "https://lambotik.github.io/Oblache/424//#testresult/de3022f90b86a920",
        "status" : "passed",
        "time" : {
          "start" : 1749085934872,
          "stop" : 1749085935195,
          "duration" : 323
        }
      }, {
        "uid" : "aa18b09dc700b847",
        "reportUrl" : "https://lambotik.github.io/Oblache/423//#testresult/aa18b09dc700b847",
        "status" : "passed",
        "time" : {
          "start" : 1748999581515,
          "stop" : 1748999581833,
          "duration" : 318
        }
      }, {
        "uid" : "f13e24fb9e88ab",
        "reportUrl" : "https://lambotik.github.io/Oblache/422//#testresult/f13e24fb9e88ab",
        "status" : "passed",
        "time" : {
          "start" : 1748913216234,
          "stop" : 1748913216653,
          "duration" : 419
        }
      }, {
        "uid" : "8b2866d6d1d5d100",
        "reportUrl" : "https://lambotik.github.io/Oblache/421//#testresult/8b2866d6d1d5d100",
        "status" : "passed",
        "time" : {
          "start" : 1748826900975,
          "stop" : 1748826901294,
          "duration" : 319
        }
      }, {
        "uid" : "66461534a25175f0",
        "reportUrl" : "https://lambotik.github.io/Oblache/420//#testresult/66461534a25175f0",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 504",
        "time" : {
          "start" : 1748742247466,
          "stop" : 1748742308084,
          "duration" : 60618
        }
      }, {
        "uid" : "a7c09d3d41b7786b",
        "reportUrl" : "https://lambotik.github.io/Oblache/419//#testresult/a7c09d3d41b7786b",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 504",
        "time" : {
          "start" : 1748654961135,
          "stop" : 1748655021493,
          "duration" : 60358
        }
      }, {
        "uid" : "36b0e4ed11a79b26",
        "reportUrl" : "https://lambotik.github.io/Oblache/418//#testresult/36b0e4ed11a79b26",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 504",
        "time" : {
          "start" : 1748568552619,
          "stop" : 1748568612930,
          "duration" : 60311
        }
      }, {
        "uid" : "a84ada2c75c49fd3",
        "reportUrl" : "https://lambotik.github.io/Oblache/417//#testresult/a84ada2c75c49fd3",
        "status" : "passed",
        "time" : {
          "start" : 1748481127090,
          "stop" : 1748481127476,
          "duration" : 386
        }
      }, {
        "uid" : "7590cd11b47b7eb7",
        "reportUrl" : "https://lambotik.github.io/Oblache/416//#testresult/7590cd11b47b7eb7",
        "status" : "passed",
        "time" : {
          "start" : 1748394737065,
          "stop" : 1748394737401,
          "duration" : 336
        }
      }, {
        "uid" : "757a7601f2bfa79c",
        "reportUrl" : "https://lambotik.github.io/Oblache/415//#testresult/757a7601f2bfa79c",
        "status" : "passed",
        "time" : {
          "start" : 1748308247720,
          "stop" : 1748308248058,
          "duration" : 338
        }
      }, {
        "uid" : "d824bbae12e23eb6",
        "reportUrl" : "https://lambotik.github.io/Oblache/414//#testresult/d824bbae12e23eb6",
        "status" : "passed",
        "time" : {
          "start" : 1748222000090,
          "stop" : 1748222000408,
          "duration" : 318
        }
      }, {
        "uid" : "90ea3272ec112b44",
        "reportUrl" : "https://lambotik.github.io/Oblache/413//#testresult/90ea3272ec112b44",
        "status" : "passed",
        "time" : {
          "start" : 1748135877028,
          "stop" : 1748135877388,
          "duration" : 360
        }
      }, {
        "uid" : "d2c5776eac6dd353",
        "reportUrl" : "https://lambotik.github.io/Oblache/412//#testresult/d2c5776eac6dd353",
        "status" : "passed",
        "time" : {
          "start" : 1748048927709,
          "stop" : 1748048928224,
          "duration" : 515
        }
      }, {
        "uid" : "26148dbd6e77a40b",
        "reportUrl" : "https://lambotik.github.io/Oblache/411//#testresult/26148dbd6e77a40b",
        "status" : "passed",
        "time" : {
          "start" : 1747962675004,
          "stop" : 1747962675378,
          "duration" : 374
        }
      }, {
        "uid" : "108d3d677c1484de",
        "reportUrl" : "https://lambotik.github.io/Oblache/410//#testresult/108d3d677c1484de",
        "status" : "passed",
        "time" : {
          "start" : 1747876283146,
          "stop" : 1747876283518,
          "duration" : 372
        }
      }, {
        "uid" : "9c3d156fdc9deb2f",
        "reportUrl" : "https://lambotik.github.io/Oblache/409//#testresult/9c3d156fdc9deb2f",
        "status" : "passed",
        "time" : {
          "start" : 1747789920579,
          "stop" : 1747789920944,
          "duration" : 365
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "cbe6e15eed81e051.json",
  "parameterValues" : [ ]
}