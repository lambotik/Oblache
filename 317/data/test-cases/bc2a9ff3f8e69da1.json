{
  "uid" : "bc2a9ff3f8e69da1",
  "name" : "POST db_list_with_filter",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_db_list_with_filter",
  "historyId" : "1404cf75602dc5c195df0f6e9ffb5ba3",
  "time" : {
    "start" : 1739840510093,
    "stop" : 1739840510729,
    "duration" : 636
  },
  "status" : "skipped",
  "statusMessage" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 400",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f3725b0dbe0>\n\n    @allure.title('POST db_list_with_filter')\n    @pytest.mark.xfail(reason='There are databases that need to be deleted manually.')\n    def test_post_db_list_with_filter(self):\n        list_db = API.post_db_list(token=TestPOST.token)\n        json_list_db = json.loads(list_db.text)\n        try:\n            first_db_uuid = list(json_list_db['data'])[-1]\n            response_db_list = API.delete_db(\n                db_uuid=first_db_uuid,\n                token=TestPOST.token)\n>           Checking.check_status_code(response_db_list, 200)\n\ntests_api/test_bd.py:311: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 400\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "skipped",
    "statusMessage" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 400",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f3725b0dbe0>\n\n    @allure.title('POST db_list_with_filter')\n    @pytest.mark.xfail(reason='There are databases that need to be deleted manually.')\n    def test_post_db_list_with_filter(self):\n        list_db = API.post_db_list(token=TestPOST.token)\n        json_list_db = json.loads(list_db.text)\n        try:\n            first_db_uuid = list(json_list_db['data'])[-1]\n            response_db_list = API.delete_db(\n                db_uuid=first_db_uuid,\n                token=TestPOST.token)\n>           Checking.check_status_code(response_db_list, 200)\n\ntests_api/test_bd.py:311: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 400\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "post_db_list",
      "time" : {
        "start" : 1739840510093,
        "stop" : 1739840510410,
        "duration" : 317
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /db_list",
        "time" : {
          "start" : 1739840510410,
          "stop" : 1739840510410,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1739840510410,
          "stop" : 1739840510410,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Url: https://dbend.areso.pro/db_list",
          "time" : {
            "start" : 1739840510410,
            "stop" : 1739840510410,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': '7c714c97-f727-45c8-b2df-60853017994d'}",
          "time" : {
            "start" : 1739840510410,
            "stop" : 1739840510410,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: None",
          "time" : {
            "start" : 1739840510410,
            "stop" : 1739840510410,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 3,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1739840510410,
          "stop" : 1739840510410,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 200",
          "time" : {
            "start" : 1739840510410,
            "stop" : 1739840510410,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: {\n  \"data\": {\n    \"066b87ca-9dd6-7a0b-8000-461dafcab111\": [\n      \"\",\n      \"CIS\",\n      \"manual_deleting\",\n      null,\n      \"None\",\n      0\n    ],\n    \"066b87cb-4cfd-73bd-8000-ad0fc36ba001\": [\n      \"\",\n      \"CIS\",\n      \"manual_deleting\",\n      null,\n      \"None\",\n      0\n    ],\n    \"066b87cf-a338-7323-8000-0bf32a680ae6\": [\n      \"\",\n      \"CIS\",\n      \"manual_deleting\",\n      null,\n      \"None\",\n      0\n    ],\n    \"066b87fa-e7b6-76b6-8000-6da15c803e34\": [\n      \"\",\n      \"CIS\",\n      \"manual_deleting\",\n      null,\n      \"None\",\n      0\n    ],\n    \"066b901a-88fc-7a2b-8000-712464b36b1c\": [\n      \"\",\n      \"CIS\",\n      \"manual_deleting\",\n      null,\n      \"None\",\n      0\n    ],\n    \"066bd164-0617-75dd-8000-866f5dc1ce44\": [\n      \"db_ji3eegk9\",\n      \"CIS\",\n      \"error_to_threshold\",\n      \"mysql://user_tln5y0w3:pwPW01__H5d8gcbeqWWdZH@cis_db1.areso.pro:3306/db_ji3eegk9\",\n      \"2024-08-14 20:40:42\",\n      0\n    ],\n    \"066d9eed-f09a-7db8-8000-80b496f05633\": [\n      \"db_8bmgvwjv\",\n      \"CIS\",\n      \"error_to_threshold\",\n      \"mysql://user_gdrgym35:pwPW01__Iuiwn8ykAK65hy@cis_db1.areso.pro:3306/db_8bmgvwjv\",\n      \"2024-09-05 17:48:25\",\n      0\n    ],\n    \"066d9efb-8218-79d4-8000-4e7aba4f0139\": [\n      \"db_wjlk1fw0\",\n      \"CIS\",\n      \"error_to_threshold\",\n      \"mysql://user_rv52273g:pwPW01__4d0hT10HYRpuTi@cis_db1.areso.pro:3306/db_wjlk1fw0\",\n      \"2024-09-05 17:52:03\",\n      0\n    ],\n    \"066d9efc-7d24-7243-8000-e2a65edbd23e\": [\n      \"db_i5n4oqpl\",\n      \"CIS\",\n      \"error_to_threshold\",\n      \"mysql://user_2d99654y:pwPW01__YR60Gyo480l0Xx@cis_db1.areso.pro:3306/db_i5n4oqpl\",\n      \"2024-09-05 17:52:17\",\n      0\n    ],\n    \"066da549-ba6b-71bc-8000-329f72336f26\": [\n      \"db_i1fqs78r\",\n      \"CIS\",\n      \"error_to_threshold\",\n      \"mysql://user_kk09qxgi:pwPW01__5srn0nAEQwhv9H@cis_db1.areso.pro:3306/db_i1fqs78r\",\n      \"2024-09-06 01:02:29\",\n      0\n    ],\n    \"066da592-2e9e-748b-8000-9567d3d0f846\": [\n      \"db_hy3nifmn\",\n      \"CIS\",\n      \"error_deleting\",\n      \"mysql://user_qyz0dq0z:pwPW01__WlYyX4pVQkosaQ@cis_db1.areso.pro:3306/db_hy3nifmn\",\n      \"2024-09-06 01:21:48\",\n      9\n    ],\n    \"0671af47-4ad9-7df1-8000-4bd970b89140\": [\n      \"db_ghdm8tjq\",\n      \"CIS\",\n      \"error_to_threshold\",\n      \"mysql://user_np1z7f7w:pwPW01__1Gg95a9QbwUTdZ@cis_db1.areso.pro:3306/db_ghdm8tjq\",\n      \"2024-10-25 01:29:35\",\n      0\n    ],\n    \"0672c17c-2ac2-76a9-8000-755c38dfde67\": [\n      \"db_udjdopyi\",\n      \"CIS\",\n      \"error_to_threshold\",\n      \"mysql://user_42jxxxl6:pwPW01__sEBAmuSLp4WiiO@cis_db1.areso.pro:3306/db_udjdopyi\",\n      \"2024-11-07 01:28:44\",\n      0\n    ],\n    \"0672d635-60a4-71c9-8000-293693d25d89\": [\n      \"db_yvs2nrlo\",\n      \"CIS\",\n      \"manual_deleting\",\n      \"mysql://user_au971vxk:pwPW01__mmwks6dloWynhn@cis_db1.areso.pro:3306/db_yvs2nrlo\",\n      \"None\",\n      0\n    ],\n    \"0672d693-65b0-7f04-8000-fb2220c30330\": [\n      \"db_oe9tvhec\",\n      \"CIS\",\n      \"manual_deleting\",\n      \"mysql://user_cpwquucc:pwPW01__hucPw3TumKIN0E@cis_db1.areso.pro:3306/db_oe9tvhec\",\n      \"None\",\n      0\n    ],\n    \"06737f8f-508a-70cb-8000-d3b442ce147e\": [\n      \"db_qgkfa8pp\",\n      \"CIS\",\n      \"error_to_threshold\",\n      \"mysql://user_c62g023v:pwPW01__ZZxflk4e0toqx9@cis_db1.areso.pro:3306/db_qgkfa8pp\",\n      \"2024-11-16 01:44:30\",\n      0\n    ]\n  },\n  \"headers\": {\n    \"Access-Control-Allow-Methods\": [\n      \"POST\",\n      \"OPTIONS\"\n    ],\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Access-Control-Expose-Headers\": \"*\",\n    \"Content-Type\": \"application/json; charset=utf-8\"\n  },\n  \"status\": 200\n}\n",
          "time" : {
            "start" : 1739840510410,
            "stop" : 1739840510410,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 8,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "delete_db",
      "time" : {
        "start" : 1739840510410,
        "stop" : 1739840510729,
        "duration" : 319
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /container_delete",
        "time" : {
          "start" : 1739840510728,
          "stop" : 1739840510728,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1739840510728,
          "stop" : 1739840510729,
          "duration" : 1
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Url: https://dbend.areso.pro/db_delete",
          "time" : {
            "start" : 1739840510728,
            "stop" : 1739840510729,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': '7c714c97-f727-45c8-b2df-60853017994d'}",
          "time" : {
            "start" : 1739840510729,
            "stop" : 1739840510729,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: {\"db_uuid\": f\"{'db_uuid': '06737f8f-508a-70cb-8000-d3b442ce147e'}\"}",
          "time" : {
            "start" : 1739840510729,
            "stop" : 1739840510729,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 3,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1739840510729,
          "stop" : 1739840510729,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 400",
          "time" : {
            "start" : 1739840510729,
            "stop" : 1739840510729,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: {\n    \"content\": \"msg[28]: error: can't delete a db in threshold error state\"\n}\n",
          "time" : {
            "start" : 1739840510729,
            "stop" : 1739840510729,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 8,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 200 == Response status code: 400",
      "time" : {
        "start" : 1739840510729,
        "stop" : 1739840510729,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 400\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 19,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.xfail(reason='There are databases that need to be deleted manually.')"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "fv-az1441-723"
  }, {
    "name" : "thread",
    "value" : "2431-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 99,
        "passed" : 1,
        "unknown" : 0,
        "total" : 100
      },
      "items" : [ {
        "uid" : "d1e1e357337e5e8a",
        "reportUrl" : "https://lambotik.github.io/Oblache/316//#testresult/d1e1e357337e5e8a",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1739754264396,
          "stop" : 1739754265032,
          "duration" : 636
        }
      }, {
        "uid" : "d3291dc09e37702b",
        "reportUrl" : "https://lambotik.github.io/Oblache/315//#testresult/d3291dc09e37702b",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1739668010945,
          "stop" : 1739668011580,
          "duration" : 635
        }
      }, {
        "uid" : "fff4bceb9eba3b66",
        "reportUrl" : "https://lambotik.github.io/Oblache/314//#testresult/fff4bceb9eba3b66",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1739581273677,
          "stop" : 1739581274699,
          "duration" : 1022
        }
      }, {
        "uid" : "286c8857e7f3b1c1",
        "reportUrl" : "https://lambotik.github.io/Oblache/313//#testresult/286c8857e7f3b1c1",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1739494911674,
          "stop" : 1739494912430,
          "duration" : 756
        }
      }, {
        "uid" : "1f1f619d60dce596",
        "reportUrl" : "https://lambotik.github.io/Oblache/312//#testresult/1f1f619d60dce596",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1739408513752,
          "stop" : 1739408514536,
          "duration" : 784
        }
      }, {
        "uid" : "e63802ae0186e46f",
        "reportUrl" : "https://lambotik.github.io/Oblache/311//#testresult/e63802ae0186e46f",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1739322107420,
          "stop" : 1739322108457,
          "duration" : 1037
        }
      }, {
        "uid" : "efcd7d95de2cfe58",
        "reportUrl" : "https://lambotik.github.io/Oblache/310//#testresult/efcd7d95de2cfe58",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
        "time" : {
          "start" : 1739238100682,
          "stop" : 1739238161194,
          "duration" : 60512
        }
      }, {
        "uid" : "ccfb1463e3a00a9a",
        "reportUrl" : "https://lambotik.github.io/Oblache/309//#testresult/ccfb1463e3a00a9a",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
        "time" : {
          "start" : 1739151785095,
          "stop" : 1739151845388,
          "duration" : 60293
        }
      }, {
        "uid" : "c6c635bd856fc80c",
        "reportUrl" : "https://lambotik.github.io/Oblache/308//#testresult/c6c635bd856fc80c",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
        "time" : {
          "start" : 1739065487488,
          "stop" : 1739065547912,
          "duration" : 60424
        }
      }, {
        "uid" : "f5b16a826988a275",
        "reportUrl" : "https://lambotik.github.io/Oblache/307//#testresult/f5b16a826988a275",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
        "time" : {
          "start" : 1738978796544,
          "stop" : 1738978857052,
          "duration" : 60508
        }
      }, {
        "uid" : "dde8c69aa0d59746",
        "reportUrl" : "https://lambotik.github.io/Oblache/306//#testresult/dde8c69aa0d59746",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
        "time" : {
          "start" : 1738892527248,
          "stop" : 1738892587738,
          "duration" : 60490
        }
      }, {
        "uid" : "9086abe4b8fcbb8",
        "reportUrl" : "https://lambotik.github.io/Oblache/305//#testresult/9086abe4b8fcbb8",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
        "time" : {
          "start" : 1738806099531,
          "stop" : 1738806159956,
          "duration" : 60425
        }
      }, {
        "uid" : "4bb14a8f0e5239f1",
        "reportUrl" : "https://lambotik.github.io/Oblache/304//#testresult/4bb14a8f0e5239f1",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
        "time" : {
          "start" : 1738719688860,
          "stop" : 1738719749179,
          "duration" : 60319
        }
      }, {
        "uid" : "704a536ed91576c6",
        "reportUrl" : "https://lambotik.github.io/Oblache/303//#testresult/704a536ed91576c6",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
        "time" : {
          "start" : 1738633252105,
          "stop" : 1738633312606,
          "duration" : 60501
        }
      }, {
        "uid" : "b8d1da7e2aa1c2a4",
        "reportUrl" : "https://lambotik.github.io/Oblache/302//#testresult/b8d1da7e2aa1c2a4",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
        "time" : {
          "start" : 1738546909464,
          "stop" : 1738546969776,
          "duration" : 60312
        }
      }, {
        "uid" : "e7273a3bf9b8f06d",
        "reportUrl" : "https://lambotik.github.io/Oblache/301//#testresult/e7273a3bf9b8f06d",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
        "time" : {
          "start" : 1738460632986,
          "stop" : 1738460693373,
          "duration" : 60387
        }
      }, {
        "uid" : "54dbf14d98892ce2",
        "reportUrl" : "https://lambotik.github.io/Oblache/300//#testresult/54dbf14d98892ce2",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1738371867078,
          "stop" : 1738371868104,
          "duration" : 1026
        }
      }, {
        "uid" : "1f211a08cc96d3e7",
        "reportUrl" : "https://lambotik.github.io/Oblache/299//#testresult/1f211a08cc96d3e7",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1738350578600,
          "stop" : 1738350579245,
          "duration" : 645
        }
      }, {
        "uid" : "c88e97216bcee970",
        "reportUrl" : "https://lambotik.github.io/Oblache/298//#testresult/c88e97216bcee970",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1738198769081,
          "stop" : 1738198769699,
          "duration" : 618
        }
      }, {
        "uid" : "596554e4f0ad0bf9",
        "reportUrl" : "https://lambotik.github.io/Oblache/297//#testresult/596554e4f0ad0bf9",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1738112423439,
          "stop" : 1738112424055,
          "duration" : 616
        }
      } ]
    },
    "tags" : [ "@pytest.mark.xfail(reason='There are databases that need to be deleted manually.')" ]
  },
  "source" : "bc2a9ff3f8e69da1.json",
  "parameterValues" : [ ]
}