{
  "uid" : "d975db1f4fa1c075",
  "name" : "GET list list_dbtypes.",
  "fullName" : "tests_api.test_get.TestGET#test_get_list_db_types",
  "historyId" : "6a0e155f2293c93d13b55a433b02f52e",
  "time" : {
    "start" : 1755223216096,
    "stop" : 1755223216374,
    "duration" : 278
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 502",
  "statusTrace" : "self = <tests_api.test_get.TestGET object at 0x7ff642d5d040>\n\n    @allure.title('GET list list_dbtypes.')\n    def test_get_list_db_types(self):\n        response = API.get_list_db_types()\n>       Checking.check_status_code(response, 200)\n\ntests_api/test_get.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : true,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 502",
    "statusTrace" : "self = <tests_api.test_get.TestGET object at 0x7ff642d5d040>\n\n    @allure.title('GET list list_dbtypes.')\n    def test_get_list_db_types(self):\n        response = API.get_list_db_types()\n>       Checking.check_status_code(response, 200)\n\ntests_api/test_get.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "Endpoint: /list_dbtypes",
      "time" : {
        "start" : 1755223216374,
        "stop" : 1755223216374,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request:",
      "time" : {
        "start" : 1755223216374,
        "stop" : 1755223216374,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': ''}",
        "time" : {
          "start" : 1755223216374,
          "stop" : 1755223216374,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Body: None",
        "time" : {
          "start" : 1755223216374,
          "stop" : 1755223216374,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Response:",
      "time" : {
        "start" : 1755223216374,
        "stop" : 1755223216374,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Status code: 502",
        "time" : {
          "start" : 1755223216374,
          "stop" : 1755223216374,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "JSON: <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
        "time" : {
          "start" : 1755223216374,
          "stop" : 1755223216374,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 200 == Response status code: 502",
      "time" : {
        "start" : 1755223216374,
        "stop" : 1755223216374,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 502\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 8,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "severity",
    "value" : "critical"
  }, {
    "name" : "suite",
    "value" : "GET"
  }, {
    "name" : "epic",
    "value" : "Connection DB"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestGET"
  }, {
    "name" : "host",
    "value" : "pkrvmubgrv54qmi"
  }, {
    "name" : "thread",
    "value" : "2604-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_get"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "critical",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 4,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 18,
        "unknown" : 0,
        "total" : 22
      },
      "items" : [ {
        "uid" : "9bc44f9fe16ab6f6",
        "reportUrl" : "https://lambotik.github.io/Oblache/471//#testresult/9bc44f9fe16ab6f6",
        "status" : "passed",
        "time" : {
          "start" : 1755136907414,
          "stop" : 1755136907780,
          "duration" : 366
        }
      }, {
        "uid" : "7b386be91c7ed928",
        "reportUrl" : "https://lambotik.github.io/Oblache/470//#testresult/7b386be91c7ed928",
        "status" : "passed",
        "time" : {
          "start" : 1755050443500,
          "stop" : 1755050443869,
          "duration" : 369
        }
      }, {
        "uid" : "9ddbc9b0a89e42e4",
        "reportUrl" : "https://lambotik.github.io/Oblache/469//#testresult/9ddbc9b0a89e42e4",
        "status" : "passed",
        "time" : {
          "start" : 1754963921531,
          "stop" : 1754963921835,
          "duration" : 304
        }
      }, {
        "uid" : "18e99d1cff1f11cb",
        "reportUrl" : "https://lambotik.github.io/Oblache/468//#testresult/18e99d1cff1f11cb",
        "status" : "passed",
        "time" : {
          "start" : 1754878245143,
          "stop" : 1754878245635,
          "duration" : 492
        }
      }, {
        "uid" : "719c795afdf5d621",
        "reportUrl" : "https://lambotik.github.io/Oblache/467//#testresult/719c795afdf5d621",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1754791996889,
          "stop" : 1754791997384,
          "duration" : 495
        }
      }, {
        "uid" : "44fa6d980709e141",
        "reportUrl" : "https://lambotik.github.io/Oblache/466//#testresult/44fa6d980709e141",
        "status" : "passed",
        "time" : {
          "start" : 1754704781449,
          "stop" : 1754704781762,
          "duration" : 313
        }
      }, {
        "uid" : "c2ca921e72cf8d67",
        "reportUrl" : "https://lambotik.github.io/Oblache/465//#testresult/c2ca921e72cf8d67",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1754618955414,
          "stop" : 1754618955895,
          "duration" : 481
        }
      }, {
        "uid" : "a5a7ffe7fe696120",
        "reportUrl" : "https://lambotik.github.io/Oblache/464//#testresult/a5a7ffe7fe696120",
        "status" : "passed",
        "time" : {
          "start" : 1754532706895,
          "stop" : 1754532707392,
          "duration" : 497
        }
      }, {
        "uid" : "52e12694efd8c49d",
        "reportUrl" : "https://lambotik.github.io/Oblache/463//#testresult/52e12694efd8c49d",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1754446170941,
          "stop" : 1754446171424,
          "duration" : 483
        }
      }, {
        "uid" : "e10f9afe52c77ea3",
        "reportUrl" : "https://lambotik.github.io/Oblache/462//#testresult/e10f9afe52c77ea3",
        "status" : "passed",
        "time" : {
          "start" : 1754359962203,
          "stop" : 1754359962561,
          "duration" : 358
        }
      }, {
        "uid" : "15fff244f1357f7a",
        "reportUrl" : "https://lambotik.github.io/Oblache/461//#testresult/15fff244f1357f7a",
        "status" : "passed",
        "time" : {
          "start" : 1754274286212,
          "stop" : 1754274286567,
          "duration" : 355
        }
      }, {
        "uid" : "a6af07eb211dd2a8",
        "reportUrl" : "https://lambotik.github.io/Oblache/460//#testresult/a6af07eb211dd2a8",
        "status" : "passed",
        "time" : {
          "start" : 1754187949037,
          "stop" : 1754187949563,
          "duration" : 526
        }
      }, {
        "uid" : "7fe79d82a8f60b3c",
        "reportUrl" : "https://lambotik.github.io/Oblache/459//#testresult/7fe79d82a8f60b3c",
        "status" : "passed",
        "time" : {
          "start" : 1754100282397,
          "stop" : 1754100282764,
          "duration" : 367
        }
      }, {
        "uid" : "9340b0a5c3528bf7",
        "reportUrl" : "https://lambotik.github.io/Oblache/458//#testresult/9340b0a5c3528bf7",
        "status" : "passed",
        "time" : {
          "start" : 1754015204479,
          "stop" : 1754015204784,
          "duration" : 305
        }
      }, {
        "uid" : "299d38d3418ac45c",
        "reportUrl" : "https://lambotik.github.io/Oblache/457//#testresult/299d38d3418ac45c",
        "status" : "passed",
        "time" : {
          "start" : 1753927783762,
          "stop" : 1753927784199,
          "duration" : 437
        }
      }, {
        "uid" : "c63e80c9bd54923",
        "reportUrl" : "https://lambotik.github.io/Oblache/456//#testresult/c63e80c9bd54923",
        "status" : "passed",
        "time" : {
          "start" : 1753841386405,
          "stop" : 1753841386755,
          "duration" : 350
        }
      }, {
        "uid" : "65816290524c718c",
        "reportUrl" : "https://lambotik.github.io/Oblache/455//#testresult/65816290524c718c",
        "status" : "passed",
        "time" : {
          "start" : 1753755945075,
          "stop" : 1753755945588,
          "duration" : 513
        }
      }, {
        "uid" : "931624e895d4b7d9",
        "reportUrl" : "https://lambotik.github.io/Oblache/454//#testresult/931624e895d4b7d9",
        "status" : "passed",
        "time" : {
          "start" : 1753668829444,
          "stop" : 1753668829932,
          "duration" : 488
        }
      }, {
        "uid" : "6f1700dd9e5c8cd6",
        "reportUrl" : "https://lambotik.github.io/Oblache/453//#testresult/6f1700dd9e5c8cd6",
        "status" : "passed",
        "time" : {
          "start" : 1753582966747,
          "stop" : 1753582967254,
          "duration" : 507
        }
      }, {
        "uid" : "41a32095da3674e2",
        "reportUrl" : "https://lambotik.github.io/Oblache/452//#testresult/41a32095da3674e2",
        "status" : "passed",
        "time" : {
          "start" : 1753495364548,
          "stop" : 1753495364851,
          "duration" : 303
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "d975db1f4fa1c075.json",
  "parameterValues" : [ ]
}