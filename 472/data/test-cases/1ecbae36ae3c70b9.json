{
  "uid" : "1ecbae36ae3c70b9",
  "name" : "GET list list_dbtypes.",
  "fullName" : "tests_api.test_bd.TestGET#test_get_list_db_types",
  "historyId" : "a5ae0cd958e41b035b5b00dc6373e042",
  "time" : {
    "start" : 1755223197933,
    "stop" : 1755223198211,
    "duration" : 278
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 502",
  "statusTrace" : "self = <tests_api.test_bd.TestGET object at 0x7ff642ff2ff0>\n\n    @allure.title('GET list list_dbtypes.')\n    def test_get_list_db_types(self):\n        response = API.get_list_db_types()\n>       Checking.check_status_code(response, 200)\n\ntests_api/test_bd.py:78: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : true,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 502",
    "statusTrace" : "self = <tests_api.test_bd.TestGET object at 0x7ff642ff2ff0>\n\n    @allure.title('GET list list_dbtypes.')\n    def test_get_list_db_types(self):\n        response = API.get_list_db_types()\n>       Checking.check_status_code(response, 200)\n\ntests_api/test_bd.py:78: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "Endpoint: /list_dbtypes",
      "time" : {
        "start" : 1755223198210,
        "stop" : 1755223198210,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request:",
      "time" : {
        "start" : 1755223198210,
        "stop" : 1755223198211,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': ''}",
        "time" : {
          "start" : 1755223198211,
          "stop" : 1755223198211,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Body: None",
        "time" : {
          "start" : 1755223198211,
          "stop" : 1755223198211,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Response:",
      "time" : {
        "start" : 1755223198211,
        "stop" : 1755223198211,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Status code: 502",
        "time" : {
          "start" : 1755223198211,
          "stop" : 1755223198211,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "JSON: <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
        "time" : {
          "start" : 1755223198211,
          "stop" : 1755223198211,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 200 == Response status code: 502",
      "time" : {
        "start" : 1755223198211,
        "stop" : 1755223198211,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 502\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 8,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "GET"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestGET"
  }, {
    "name" : "host",
    "value" : "pkrvmubgrv54qmi"
  }, {
    "name" : "thread",
    "value" : "2604-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 25,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 232,
        "unknown" : 0,
        "total" : 257
      },
      "items" : [ {
        "uid" : "b51618366746dce8",
        "reportUrl" : "https://lambotik.github.io/Oblache/471//#testresult/b51618366746dce8",
        "status" : "passed",
        "time" : {
          "start" : 1755136757533,
          "stop" : 1755136757915,
          "duration" : 382
        }
      }, {
        "uid" : "5d9b53712a862bcf",
        "reportUrl" : "https://lambotik.github.io/Oblache/470//#testresult/5d9b53712a862bcf",
        "status" : "passed",
        "time" : {
          "start" : 1755050329456,
          "stop" : 1755050329816,
          "duration" : 360
        }
      }, {
        "uid" : "54d7bd1ebabe4dc1",
        "reportUrl" : "https://lambotik.github.io/Oblache/469//#testresult/54d7bd1ebabe4dc1",
        "status" : "passed",
        "time" : {
          "start" : 1754963806374,
          "stop" : 1754963806767,
          "duration" : 393
        }
      }, {
        "uid" : "9da048fa8077c5a2",
        "reportUrl" : "https://lambotik.github.io/Oblache/468//#testresult/9da048fa8077c5a2",
        "status" : "passed",
        "time" : {
          "start" : 1754878143046,
          "stop" : 1754878143554,
          "duration" : 508
        }
      }, {
        "uid" : "f8948a7104d92562",
        "reportUrl" : "https://lambotik.github.io/Oblache/467//#testresult/f8948a7104d92562",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1754791966718,
          "stop" : 1754791967225,
          "duration" : 507
        }
      }, {
        "uid" : "8bcb8880b06b7fad",
        "reportUrl" : "https://lambotik.github.io/Oblache/466//#testresult/8bcb8880b06b7fad",
        "status" : "passed",
        "time" : {
          "start" : 1754704665161,
          "stop" : 1754704665480,
          "duration" : 319
        }
      }, {
        "uid" : "90a48386717b5150",
        "reportUrl" : "https://lambotik.github.io/Oblache/465//#testresult/90a48386717b5150",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1754618925459,
          "stop" : 1754618926050,
          "duration" : 591
        }
      }, {
        "uid" : "86434c7c008a5de7",
        "reportUrl" : "https://lambotik.github.io/Oblache/464//#testresult/86434c7c008a5de7",
        "status" : "passed",
        "time" : {
          "start" : 1754532555479,
          "stop" : 1754532556001,
          "duration" : 522
        }
      }, {
        "uid" : "a23ac647c31e0124",
        "reportUrl" : "https://lambotik.github.io/Oblache/463//#testresult/a23ac647c31e0124",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1754446141070,
          "stop" : 1754446141650,
          "duration" : 580
        }
      }, {
        "uid" : "4deaf87328b2353f",
        "reportUrl" : "https://lambotik.github.io/Oblache/462//#testresult/4deaf87328b2353f",
        "status" : "passed",
        "time" : {
          "start" : 1754359837127,
          "stop" : 1754359837528,
          "duration" : 401
        }
      }, {
        "uid" : "357e5afc3cc6bc3e",
        "reportUrl" : "https://lambotik.github.io/Oblache/461//#testresult/357e5afc3cc6bc3e",
        "status" : "passed",
        "time" : {
          "start" : 1754274162779,
          "stop" : 1754274163167,
          "duration" : 388
        }
      }, {
        "uid" : "5cc96c4d94e50545",
        "reportUrl" : "https://lambotik.github.io/Oblache/460//#testresult/5cc96c4d94e50545",
        "status" : "passed",
        "time" : {
          "start" : 1754187785613,
          "stop" : 1754187786138,
          "duration" : 525
        }
      }, {
        "uid" : "fa89453aa431ebd9",
        "reportUrl" : "https://lambotik.github.io/Oblache/459//#testresult/fa89453aa431ebd9",
        "status" : "passed",
        "time" : {
          "start" : 1754100135498,
          "stop" : 1754100135863,
          "duration" : 365
        }
      }, {
        "uid" : "65d6b76cf21bed49",
        "reportUrl" : "https://lambotik.github.io/Oblache/458//#testresult/65d6b76cf21bed49",
        "status" : "passed",
        "time" : {
          "start" : 1754015061032,
          "stop" : 1754015061348,
          "duration" : 316
        }
      }, {
        "uid" : "904423d271501f4c",
        "reportUrl" : "https://lambotik.github.io/Oblache/457//#testresult/904423d271501f4c",
        "status" : "passed",
        "time" : {
          "start" : 1753927657564,
          "stop" : 1753927658046,
          "duration" : 482
        }
      }, {
        "uid" : "684c7c00c3d589c6",
        "reportUrl" : "https://lambotik.github.io/Oblache/456//#testresult/684c7c00c3d589c6",
        "status" : "passed",
        "time" : {
          "start" : 1753841283356,
          "stop" : 1753841283774,
          "duration" : 418
        }
      }, {
        "uid" : "841fb9489a54aecc",
        "reportUrl" : "https://lambotik.github.io/Oblache/455//#testresult/841fb9489a54aecc",
        "status" : "passed",
        "time" : {
          "start" : 1753755793492,
          "stop" : 1753755793990,
          "duration" : 498
        }
      }, {
        "uid" : "aac8ee019aa1032a",
        "reportUrl" : "https://lambotik.github.io/Oblache/454//#testresult/aac8ee019aa1032a",
        "status" : "passed",
        "time" : {
          "start" : 1753668722056,
          "stop" : 1753668722595,
          "duration" : 539
        }
      }, {
        "uid" : "93103aa150ad0381",
        "reportUrl" : "https://lambotik.github.io/Oblache/453//#testresult/93103aa150ad0381",
        "status" : "passed",
        "time" : {
          "start" : 1753582857672,
          "stop" : 1753582858300,
          "duration" : 628
        }
      }, {
        "uid" : "e8778b8dd6ca866a",
        "reportUrl" : "https://lambotik.github.io/Oblache/452//#testresult/e8778b8dd6ca866a",
        "status" : "passed",
        "time" : {
          "start" : 1753495267191,
          "stop" : 1753495267571,
          "duration" : 380
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "1ecbae36ae3c70b9.json",
  "parameterValues" : [ ]
}