{
  "uid" : "2af37ed7c99e6f9e",
  "name" : "GET list list_dbenvs.",
  "fullName" : "tests_api.test_bd.TestGET#test_get_list_envs",
  "historyId" : "2fa206bdbd2e543ff40536a26ccb5d10",
  "time" : {
    "start" : 1755223198527,
    "stop" : 1755223198893,
    "duration" : 366
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 502",
  "statusTrace" : "self = <tests_api.test_bd.TestGET object at 0x7ff642ff3230>\n\n    @allure.title('GET list list_dbenvs.')\n    def test_get_list_envs(self):\n        response = API.get_list_envs()\n>       Checking.check_status_code(response, 200)\n\ntests_api/test_bd.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : true,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 502",
    "statusTrace" : "self = <tests_api.test_bd.TestGET object at 0x7ff642ff3230>\n\n    @allure.title('GET list list_dbenvs.')\n    def test_get_list_envs(self):\n        response = API.get_list_envs()\n>       Checking.check_status_code(response, 200)\n\ntests_api/test_bd.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "Endpoint: /list_dbenvs",
      "time" : {
        "start" : 1755223198893,
        "stop" : 1755223198893,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request:",
      "time" : {
        "start" : 1755223198893,
        "stop" : 1755223198893,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': ''}",
        "time" : {
          "start" : 1755223198893,
          "stop" : 1755223198893,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Body: None",
        "time" : {
          "start" : 1755223198893,
          "stop" : 1755223198893,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Response:",
      "time" : {
        "start" : 1755223198893,
        "stop" : 1755223198893,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Status code: 502",
        "time" : {
          "start" : 1755223198893,
          "stop" : 1755223198893,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "JSON: <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
        "time" : {
          "start" : 1755223198893,
          "stop" : 1755223198893,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 200 == Response status code: 502",
      "time" : {
        "start" : 1755223198893,
        "stop" : 1755223198893,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 502\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 8,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "GET"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestGET"
  }, {
    "name" : "host",
    "value" : "pkrvmubgrv54qmi"
  }, {
    "name" : "thread",
    "value" : "2604-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 25,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 232,
        "unknown" : 0,
        "total" : 257
      },
      "items" : [ {
        "uid" : "79dac4578077fc4e",
        "reportUrl" : "https://lambotik.github.io/Oblache/471//#testresult/79dac4578077fc4e",
        "status" : "passed",
        "time" : {
          "start" : 1755136758284,
          "stop" : 1755136758814,
          "duration" : 530
        }
      }, {
        "uid" : "20a16afa5d6af8bd",
        "reportUrl" : "https://lambotik.github.io/Oblache/470//#testresult/20a16afa5d6af8bd",
        "status" : "passed",
        "time" : {
          "start" : 1755050330186,
          "stop" : 1755050330657,
          "duration" : 471
        }
      }, {
        "uid" : "ac491b5e3492f5c9",
        "reportUrl" : "https://lambotik.github.io/Oblache/469//#testresult/ac491b5e3492f5c9",
        "status" : "passed",
        "time" : {
          "start" : 1754963807103,
          "stop" : 1754963807406,
          "duration" : 303
        }
      }, {
        "uid" : "890a46c1095d4efd",
        "reportUrl" : "https://lambotik.github.io/Oblache/468//#testresult/890a46c1095d4efd",
        "status" : "passed",
        "time" : {
          "start" : 1754878144052,
          "stop" : 1754878144544,
          "duration" : 492
        }
      }, {
        "uid" : "3585f309598b8750",
        "reportUrl" : "https://lambotik.github.io/Oblache/467//#testresult/3585f309598b8750",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1754791967844,
          "stop" : 1754791968339,
          "duration" : 495
        }
      }, {
        "uid" : "534913473cc425f7",
        "reportUrl" : "https://lambotik.github.io/Oblache/466//#testresult/534913473cc425f7",
        "status" : "passed",
        "time" : {
          "start" : 1754704665823,
          "stop" : 1754704666138,
          "duration" : 315
        }
      }, {
        "uid" : "8582af2d0f7c5652",
        "reportUrl" : "https://lambotik.github.io/Oblache/465//#testresult/8582af2d0f7c5652",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1754618926680,
          "stop" : 1754618927148,
          "duration" : 468
        }
      }, {
        "uid" : "862b75bd20c7848f",
        "reportUrl" : "https://lambotik.github.io/Oblache/464//#testresult/862b75bd20c7848f",
        "status" : "passed",
        "time" : {
          "start" : 1754532556513,
          "stop" : 1754532557139,
          "duration" : 626
        }
      }, {
        "uid" : "bfc1e3a1970cf001",
        "reportUrl" : "https://lambotik.github.io/Oblache/463//#testresult/bfc1e3a1970cf001",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1754446142155,
          "stop" : 1754446142622,
          "duration" : 467
        }
      }, {
        "uid" : "d6803054eacb4c4c",
        "reportUrl" : "https://lambotik.github.io/Oblache/462//#testresult/d6803054eacb4c4c",
        "status" : "passed",
        "time" : {
          "start" : 1754359837886,
          "stop" : 1754359838246,
          "duration" : 360
        }
      }, {
        "uid" : "34ae103c64b32446",
        "reportUrl" : "https://lambotik.github.io/Oblache/461//#testresult/34ae103c64b32446",
        "status" : "passed",
        "time" : {
          "start" : 1754274163531,
          "stop" : 1754274163880,
          "duration" : 349
        }
      }, {
        "uid" : "9e81df4684d60499",
        "reportUrl" : "https://lambotik.github.io/Oblache/460//#testresult/9e81df4684d60499",
        "status" : "passed",
        "time" : {
          "start" : 1754187786638,
          "stop" : 1754187787258,
          "duration" : 620
        }
      }, {
        "uid" : "4255ecd3105bd456",
        "reportUrl" : "https://lambotik.github.io/Oblache/459//#testresult/4255ecd3105bd456",
        "status" : "passed",
        "time" : {
          "start" : 1754100136286,
          "stop" : 1754100136708,
          "duration" : 422
        }
      }, {
        "uid" : "c240076990dd043f",
        "reportUrl" : "https://lambotik.github.io/Oblache/458//#testresult/c240076990dd043f",
        "status" : "passed",
        "time" : {
          "start" : 1754015061662,
          "stop" : 1754015061967,
          "duration" : 305
        }
      }, {
        "uid" : "11abb358410b301a",
        "reportUrl" : "https://lambotik.github.io/Oblache/457//#testresult/11abb358410b301a",
        "status" : "passed",
        "time" : {
          "start" : 1753927658513,
          "stop" : 1753927658935,
          "duration" : 422
        }
      }, {
        "uid" : "46c5ec2fc5bc78d1",
        "reportUrl" : "https://lambotik.github.io/Oblache/456//#testresult/46c5ec2fc5bc78d1",
        "status" : "passed",
        "time" : {
          "start" : 1753841284176,
          "stop" : 1753841284564,
          "duration" : 388
        }
      }, {
        "uid" : "37893447547ed6e6",
        "reportUrl" : "https://lambotik.github.io/Oblache/455//#testresult/37893447547ed6e6",
        "status" : "passed",
        "time" : {
          "start" : 1753755794530,
          "stop" : 1753755795140,
          "duration" : 610
        }
      }, {
        "uid" : "2c25a686ebca943a",
        "reportUrl" : "https://lambotik.github.io/Oblache/454//#testresult/2c25a686ebca943a",
        "status" : "passed",
        "time" : {
          "start" : 1753668723081,
          "stop" : 1753668723568,
          "duration" : 487
        }
      }, {
        "uid" : "3a44ab6c5ef4fbaa",
        "reportUrl" : "https://lambotik.github.io/Oblache/453//#testresult/3a44ab6c5ef4fbaa",
        "status" : "passed",
        "time" : {
          "start" : 1753582858934,
          "stop" : 1753582859456,
          "duration" : 522
        }
      }, {
        "uid" : "cdff8db32ec2d336",
        "reportUrl" : "https://lambotik.github.io/Oblache/452//#testresult/cdff8db32ec2d336",
        "status" : "passed",
        "time" : {
          "start" : 1753495267890,
          "stop" : 1753495268193,
          "duration" : 303
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "2af37ed7c99e6f9e.json",
  "parameterValues" : [ ]
}