{
  "uid" : "a5b403f5d42a5365",
  "name" : "GET tos.",
  "fullName" : "tests_api.test_get.TestGET#test_tos",
  "historyId" : "ef2acb9cc12a30ca4ecbddfc67378d85",
  "time" : {
    "start" : 1755223215811,
    "stop" : 1755223216091,
    "duration" : 280
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 502",
  "statusTrace" : "self = <tests_api.test_get.TestGET object at 0x7ff642d5d460>\n\n    @allure.title('GET tos.')\n    def test_tos(self):\n        response = API.get_tos(token=TestGET.token)\n        file_name = LOADING_REPORT_DIR / 'my_report1.html'\n        attach = file_name\n        allure.attach.file(attach, name=f\"Report {datetime.today()}\", attachment_type=allure.attachment_type.HTML)\n>       Checking.check_status_code(response, 200)\n\ntests_api/test_get.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : true,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 502",
    "statusTrace" : "self = <tests_api.test_get.TestGET object at 0x7ff642d5d460>\n\n    @allure.title('GET tos.')\n    def test_tos(self):\n        response = API.get_tos(token=TestGET.token)\n        file_name = LOADING_REPORT_DIR / 'my_report1.html'\n        attach = file_name\n        allure.attach.file(attach, name=f\"Report {datetime.today()}\", attachment_type=allure.attachment_type.HTML)\n>       Checking.check_status_code(response, 200)\n\ntests_api/test_get.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "Endpoint: /tos",
      "time" : {
        "start" : 1755223216089,
        "stop" : 1755223216089,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request:",
      "time" : {
        "start" : 1755223216089,
        "stop" : 1755223216089,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': {None}}",
        "time" : {
          "start" : 1755223216089,
          "stop" : 1755223216089,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Body: None",
        "time" : {
          "start" : 1755223216089,
          "stop" : 1755223216089,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Response:",
      "time" : {
        "start" : 1755223216089,
        "stop" : 1755223216089,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Status code: 502",
        "time" : {
          "start" : 1755223216089,
          "stop" : 1755223216089,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "JSON: <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
        "time" : {
          "start" : 1755223216089,
          "stop" : 1755223216089,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 200 == Response status code: 502",
      "time" : {
        "start" : 1755223216091,
        "stop" : 1755223216091,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 502\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "4852f90b23a3055c",
      "name" : "Report 2025-08-15 02:00:16.088876",
      "source" : "4852f90b23a3055c.html",
      "type" : "text/html",
      "size" : 1651560
    } ],
    "parameters" : [ ],
    "stepsCount" : 8,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "severity",
    "value" : "critical"
  }, {
    "name" : "suite",
    "value" : "GET"
  }, {
    "name" : "epic",
    "value" : "Connection DB"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestGET"
  }, {
    "name" : "host",
    "value" : "pkrvmubgrv54qmi"
  }, {
    "name" : "thread",
    "value" : "2604-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_get"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "critical",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 4,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 18,
        "unknown" : 0,
        "total" : 22
      },
      "items" : [ {
        "uid" : "2603edb2a06c17ff",
        "reportUrl" : "https://lambotik.github.io/Oblache/471//#testresult/2603edb2a06c17ff",
        "status" : "passed",
        "time" : {
          "start" : 1755136907044,
          "stop" : 1755136907413,
          "duration" : 369
        }
      }, {
        "uid" : "d2909d566812cf61",
        "reportUrl" : "https://lambotik.github.io/Oblache/470//#testresult/d2909d566812cf61",
        "status" : "passed",
        "time" : {
          "start" : 1755050443129,
          "stop" : 1755050443498,
          "duration" : 369
        }
      }, {
        "uid" : "196d100a9413d63b",
        "reportUrl" : "https://lambotik.github.io/Oblache/469//#testresult/196d100a9413d63b",
        "status" : "passed",
        "time" : {
          "start" : 1754963921226,
          "stop" : 1754963921530,
          "duration" : 304
        }
      }, {
        "uid" : "7683cba151df253a",
        "reportUrl" : "https://lambotik.github.io/Oblache/468//#testresult/7683cba151df253a",
        "status" : "passed",
        "time" : {
          "start" : 1754878244656,
          "stop" : 1754878245142,
          "duration" : 486
        }
      }, {
        "uid" : "18d3d966ca86f401",
        "reportUrl" : "https://lambotik.github.io/Oblache/467//#testresult/18d3d966ca86f401",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1754791996400,
          "stop" : 1754791996883,
          "duration" : 483
        }
      }, {
        "uid" : "ad5931348351c927",
        "reportUrl" : "https://lambotik.github.io/Oblache/466//#testresult/ad5931348351c927",
        "status" : "passed",
        "time" : {
          "start" : 1754704781137,
          "stop" : 1754704781447,
          "duration" : 310
        }
      }, {
        "uid" : "dcd44b173bcf34ba",
        "reportUrl" : "https://lambotik.github.io/Oblache/465//#testresult/dcd44b173bcf34ba",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1754618954914,
          "stop" : 1754618955409,
          "duration" : 495
        }
      }, {
        "uid" : "df16a396b03504f3",
        "reportUrl" : "https://lambotik.github.io/Oblache/464//#testresult/df16a396b03504f3",
        "status" : "passed",
        "time" : {
          "start" : 1754532706370,
          "stop" : 1754532706894,
          "duration" : 524
        }
      }, {
        "uid" : "3e9e26abcc544076",
        "reportUrl" : "https://lambotik.github.io/Oblache/463//#testresult/3e9e26abcc544076",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1754446170467,
          "stop" : 1754446170935,
          "duration" : 468
        }
      }, {
        "uid" : "e0e432bfdc04d394",
        "reportUrl" : "https://lambotik.github.io/Oblache/462//#testresult/e0e432bfdc04d394",
        "status" : "passed",
        "time" : {
          "start" : 1754359961840,
          "stop" : 1754359962202,
          "duration" : 362
        }
      }, {
        "uid" : "7011b3814ab30f97",
        "reportUrl" : "https://lambotik.github.io/Oblache/461//#testresult/7011b3814ab30f97",
        "status" : "passed",
        "time" : {
          "start" : 1754274285851,
          "stop" : 1754274286210,
          "duration" : 359
        }
      }, {
        "uid" : "e9042325b7c6ecf",
        "reportUrl" : "https://lambotik.github.io/Oblache/460//#testresult/e9042325b7c6ecf",
        "status" : "passed",
        "time" : {
          "start" : 1754187948524,
          "stop" : 1754187949035,
          "duration" : 511
        }
      }, {
        "uid" : "af72f5adc2c7193c",
        "reportUrl" : "https://lambotik.github.io/Oblache/459//#testresult/af72f5adc2c7193c",
        "status" : "passed",
        "time" : {
          "start" : 1754100282026,
          "stop" : 1754100282396,
          "duration" : 370
        }
      }, {
        "uid" : "bb31ace7bffe53c4",
        "reportUrl" : "https://lambotik.github.io/Oblache/458//#testresult/bb31ace7bffe53c4",
        "status" : "passed",
        "time" : {
          "start" : 1754015204172,
          "stop" : 1754015204477,
          "duration" : 305
        }
      }, {
        "uid" : "c775f2c70f9974ba",
        "reportUrl" : "https://lambotik.github.io/Oblache/457//#testresult/c775f2c70f9974ba",
        "status" : "passed",
        "time" : {
          "start" : 1753927783383,
          "stop" : 1753927783760,
          "duration" : 377
        }
      }, {
        "uid" : "61c7dd287b847ef6",
        "reportUrl" : "https://lambotik.github.io/Oblache/456//#testresult/61c7dd287b847ef6",
        "status" : "passed",
        "time" : {
          "start" : 1753841386045,
          "stop" : 1753841386404,
          "duration" : 359
        }
      }, {
        "uid" : "bdbf088eeb442d00",
        "reportUrl" : "https://lambotik.github.io/Oblache/455//#testresult/bdbf088eeb442d00",
        "status" : "passed",
        "time" : {
          "start" : 1753755944574,
          "stop" : 1753755945073,
          "duration" : 499
        }
      }, {
        "uid" : "971d9d422e4100ea",
        "reportUrl" : "https://lambotik.github.io/Oblache/454//#testresult/971d9d422e4100ea",
        "status" : "passed",
        "time" : {
          "start" : 1753668828953,
          "stop" : 1753668829443,
          "duration" : 490
        }
      }, {
        "uid" : "75de9a43b8dc5793",
        "reportUrl" : "https://lambotik.github.io/Oblache/453//#testresult/75de9a43b8dc5793",
        "status" : "passed",
        "time" : {
          "start" : 1753582966236,
          "stop" : 1753582966745,
          "duration" : 509
        }
      }, {
        "uid" : "8f36952f25244e7c",
        "reportUrl" : "https://lambotik.github.io/Oblache/452//#testresult/8f36952f25244e7c",
        "status" : "passed",
        "time" : {
          "start" : 1753495364220,
          "stop" : 1753495364546,
          "duration" : 326
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "a5b403f5d42a5365.json",
  "parameterValues" : [ ]
}