{
  "uid" : "8f86c6c21d9576af",
  "name" : "GET list list_regions.",
  "fullName" : "tests_api.test_get.TestGET#test_get_list_regions",
  "historyId" : "caf5f29c1d3af9493cefa2fc8dac8ee3",
  "time" : {
    "start" : 1755223216977,
    "stop" : 1755223217254,
    "duration" : 277
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 502",
  "statusTrace" : "self = <tests_api.test_get.TestGET object at 0x7ff642d5d7f0>\n\n    @allure.title('GET list list_regions.')\n    def test_get_list_regions(self):\n        response = API.get_list_regions()\n>       Checking.check_status_code(response, 200)\n\ntests_api/test_get.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : true,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 502",
    "statusTrace" : "self = <tests_api.test_get.TestGET object at 0x7ff642d5d7f0>\n\n    @allure.title('GET list list_regions.')\n    def test_get_list_regions(self):\n        response = API.get_list_regions()\n>       Checking.check_status_code(response, 200)\n\ntests_api/test_get.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "Endpoint: /list_regions",
      "time" : {
        "start" : 1755223217254,
        "stop" : 1755223217254,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request:",
      "time" : {
        "start" : 1755223217254,
        "stop" : 1755223217254,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': ''}",
        "time" : {
          "start" : 1755223217254,
          "stop" : 1755223217254,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Body: None",
        "time" : {
          "start" : 1755223217254,
          "stop" : 1755223217254,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Response:",
      "time" : {
        "start" : 1755223217254,
        "stop" : 1755223217254,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Status code: 502",
        "time" : {
          "start" : 1755223217254,
          "stop" : 1755223217254,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "JSON: <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
        "time" : {
          "start" : 1755223217254,
          "stop" : 1755223217254,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 200 == Response status code: 502",
      "time" : {
        "start" : 1755223217254,
        "stop" : 1755223217254,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 502\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 8,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "severity",
    "value" : "critical"
  }, {
    "name" : "suite",
    "value" : "GET"
  }, {
    "name" : "epic",
    "value" : "Connection DB"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestGET"
  }, {
    "name" : "host",
    "value" : "pkrvmubgrv54qmi"
  }, {
    "name" : "thread",
    "value" : "2604-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_get"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "critical",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 4,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 18,
        "unknown" : 0,
        "total" : 22
      },
      "items" : [ {
        "uid" : "804473e8a866033e",
        "reportUrl" : "https://lambotik.github.io/Oblache/471//#testresult/804473e8a866033e",
        "status" : "passed",
        "time" : {
          "start" : 1755136908525,
          "stop" : 1755136908894,
          "duration" : 369
        }
      }, {
        "uid" : "67067c2083a92e88",
        "reportUrl" : "https://lambotik.github.io/Oblache/470//#testresult/67067c2083a92e88",
        "status" : "passed",
        "time" : {
          "start" : 1755050444605,
          "stop" : 1755050444970,
          "duration" : 365
        }
      }, {
        "uid" : "a4fe2ef6bf26c129",
        "reportUrl" : "https://lambotik.github.io/Oblache/469//#testresult/a4fe2ef6bf26c129",
        "status" : "passed",
        "time" : {
          "start" : 1754963922456,
          "stop" : 1754963922758,
          "duration" : 302
        }
      }, {
        "uid" : "f351eb2dc89524aa",
        "reportUrl" : "https://lambotik.github.io/Oblache/468//#testresult/f351eb2dc89524aa",
        "status" : "passed",
        "time" : {
          "start" : 1754878246615,
          "stop" : 1754878247095,
          "duration" : 480
        }
      }, {
        "uid" : "baa69ab65df4eb9",
        "reportUrl" : "https://lambotik.github.io/Oblache/467//#testresult/baa69ab65df4eb9",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1754791998335,
          "stop" : 1754791998817,
          "duration" : 482
        }
      }, {
        "uid" : "4575f062ffc5e847",
        "reportUrl" : "https://lambotik.github.io/Oblache/466//#testresult/4575f062ffc5e847",
        "status" : "passed",
        "time" : {
          "start" : 1754704782388,
          "stop" : 1754704782707,
          "duration" : 319
        }
      }, {
        "uid" : "962229b0e6b7746e",
        "reportUrl" : "https://lambotik.github.io/Oblache/465//#testresult/962229b0e6b7746e",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1754618956871,
          "stop" : 1754618957337,
          "duration" : 466
        }
      }, {
        "uid" : "a47d51fe3f1661ac",
        "reportUrl" : "https://lambotik.github.io/Oblache/464//#testresult/a47d51fe3f1661ac",
        "status" : "passed",
        "time" : {
          "start" : 1754532708417,
          "stop" : 1754532708911,
          "duration" : 494
        }
      }, {
        "uid" : "a75471006a9dc4c9",
        "reportUrl" : "https://lambotik.github.io/Oblache/463//#testresult/a75471006a9dc4c9",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1754446172389,
          "stop" : 1754446172872,
          "duration" : 483
        }
      }, {
        "uid" : "99a60ba769edee5f",
        "reportUrl" : "https://lambotik.github.io/Oblache/462//#testresult/99a60ba769edee5f",
        "status" : "passed",
        "time" : {
          "start" : 1754359963280,
          "stop" : 1754359963625,
          "duration" : 345
        }
      }, {
        "uid" : "5e6b7a5520fc4ae1",
        "reportUrl" : "https://lambotik.github.io/Oblache/461//#testresult/5e6b7a5520fc4ae1",
        "status" : "passed",
        "time" : {
          "start" : 1754274287285,
          "stop" : 1754274287652,
          "duration" : 367
        }
      }, {
        "uid" : "38e37610b3da5641",
        "reportUrl" : "https://lambotik.github.io/Oblache/460//#testresult/38e37610b3da5641",
        "status" : "passed",
        "time" : {
          "start" : 1754187950563,
          "stop" : 1754187951075,
          "duration" : 512
        }
      }, {
        "uid" : "aec1fc5fc12cf59f",
        "reportUrl" : "https://lambotik.github.io/Oblache/459//#testresult/aec1fc5fc12cf59f",
        "status" : "passed",
        "time" : {
          "start" : 1754100283489,
          "stop" : 1754100283852,
          "duration" : 363
        }
      }, {
        "uid" : "1262c8453beb5d4e",
        "reportUrl" : "https://lambotik.github.io/Oblache/458//#testresult/1262c8453beb5d4e",
        "status" : "passed",
        "time" : {
          "start" : 1754015205397,
          "stop" : 1754015205703,
          "duration" : 306
        }
      }, {
        "uid" : "6b1b1c759cd0d3ad",
        "reportUrl" : "https://lambotik.github.io/Oblache/457//#testresult/6b1b1c759cd0d3ad",
        "status" : "passed",
        "time" : {
          "start" : 1753927785037,
          "stop" : 1753927785474,
          "duration" : 437
        }
      }, {
        "uid" : "3283c62c36dd1a89",
        "reportUrl" : "https://lambotik.github.io/Oblache/456//#testresult/3283c62c36dd1a89",
        "status" : "passed",
        "time" : {
          "start" : 1753841387485,
          "stop" : 1753841387839,
          "duration" : 354
        }
      }, {
        "uid" : "2c63d02a4f6184b3",
        "reportUrl" : "https://lambotik.github.io/Oblache/455//#testresult/2c63d02a4f6184b3",
        "status" : "passed",
        "time" : {
          "start" : 1753755946583,
          "stop" : 1753755947078,
          "duration" : 495
        }
      }, {
        "uid" : "752666c41b4bf2c",
        "reportUrl" : "https://lambotik.github.io/Oblache/454//#testresult/752666c41b4bf2c",
        "status" : "passed",
        "time" : {
          "start" : 1753668830916,
          "stop" : 1753668831399,
          "duration" : 483
        }
      }, {
        "uid" : "cbad5ba900037326",
        "reportUrl" : "https://lambotik.github.io/Oblache/453//#testresult/cbad5ba900037326",
        "status" : "passed",
        "time" : {
          "start" : 1753582968310,
          "stop" : 1753582968820,
          "duration" : 510
        }
      }, {
        "uid" : "2b2e8fca69863d60",
        "reportUrl" : "https://lambotik.github.io/Oblache/452//#testresult/2b2e8fca69863d60",
        "status" : "passed",
        "time" : {
          "start" : 1753495365467,
          "stop" : 1753495365775,
          "duration" : 308
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "8f86c6c21d9576af.json",
  "parameterValues" : [ ]
}