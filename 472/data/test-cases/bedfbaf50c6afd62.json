{
  "uid" : "bedfbaf50c6afd62",
  "name" : "GET list db_versions.",
  "fullName" : "tests_api.test_bd.TestGET#test_get_list_db_versions",
  "historyId" : "8bbfe42adf25237260fbe695e4aa058a",
  "time" : {
    "start" : 1755223198222,
    "stop" : 1755223198515,
    "duration" : 293
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 502",
  "statusTrace" : "self = <tests_api.test_bd.TestGET object at 0x7ff642ff3110>\n\n    @allure.title('GET list db_versions.')\n    def test_get_list_db_versions(self):\n        response = API.get_list_dbversions()\n>       Checking.check_status_code(response, 200)\n\ntests_api/test_bd.py:83: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : true,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 502",
    "statusTrace" : "self = <tests_api.test_bd.TestGET object at 0x7ff642ff3110>\n\n    @allure.title('GET list db_versions.')\n    def test_get_list_db_versions(self):\n        response = API.get_list_dbversions()\n>       Checking.check_status_code(response, 200)\n\ntests_api/test_bd.py:83: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "Endpoint: /list_dbversions",
      "time" : {
        "start" : 1755223198515,
        "stop" : 1755223198515,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request:",
      "time" : {
        "start" : 1755223198515,
        "stop" : 1755223198515,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': ''}",
        "time" : {
          "start" : 1755223198515,
          "stop" : 1755223198515,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Body: None",
        "time" : {
          "start" : 1755223198515,
          "stop" : 1755223198515,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Response:",
      "time" : {
        "start" : 1755223198515,
        "stop" : 1755223198515,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Status code: 502",
        "time" : {
          "start" : 1755223198515,
          "stop" : 1755223198515,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "JSON: <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
        "time" : {
          "start" : 1755223198515,
          "stop" : 1755223198515,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 200 == Response status code: 502",
      "time" : {
        "start" : 1755223198515,
        "stop" : 1755223198515,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 502\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 8,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "GET"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestGET"
  }, {
    "name" : "host",
    "value" : "pkrvmubgrv54qmi"
  }, {
    "name" : "thread",
    "value" : "2604-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 26,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 231,
        "unknown" : 0,
        "total" : 257
      },
      "items" : [ {
        "uid" : "2d313d8ac96bdc33",
        "reportUrl" : "https://lambotik.github.io/Oblache/471//#testresult/2d313d8ac96bdc33",
        "status" : "passed",
        "time" : {
          "start" : 1755136757917,
          "stop" : 1755136758282,
          "duration" : 365
        }
      }, {
        "uid" : "1ef2380fce947997",
        "reportUrl" : "https://lambotik.github.io/Oblache/470//#testresult/1ef2380fce947997",
        "status" : "passed",
        "time" : {
          "start" : 1755050329817,
          "stop" : 1755050330185,
          "duration" : 368
        }
      }, {
        "uid" : "606744f88a371f07",
        "reportUrl" : "https://lambotik.github.io/Oblache/469//#testresult/606744f88a371f07",
        "status" : "passed",
        "time" : {
          "start" : 1754963806768,
          "stop" : 1754963807102,
          "duration" : 334
        }
      }, {
        "uid" : "a75addec7e62f238",
        "reportUrl" : "https://lambotik.github.io/Oblache/468//#testresult/a75addec7e62f238",
        "status" : "passed",
        "time" : {
          "start" : 1754878143556,
          "stop" : 1754878144051,
          "duration" : 495
        }
      }, {
        "uid" : "90dd682ae6872cfa",
        "reportUrl" : "https://lambotik.github.io/Oblache/467//#testresult/90dd682ae6872cfa",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1754791967237,
          "stop" : 1754791967832,
          "duration" : 595
        }
      }, {
        "uid" : "caa38b5398c391bd",
        "reportUrl" : "https://lambotik.github.io/Oblache/466//#testresult/caa38b5398c391bd",
        "status" : "passed",
        "time" : {
          "start" : 1754704665481,
          "stop" : 1754704665822,
          "duration" : 341
        }
      }, {
        "uid" : "9a6a1b72a70cb0fe",
        "reportUrl" : "https://lambotik.github.io/Oblache/465//#testresult/9a6a1b72a70cb0fe",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1754618926061,
          "stop" : 1754618926668,
          "duration" : 607
        }
      }, {
        "uid" : "2110e35600554a99",
        "reportUrl" : "https://lambotik.github.io/Oblache/464//#testresult/2110e35600554a99",
        "status" : "passed",
        "time" : {
          "start" : 1754532556002,
          "stop" : 1754532556512,
          "duration" : 510
        }
      }, {
        "uid" : "2b1fc434ef1222cf",
        "reportUrl" : "https://lambotik.github.io/Oblache/463//#testresult/2b1fc434ef1222cf",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1754446141662,
          "stop" : 1754446142144,
          "duration" : 482
        }
      }, {
        "uid" : "7e9b28ae667f7813",
        "reportUrl" : "https://lambotik.github.io/Oblache/462//#testresult/7e9b28ae667f7813",
        "status" : "passed",
        "time" : {
          "start" : 1754359837529,
          "stop" : 1754359837885,
          "duration" : 356
        }
      }, {
        "uid" : "2f93261af49c3c62",
        "reportUrl" : "https://lambotik.github.io/Oblache/461//#testresult/2f93261af49c3c62",
        "status" : "passed",
        "time" : {
          "start" : 1754274163169,
          "stop" : 1754274163529,
          "duration" : 360
        }
      }, {
        "uid" : "de61c1017923b6a3",
        "reportUrl" : "https://lambotik.github.io/Oblache/460//#testresult/de61c1017923b6a3",
        "status" : "passed",
        "time" : {
          "start" : 1754187786140,
          "stop" : 1754187786636,
          "duration" : 496
        }
      }, {
        "uid" : "c4ed9d8e0693cf96",
        "reportUrl" : "https://lambotik.github.io/Oblache/459//#testresult/c4ed9d8e0693cf96",
        "status" : "passed",
        "time" : {
          "start" : 1754100135865,
          "stop" : 1754100136285,
          "duration" : 420
        }
      }, {
        "uid" : "2516d6fe94a07a77",
        "reportUrl" : "https://lambotik.github.io/Oblache/458//#testresult/2516d6fe94a07a77",
        "status" : "passed",
        "time" : {
          "start" : 1754015061349,
          "stop" : 1754015061660,
          "duration" : 311
        }
      }, {
        "uid" : "3a530a973c94f9b3",
        "reportUrl" : "https://lambotik.github.io/Oblache/457//#testresult/3a530a973c94f9b3",
        "status" : "passed",
        "time" : {
          "start" : 1753927658048,
          "stop" : 1753927658511,
          "duration" : 463
        }
      }, {
        "uid" : "b67144d4db66f85a",
        "reportUrl" : "https://lambotik.github.io/Oblache/456//#testresult/b67144d4db66f85a",
        "status" : "passed",
        "time" : {
          "start" : 1753841283776,
          "stop" : 1753841284174,
          "duration" : 398
        }
      }, {
        "uid" : "dda8c5348435f59e",
        "reportUrl" : "https://lambotik.github.io/Oblache/455//#testresult/dda8c5348435f59e",
        "status" : "passed",
        "time" : {
          "start" : 1753755793992,
          "stop" : 1753755794528,
          "duration" : 536
        }
      }, {
        "uid" : "90228ed438a7b363",
        "reportUrl" : "https://lambotik.github.io/Oblache/454//#testresult/90228ed438a7b363",
        "status" : "passed",
        "time" : {
          "start" : 1753668722596,
          "stop" : 1753668723080,
          "duration" : 484
        }
      }, {
        "uid" : "a9543e4ec0d5d9f8",
        "reportUrl" : "https://lambotik.github.io/Oblache/453//#testresult/a9543e4ec0d5d9f8",
        "status" : "passed",
        "time" : {
          "start" : 1753582858302,
          "stop" : 1753582858932,
          "duration" : 630
        }
      }, {
        "uid" : "9a7cba9df85b606f",
        "reportUrl" : "https://lambotik.github.io/Oblache/452//#testresult/9a7cba9df85b606f",
        "status" : "passed",
        "time" : {
          "start" : 1753495267573,
          "stop" : 1753495267888,
          "duration" : 315
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "bedfbaf50c6afd62.json",
  "parameterValues" : [ ]
}