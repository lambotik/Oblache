{
  "uid" : "73e16653b3d6c698",
  "name" : "GET qstatus.",
  "fullName" : "tests_api.test_get.TestGET#test_get_qstatus",
  "historyId" : "9fa70e1fffd106310db6af16889b7b8e",
  "time" : {
    "start" : 1755223217839,
    "stop" : 1755223218118,
    "duration" : 279
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 502",
  "statusTrace" : "self = <tests_api.test_get.TestGET object at 0x7ff642d5db50>\n\n    @allure.title('GET qstatus.')\n    def test_get_qstatus(self):\n        response = API.get_qstatus()\n>       Checking.check_status_code(response, 200)\n\ntests_api/test_get.py:73: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : true,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 502",
    "statusTrace" : "self = <tests_api.test_get.TestGET object at 0x7ff642d5db50>\n\n    @allure.title('GET qstatus.')\n    def test_get_qstatus(self):\n        response = API.get_qstatus()\n>       Checking.check_status_code(response, 200)\n\ntests_api/test_get.py:73: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "Endpoint: /qstatus",
      "time" : {
        "start" : 1755223218118,
        "stop" : 1755223218118,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request:",
      "time" : {
        "start" : 1755223218118,
        "stop" : 1755223218118,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': ''}",
        "time" : {
          "start" : 1755223218118,
          "stop" : 1755223218118,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Body: None",
        "time" : {
          "start" : 1755223218118,
          "stop" : 1755223218118,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Response:",
      "time" : {
        "start" : 1755223218118,
        "stop" : 1755223218118,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Status code: 502",
        "time" : {
          "start" : 1755223218118,
          "stop" : 1755223218118,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "JSON: <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
        "time" : {
          "start" : 1755223218118,
          "stop" : 1755223218118,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 200 == Response status code: 502",
      "time" : {
        "start" : 1755223218118,
        "stop" : 1755223218118,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 502\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 8,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "severity",
    "value" : "critical"
  }, {
    "name" : "suite",
    "value" : "GET"
  }, {
    "name" : "epic",
    "value" : "Connection DB"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestGET"
  }, {
    "name" : "host",
    "value" : "pkrvmubgrv54qmi"
  }, {
    "name" : "thread",
    "value" : "2604-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_get"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "critical",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 4,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 18,
        "unknown" : 0,
        "total" : 22
      },
      "items" : [ {
        "uid" : "c38482b602d277b1",
        "reportUrl" : "https://lambotik.github.io/Oblache/471//#testresult/c38482b602d277b1",
        "status" : "passed",
        "time" : {
          "start" : 1755136909614,
          "stop" : 1755136910108,
          "duration" : 494
        }
      }, {
        "uid" : "b967373b678a0240",
        "reportUrl" : "https://lambotik.github.io/Oblache/470//#testresult/b967373b678a0240",
        "status" : "passed",
        "time" : {
          "start" : 1755050445656,
          "stop" : 1755050446118,
          "duration" : 462
        }
      }, {
        "uid" : "ed428ee182cf9c7",
        "reportUrl" : "https://lambotik.github.io/Oblache/469//#testresult/ed428ee182cf9c7",
        "status" : "passed",
        "time" : {
          "start" : 1754963923345,
          "stop" : 1754963923782,
          "duration" : 437
        }
      }, {
        "uid" : "f8cebafd34a9e165",
        "reportUrl" : "https://lambotik.github.io/Oblache/468//#testresult/f8cebafd34a9e165",
        "status" : "passed",
        "time" : {
          "start" : 1754878248029,
          "stop" : 1754878248624,
          "duration" : 595
        }
      }, {
        "uid" : "d90f6ea9cc2854b",
        "reportUrl" : "https://lambotik.github.io/Oblache/467//#testresult/d90f6ea9cc2854b",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1754791999803,
          "stop" : 1754792000284,
          "duration" : 481
        }
      }, {
        "uid" : "b734bdeae12bea6f",
        "reportUrl" : "https://lambotik.github.io/Oblache/466//#testresult/b734bdeae12bea6f",
        "status" : "passed",
        "time" : {
          "start" : 1754704783312,
          "stop" : 1754704783737,
          "duration" : 425
        }
      }, {
        "uid" : "3822197c50b41568",
        "reportUrl" : "https://lambotik.github.io/Oblache/465//#testresult/3822197c50b41568",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1754618958311,
          "stop" : 1754618958779,
          "duration" : 468
        }
      }, {
        "uid" : "da67d736a58ba113",
        "reportUrl" : "https://lambotik.github.io/Oblache/464//#testresult/da67d736a58ba113",
        "status" : "passed",
        "time" : {
          "start" : 1754532709901,
          "stop" : 1754532710503,
          "duration" : 602
        }
      }, {
        "uid" : "9116d0891f28d481",
        "reportUrl" : "https://lambotik.github.io/Oblache/463//#testresult/9116d0891f28d481",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1754446173867,
          "stop" : 1754446174348,
          "duration" : 481
        }
      }, {
        "uid" : "543917ef0fd2a67e",
        "reportUrl" : "https://lambotik.github.io/Oblache/462//#testresult/543917ef0fd2a67e",
        "status" : "passed",
        "time" : {
          "start" : 1754359964317,
          "stop" : 1754359964774,
          "duration" : 457
        }
      }, {
        "uid" : "e6edcace59713b77",
        "reportUrl" : "https://lambotik.github.io/Oblache/461//#testresult/e6edcace59713b77",
        "status" : "passed",
        "time" : {
          "start" : 1754274288363,
          "stop" : 1754274288831,
          "duration" : 468
        }
      }, {
        "uid" : "dc1f9258eddefa52",
        "reportUrl" : "https://lambotik.github.io/Oblache/460//#testresult/dc1f9258eddefa52",
        "status" : "passed",
        "time" : {
          "start" : 1754187952061,
          "stop" : 1754187952671,
          "duration" : 610
        }
      }, {
        "uid" : "c86d81f7c38986d0",
        "reportUrl" : "https://lambotik.github.io/Oblache/459//#testresult/c86d81f7c38986d0",
        "status" : "passed",
        "time" : {
          "start" : 1754100284566,
          "stop" : 1754100285034,
          "duration" : 468
        }
      }, {
        "uid" : "7765c348a8a79fce",
        "reportUrl" : "https://lambotik.github.io/Oblache/458//#testresult/7765c348a8a79fce",
        "status" : "passed",
        "time" : {
          "start" : 1754015206286,
          "stop" : 1754015206697,
          "duration" : 411
        }
      }, {
        "uid" : "15c9f100fe14ed53",
        "reportUrl" : "https://lambotik.github.io/Oblache/457//#testresult/15c9f100fe14ed53",
        "status" : "passed",
        "time" : {
          "start" : 1753927786257,
          "stop" : 1753927786823,
          "duration" : 566
        }
      }, {
        "uid" : "fc65eb0b2ee1f925",
        "reportUrl" : "https://lambotik.github.io/Oblache/456//#testresult/fc65eb0b2ee1f925",
        "status" : "passed",
        "time" : {
          "start" : 1753841388554,
          "stop" : 1753841389069,
          "duration" : 515
        }
      }, {
        "uid" : "7cb96c2fe0656dfb",
        "reportUrl" : "https://lambotik.github.io/Oblache/455//#testresult/7cb96c2fe0656dfb",
        "status" : "passed",
        "time" : {
          "start" : 1753755948082,
          "stop" : 1753755948710,
          "duration" : 628
        }
      }, {
        "uid" : "86ac88723ff0a9ca",
        "reportUrl" : "https://lambotik.github.io/Oblache/454//#testresult/86ac88723ff0a9ca",
        "status" : "passed",
        "time" : {
          "start" : 1753668832353,
          "stop" : 1753668832960,
          "duration" : 607
        }
      }, {
        "uid" : "2de221df9e5c84c7",
        "reportUrl" : "https://lambotik.github.io/Oblache/453//#testresult/2de221df9e5c84c7",
        "status" : "passed",
        "time" : {
          "start" : 1753582969820,
          "stop" : 1753582970482,
          "duration" : 662
        }
      }, {
        "uid" : "ac4eef3eda4cfe65",
        "reportUrl" : "https://lambotik.github.io/Oblache/452//#testresult/ac4eef3eda4cfe65",
        "status" : "passed",
        "time" : {
          "start" : 1753495366362,
          "stop" : 1753495366772,
          "duration" : 410
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "73e16653b3d6c698.json",
  "parameterValues" : [ ]
}