{
  "uid" : "c4c3b183cb4c958c",
  "name" : "GET tos.",
  "fullName" : "tests_api.test_bd.TestGET#test_tos",
  "historyId" : "1bd6d480cd29dd301e6e77cd0f9194c6",
  "time" : {
    "start" : 1755223197263,
    "stop" : 1755223197632,
    "duration" : 369
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 502",
  "statusTrace" : "self = <tests_api.test_bd.TestGET object at 0x7ff642ff2db0>\n\n    @allure.title('GET tos.')\n    def test_tos(self):\n        response = API.get_tos(token=TestGET.token)\n        file_name = LOADING_REPORT_DIR / 'my_report1.html'\n        attach = file_name\n        allure.attach.file(attach, name=f\"Report {datetime.today()}\", attachment_type=allure.attachment_type.HTML)\n>       Checking.check_status_code(response, 200)\n\ntests_api/test_bd.py:68: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : true,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 502",
    "statusTrace" : "self = <tests_api.test_bd.TestGET object at 0x7ff642ff2db0>\n\n    @allure.title('GET tos.')\n    def test_tos(self):\n        response = API.get_tos(token=TestGET.token)\n        file_name = LOADING_REPORT_DIR / 'my_report1.html'\n        attach = file_name\n        allure.attach.file(attach, name=f\"Report {datetime.today()}\", attachment_type=allure.attachment_type.HTML)\n>       Checking.check_status_code(response, 200)\n\ntests_api/test_bd.py:68: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "Endpoint: /tos",
      "time" : {
        "start" : 1755223197630,
        "stop" : 1755223197630,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request:",
      "time" : {
        "start" : 1755223197630,
        "stop" : 1755223197630,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': {None}}",
        "time" : {
          "start" : 1755223197630,
          "stop" : 1755223197630,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Body: None",
        "time" : {
          "start" : 1755223197630,
          "stop" : 1755223197630,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Response:",
      "time" : {
        "start" : 1755223197630,
        "stop" : 1755223197630,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Status code: 502",
        "time" : {
          "start" : 1755223197630,
          "stop" : 1755223197630,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "JSON: <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
        "time" : {
          "start" : 1755223197630,
          "stop" : 1755223197630,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 200 == Response status code: 502",
      "time" : {
        "start" : 1755223197632,
        "stop" : 1755223197632,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 502\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "8578baf984a3c9df",
      "name" : "Report 2025-08-15 01:59:57.630081",
      "source" : "8578baf984a3c9df.html",
      "type" : "text/html",
      "size" : 1651560
    } ],
    "parameters" : [ ],
    "stepsCount" : 8,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "GET"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestGET"
  }, {
    "name" : "host",
    "value" : "pkrvmubgrv54qmi"
  }, {
    "name" : "thread",
    "value" : "2604-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 25,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 232,
        "unknown" : 0,
        "total" : 257
      },
      "items" : [ {
        "uid" : "9acea3f0578632d6",
        "reportUrl" : "https://lambotik.github.io/Oblache/471//#testresult/9acea3f0578632d6",
        "status" : "passed",
        "time" : {
          "start" : 1755136756717,
          "stop" : 1755136757168,
          "duration" : 451
        }
      }, {
        "uid" : "8f99b2fa89ba9908",
        "reportUrl" : "https://lambotik.github.io/Oblache/470//#testresult/8f99b2fa89ba9908",
        "status" : "passed",
        "time" : {
          "start" : 1755050328642,
          "stop" : 1755050329012,
          "duration" : 370
        }
      }, {
        "uid" : "2a3fef3fb28c7410",
        "reportUrl" : "https://lambotik.github.io/Oblache/469//#testresult/2a3fef3fb28c7410",
        "status" : "passed",
        "time" : {
          "start" : 1754963805768,
          "stop" : 1754963806080,
          "duration" : 312
        }
      }, {
        "uid" : "fb345a8e02c3cb70",
        "reportUrl" : "https://lambotik.github.io/Oblache/468//#testresult/fb345a8e02c3cb70",
        "status" : "passed",
        "time" : {
          "start" : 1754878142088,
          "stop" : 1754878142572,
          "duration" : 484
        }
      }, {
        "uid" : "5fa64945b5edce6c",
        "reportUrl" : "https://lambotik.github.io/Oblache/467//#testresult/5fa64945b5edce6c",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1754791965647,
          "stop" : 1754791966116,
          "duration" : 469
        }
      }, {
        "uid" : "b736bc17567a4d47",
        "reportUrl" : "https://lambotik.github.io/Oblache/466//#testresult/b736bc17567a4d47",
        "status" : "passed",
        "time" : {
          "start" : 1754704664544,
          "stop" : 1754704664859,
          "duration" : 315
        }
      }, {
        "uid" : "83ba03e6f27f63db",
        "reportUrl" : "https://lambotik.github.io/Oblache/465//#testresult/83ba03e6f27f63db",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1754618924269,
          "stop" : 1754618924860,
          "duration" : 591
        }
      }, {
        "uid" : "2284530134fff4ad",
        "reportUrl" : "https://lambotik.github.io/Oblache/464//#testresult/2284530134fff4ad",
        "status" : "passed",
        "time" : {
          "start" : 1754532554244,
          "stop" : 1754532554855,
          "duration" : 611
        }
      }, {
        "uid" : "df7492b6674fd3af",
        "reportUrl" : "https://lambotik.github.io/Oblache/463//#testresult/df7492b6674fd3af",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1754446139981,
          "stop" : 1754446140574,
          "duration" : 593
        }
      }, {
        "uid" : "63bb81b3119e965c",
        "reportUrl" : "https://lambotik.github.io/Oblache/462//#testresult/63bb81b3119e965c",
        "status" : "passed",
        "time" : {
          "start" : 1754359836406,
          "stop" : 1754359836772,
          "duration" : 366
        }
      }, {
        "uid" : "378c66345387ee96",
        "reportUrl" : "https://lambotik.github.io/Oblache/461//#testresult/378c66345387ee96",
        "status" : "passed",
        "time" : {
          "start" : 1754274161941,
          "stop" : 1754274162368,
          "duration" : 427
        }
      }, {
        "uid" : "a325bf3e775e74c0",
        "reportUrl" : "https://lambotik.github.io/Oblache/460//#testresult/a325bf3e775e74c0",
        "status" : "passed",
        "time" : {
          "start" : 1754187784585,
          "stop" : 1754187785126,
          "duration" : 541
        }
      }, {
        "uid" : "674009dc6cf69eb9",
        "reportUrl" : "https://lambotik.github.io/Oblache/459//#testresult/674009dc6cf69eb9",
        "status" : "passed",
        "time" : {
          "start" : 1754100134734,
          "stop" : 1754100135155,
          "duration" : 421
        }
      }, {
        "uid" : "f2380b47db4a8671",
        "reportUrl" : "https://lambotik.github.io/Oblache/458//#testresult/f2380b47db4a8671",
        "status" : "passed",
        "time" : {
          "start" : 1754015060354,
          "stop" : 1754015060659,
          "duration" : 305
        }
      }, {
        "uid" : "1eabdb9f7c1ffaed",
        "reportUrl" : "https://lambotik.github.io/Oblache/457//#testresult/1eabdb9f7c1ffaed",
        "status" : "passed",
        "time" : {
          "start" : 1753927656603,
          "stop" : 1753927657081,
          "duration" : 478
        }
      }, {
        "uid" : "3aa3dbffc6d3f942",
        "reportUrl" : "https://lambotik.github.io/Oblache/456//#testresult/3aa3dbffc6d3f942",
        "status" : "passed",
        "time" : {
          "start" : 1753841282633,
          "stop" : 1753841282990,
          "duration" : 357
        }
      }, {
        "uid" : "31c76df07abbcf8",
        "reportUrl" : "https://lambotik.github.io/Oblache/455//#testresult/31c76df07abbcf8",
        "status" : "passed",
        "time" : {
          "start" : 1753755792498,
          "stop" : 1753755792993,
          "duration" : 495
        }
      }, {
        "uid" : "457dce79f22aecd7",
        "reportUrl" : "https://lambotik.github.io/Oblache/454//#testresult/457dce79f22aecd7",
        "status" : "passed",
        "time" : {
          "start" : 1753668720974,
          "stop" : 1753668721584,
          "duration" : 610
        }
      }, {
        "uid" : "b9853aecc10a338b",
        "reportUrl" : "https://lambotik.github.io/Oblache/453//#testresult/b9853aecc10a338b",
        "status" : "passed",
        "time" : {
          "start" : 1753582856603,
          "stop" : 1753582857153,
          "duration" : 550
        }
      }, {
        "uid" : "c20be713102990db",
        "reportUrl" : "https://lambotik.github.io/Oblache/452//#testresult/c20be713102990db",
        "status" : "passed",
        "time" : {
          "start" : 1753495266583,
          "stop" : 1753495266895,
          "duration" : 312
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "c4c3b183cb4c958c.json",
  "parameterValues" : [ ]
}