{
  "uid" : "bcc79e1311530f42",
  "name" : "GET list list_regions.",
  "fullName" : "tests_api.test_bd.TestGET#test_get_list_regions",
  "historyId" : "f582edc7610323801f9b520159e35f6b",
  "time" : {
    "start" : 1755223198905,
    "stop" : 1755223199192,
    "duration" : 287
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 502",
  "statusTrace" : "self = <tests_api.test_bd.TestGET object at 0x7ff642ff3350>\n\n    @allure.title('GET list list_regions.')\n    def test_get_list_regions(self):\n        response = API.get_list_regions()\n>       Checking.check_status_code(response, 200)\n\ntests_api/test_bd.py:93: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : true,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 502",
    "statusTrace" : "self = <tests_api.test_bd.TestGET object at 0x7ff642ff3350>\n\n    @allure.title('GET list list_regions.')\n    def test_get_list_regions(self):\n        response = API.get_list_regions()\n>       Checking.check_status_code(response, 200)\n\ntests_api/test_bd.py:93: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "Endpoint: /list_regions",
      "time" : {
        "start" : 1755223199192,
        "stop" : 1755223199192,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request:",
      "time" : {
        "start" : 1755223199192,
        "stop" : 1755223199192,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': ''}",
        "time" : {
          "start" : 1755223199192,
          "stop" : 1755223199192,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Body: None",
        "time" : {
          "start" : 1755223199192,
          "stop" : 1755223199192,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Response:",
      "time" : {
        "start" : 1755223199192,
        "stop" : 1755223199192,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Status code: 502",
        "time" : {
          "start" : 1755223199192,
          "stop" : 1755223199192,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "JSON: <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
        "time" : {
          "start" : 1755223199192,
          "stop" : 1755223199192,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 200 == Response status code: 502",
      "time" : {
        "start" : 1755223199192,
        "stop" : 1755223199192,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 502\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 8,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "GET"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestGET"
  }, {
    "name" : "host",
    "value" : "pkrvmubgrv54qmi"
  }, {
    "name" : "thread",
    "value" : "2604-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 25,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 232,
        "unknown" : 0,
        "total" : 257
      },
      "items" : [ {
        "uid" : "86f7d426339adcfd",
        "reportUrl" : "https://lambotik.github.io/Oblache/471//#testresult/86f7d426339adcfd",
        "status" : "passed",
        "time" : {
          "start" : 1755136758816,
          "stop" : 1755136759191,
          "duration" : 375
        }
      }, {
        "uid" : "49cacb1d4480b856",
        "reportUrl" : "https://lambotik.github.io/Oblache/470//#testresult/49cacb1d4480b856",
        "status" : "passed",
        "time" : {
          "start" : 1755050330658,
          "stop" : 1755050331041,
          "duration" : 383
        }
      }, {
        "uid" : "dd5c89cb49b5553e",
        "reportUrl" : "https://lambotik.github.io/Oblache/469//#testresult/dd5c89cb49b5553e",
        "status" : "passed",
        "time" : {
          "start" : 1754963807408,
          "stop" : 1754963807709,
          "duration" : 301
        }
      }, {
        "uid" : "fa59b56faedf18a3",
        "reportUrl" : "https://lambotik.github.io/Oblache/468//#testresult/fa59b56faedf18a3",
        "status" : "passed",
        "time" : {
          "start" : 1754878144545,
          "stop" : 1754878145016,
          "duration" : 471
        }
      }, {
        "uid" : "91ce19f69bda037c",
        "reportUrl" : "https://lambotik.github.io/Oblache/467//#testresult/91ce19f69bda037c",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1754791968351,
          "stop" : 1754791968817,
          "duration" : 466
        }
      }, {
        "uid" : "d17c1a5ed3dcd8b",
        "reportUrl" : "https://lambotik.github.io/Oblache/466//#testresult/d17c1a5ed3dcd8b",
        "status" : "passed",
        "time" : {
          "start" : 1754704666139,
          "stop" : 1754704666471,
          "duration" : 332
        }
      }, {
        "uid" : "7e39d51bf8158d25",
        "reportUrl" : "https://lambotik.github.io/Oblache/465//#testresult/7e39d51bf8158d25",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1754618927160,
          "stop" : 1754618927625,
          "duration" : 465
        }
      }, {
        "uid" : "9931647b916bbbb0",
        "reportUrl" : "https://lambotik.github.io/Oblache/464//#testresult/9931647b916bbbb0",
        "status" : "passed",
        "time" : {
          "start" : 1754532557141,
          "stop" : 1754532557636,
          "duration" : 495
        }
      }, {
        "uid" : "397e6e10d849e9e4",
        "reportUrl" : "https://lambotik.github.io/Oblache/463//#testresult/397e6e10d849e9e4",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1754446142635,
          "stop" : 1754446143130,
          "duration" : 495
        }
      }, {
        "uid" : "8bb4ed3909ac908",
        "reportUrl" : "https://lambotik.github.io/Oblache/462//#testresult/8bb4ed3909ac908",
        "status" : "passed",
        "time" : {
          "start" : 1754359838247,
          "stop" : 1754359838607,
          "duration" : 360
        }
      }, {
        "uid" : "60c2ad0ecc212030",
        "reportUrl" : "https://lambotik.github.io/Oblache/461//#testresult/60c2ad0ecc212030",
        "status" : "passed",
        "time" : {
          "start" : 1754274163882,
          "stop" : 1754274164238,
          "duration" : 356
        }
      }, {
        "uid" : "17181de2cdbaa72",
        "reportUrl" : "https://lambotik.github.io/Oblache/460//#testresult/17181de2cdbaa72",
        "status" : "passed",
        "time" : {
          "start" : 1754187787259,
          "stop" : 1754187787757,
          "duration" : 498
        }
      }, {
        "uid" : "6e0f6ee65264fb22",
        "reportUrl" : "https://lambotik.github.io/Oblache/459//#testresult/6e0f6ee65264fb22",
        "status" : "passed",
        "time" : {
          "start" : 1754100136710,
          "stop" : 1754100137071,
          "duration" : 361
        }
      }, {
        "uid" : "451199e484c97a5f",
        "reportUrl" : "https://lambotik.github.io/Oblache/458//#testresult/451199e484c97a5f",
        "status" : "passed",
        "time" : {
          "start" : 1754015061969,
          "stop" : 1754015062308,
          "duration" : 339
        }
      }, {
        "uid" : "8262ec7f01c7f0a8",
        "reportUrl" : "https://lambotik.github.io/Oblache/457//#testresult/8262ec7f01c7f0a8",
        "status" : "passed",
        "time" : {
          "start" : 1753927658936,
          "stop" : 1753927659317,
          "duration" : 381
        }
      }, {
        "uid" : "9a120ad53680f62b",
        "reportUrl" : "https://lambotik.github.io/Oblache/456//#testresult/9a120ad53680f62b",
        "status" : "passed",
        "time" : {
          "start" : 1753841284565,
          "stop" : 1753841284921,
          "duration" : 356
        }
      }, {
        "uid" : "2611c6cbd1f8591d",
        "reportUrl" : "https://lambotik.github.io/Oblache/455//#testresult/2611c6cbd1f8591d",
        "status" : "passed",
        "time" : {
          "start" : 1753755795141,
          "stop" : 1753755795653,
          "duration" : 512
        }
      }, {
        "uid" : "284e4e96ac647372",
        "reportUrl" : "https://lambotik.github.io/Oblache/454//#testresult/284e4e96ac647372",
        "status" : "passed",
        "time" : {
          "start" : 1753668723570,
          "stop" : 1753668724040,
          "duration" : 470
        }
      }, {
        "uid" : "3b7188fc13a4b49c",
        "reportUrl" : "https://lambotik.github.io/Oblache/453//#testresult/3b7188fc13a4b49c",
        "status" : "passed",
        "time" : {
          "start" : 1753582859458,
          "stop" : 1753582859967,
          "duration" : 509
        }
      }, {
        "uid" : "b3458431ec48f6fc",
        "reportUrl" : "https://lambotik.github.io/Oblache/452//#testresult/b3458431ec48f6fc",
        "status" : "passed",
        "time" : {
          "start" : 1753495268194,
          "stop" : 1753495268582,
          "duration" : 388
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "bcc79e1311530f42.json",
  "parameterValues" : [ ]
}