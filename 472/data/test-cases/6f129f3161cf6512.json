{
  "uid" : "6f129f3161cf6512",
  "name" : "POST db_list_with_filter",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_db_list_with_filter",
  "historyId" : "1404cf75602dc5c195df0f6e9ffb5ba3",
  "time" : {
    "start" : 1755223207567,
    "stop" : 1755223207859,
    "duration" : 292
  },
  "status" : "skipped",
  "statusMessage" : "XFAIL There are databases that need to be deleted manually.\n\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7ff642ff3fe0>\n\n    @allure.title('POST db_list_with_filter')\n    @pytest.mark.xfail(reason='There are databases that need to be deleted manually.')\n    def test_post_db_list_with_filter(self):\n        list_db = API.post_db_list(token=TestPOST.token)\n>       json_list_db = json.loads(list_db.text)\n\ntests_api/test_bd.py:305: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/json/decoder.py:338: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7ff64420a6f0>\ns = '<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body>\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/json/decoder.py:356: JSONDecodeError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "skipped",
    "statusMessage" : "XFAIL There are databases that need to be deleted manually.\n\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7ff642ff3fe0>\n\n    @allure.title('POST db_list_with_filter')\n    @pytest.mark.xfail(reason='There are databases that need to be deleted manually.')\n    def test_post_db_list_with_filter(self):\n        list_db = API.post_db_list(token=TestPOST.token)\n>       json_list_db = json.loads(list_db.text)\n\ntests_api/test_bd.py:305: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/json/decoder.py:338: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7ff64420a6f0>\ns = '<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body>\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/json/decoder.py:356: JSONDecodeError",
    "steps" : [ {
      "name" : "post_db_list",
      "time" : {
        "start" : 1755223207567,
        "stop" : 1755223207858,
        "duration" : 291
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /db_list",
        "time" : {
          "start" : 1755223207858,
          "stop" : 1755223207858,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1755223207858,
          "stop" : 1755223207858,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': {None}}",
          "time" : {
            "start" : 1755223207858,
            "stop" : 1755223207858,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: None",
          "time" : {
            "start" : 1755223207858,
            "stop" : 1755223207858,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1755223207858,
          "stop" : 1755223207858,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 502",
          "time" : {
            "start" : 1755223207858,
            "stop" : 1755223207858,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
          "time" : {
            "start" : 1755223207858,
            "stop" : 1755223207858,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 7,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 8,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.xfail(reason='There are databases that need to be deleted manually.')"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "pkrvmubgrv54qmi"
  }, {
    "name" : "thread",
    "value" : "2604-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 256,
        "passed" : 1,
        "unknown" : 0,
        "total" : 257
      },
      "items" : [ {
        "uid" : "5277ea69362b6671",
        "reportUrl" : "https://lambotik.github.io/Oblache/471//#testresult/5277ea69362b6671",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 405",
        "time" : {
          "start" : 1755136771668,
          "stop" : 1755136772384,
          "duration" : 716
        }
      }, {
        "uid" : "ae4ad2233db8177",
        "reportUrl" : "https://lambotik.github.io/Oblache/470//#testresult/ae4ad2233db8177",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1755050343085,
          "stop" : 1755050343802,
          "duration" : 717
        }
      }, {
        "uid" : "22eaee4d7606d298",
        "reportUrl" : "https://lambotik.github.io/Oblache/469//#testresult/22eaee4d7606d298",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1754963818127,
          "stop" : 1754963818724,
          "duration" : 597
        }
      }, {
        "uid" : "95bce82945329004",
        "reportUrl" : "https://lambotik.github.io/Oblache/468//#testresult/95bce82945329004",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1754878161643,
          "stop" : 1754878162593,
          "duration" : 950
        }
      }, {
        "uid" : "4579aa47ec50381c",
        "reportUrl" : "https://lambotik.github.io/Oblache/467//#testresult/4579aa47ec50381c",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
        "time" : {
          "start" : 1754791982529,
          "stop" : 1754791983010,
          "duration" : 481
        }
      }, {
        "uid" : "ccfcccbed278d15d",
        "reportUrl" : "https://lambotik.github.io/Oblache/466//#testresult/ccfcccbed278d15d",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 405",
        "time" : {
          "start" : 1754704677273,
          "stop" : 1754704677863,
          "duration" : 590
        }
      }, {
        "uid" : "d2e3bd1fa9fe1522",
        "reportUrl" : "https://lambotik.github.io/Oblache/465//#testresult/d2e3bd1fa9fe1522",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
        "time" : {
          "start" : 1754618941089,
          "stop" : 1754618941555,
          "duration" : 466
        }
      }, {
        "uid" : "c6290ef866c40704",
        "reportUrl" : "https://lambotik.github.io/Oblache/464//#testresult/c6290ef866c40704",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 405",
        "time" : {
          "start" : 1754532574490,
          "stop" : 1754532575459,
          "duration" : 969
        }
      }, {
        "uid" : "f97baad38208beec",
        "reportUrl" : "https://lambotik.github.io/Oblache/463//#testresult/f97baad38208beec",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
        "time" : {
          "start" : 1754446156775,
          "stop" : 1754446157255,
          "duration" : 480
        }
      }, {
        "uid" : "117d7f6af263c992",
        "reportUrl" : "https://lambotik.github.io/Oblache/462//#testresult/117d7f6af263c992",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 405",
        "time" : {
          "start" : 1754359850564,
          "stop" : 1754359851257,
          "duration" : 693
        }
      }, {
        "uid" : "9a51bc6f9871222f",
        "reportUrl" : "https://lambotik.github.io/Oblache/461//#testresult/9a51bc6f9871222f",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1754274176461,
          "stop" : 1754274177146,
          "duration" : 685
        }
      }, {
        "uid" : "c8d53712da9686e5",
        "reportUrl" : "https://lambotik.github.io/Oblache/460//#testresult/c8d53712da9686e5",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1754187805178,
          "stop" : 1754187806174,
          "duration" : 996
        }
      }, {
        "uid" : "e925e8b208e18ebc",
        "reportUrl" : "https://lambotik.github.io/Oblache/459//#testresult/e925e8b208e18ebc",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1754100149335,
          "stop" : 1754100150034,
          "duration" : 699
        }
      }, {
        "uid" : "8da274e5dc37486",
        "reportUrl" : "https://lambotik.github.io/Oblache/458//#testresult/8da274e5dc37486",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1754015072821,
          "stop" : 1754015073404,
          "duration" : 583
        }
      }, {
        "uid" : "ee47026ad8b905bc",
        "reportUrl" : "https://lambotik.github.io/Oblache/457//#testresult/ee47026ad8b905bc",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1753927673803,
          "stop" : 1753927674634,
          "duration" : 831
        }
      }, {
        "uid" : "4022dfbc51ffbcb1",
        "reportUrl" : "https://lambotik.github.io/Oblache/456//#testresult/4022dfbc51ffbcb1",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1753841297100,
          "stop" : 1753841297808,
          "duration" : 708
        }
      }, {
        "uid" : "b619757c520f676d",
        "reportUrl" : "https://lambotik.github.io/Oblache/455//#testresult/b619757c520f676d",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1753755812848,
          "stop" : 1753755813816,
          "duration" : 968
        }
      }, {
        "uid" : "8ec2875efc6685a3",
        "reportUrl" : "https://lambotik.github.io/Oblache/454//#testresult/8ec2875efc6685a3",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1753668740029,
          "stop" : 1753668740976,
          "duration" : 947
        }
      }, {
        "uid" : "32147a37da05c14a",
        "reportUrl" : "https://lambotik.github.io/Oblache/453//#testresult/32147a37da05c14a",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1753582877318,
          "stop" : 1753582878330,
          "duration" : 1012
        }
      }, {
        "uid" : "1d0abad21cc395e",
        "reportUrl" : "https://lambotik.github.io/Oblache/452//#testresult/1d0abad21cc395e",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1753495278931,
          "stop" : 1753495279651,
          "duration" : 720
        }
      } ]
    },
    "tags" : [ "@pytest.mark.xfail(reason='There are databases that need to be deleted manually.')" ]
  },
  "source" : "6f129f3161cf6512.json",
  "parameterValues" : [ ]
}