{
  "uid" : "55d6086906e6f024",
  "name" : "POST create_docker_container_without_token",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_create_docker_container_without_token",
  "historyId" : "f833256fb8ca072b26357ead25c8b408",
  "time" : {
    "start" : 1751246322005,
    "stop" : 1751246322316,
    "duration" : 311
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 400",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7fc2d07611f0>\n\n    @allure.title('POST create_docker_container_without_token')\n    def test_post_create_docker_container_without_token(self):\n        result = API.post_create_docker_container(token='incorrect_token')\n>       Checking.check_status_code(result, 401)\n\ntests_api/test_bd.py:404: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 401\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 400\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 400",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7fc2d07611f0>\n\n    @allure.title('POST create_docker_container_without_token')\n    def test_post_create_docker_container_without_token(self):\n        result = API.post_create_docker_container(token='incorrect_token')\n>       Checking.check_status_code(result, 401)\n\ntests_api/test_bd.py:404: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 401\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 400\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "post_create_docker_container",
      "time" : {
        "start" : 1751246322005,
        "stop" : 1751246322316,
        "duration" : 311
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /container_create",
        "time" : {
          "start" : 1751246322316,
          "stop" : 1751246322316,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1751246322316,
          "stop" : 1751246322316,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': {'incorrect_token'}}",
          "time" : {
            "start" : 1751246322316,
            "stop" : 1751246322316,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: {\"docker_image\": \"nginx\", \"int_ports\": \"80\", \"env\": 3, \"region\": 3}",
          "time" : {
            "start" : 1751246322316,
            "stop" : 1751246322316,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1751246322316,
          "stop" : 1751246322316,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 400",
          "time" : {
            "start" : 1751246322316,
            "stop" : 1751246322316,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: {\n    \"msg_code\": -1,\n    \"msg\": \"endpoint is disabled\"\n}\n",
          "time" : {
            "start" : 1751246322316,
            "stop" : 1751246322316,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 7,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 401 == Response status code: 400",
      "time" : {
        "start" : 1751246322316,
        "stop" : 1751246322316,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 400\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 9,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "pkrvmbietmlfzoi"
  }, {
    "name" : "thread",
    "value" : "2605-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 198,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 36,
        "unknown" : 0,
        "total" : 234
      },
      "items" : [ {
        "uid" : "761bae548ee23c35",
        "reportUrl" : "https://lambotik.github.io/Oblache/448//#testresult/761bae548ee23c35",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1751160122035,
          "stop" : 1751160122430,
          "duration" : 395
        }
      }, {
        "uid" : "b58c22cc24f818c8",
        "reportUrl" : "https://lambotik.github.io/Oblache/447//#testresult/b58c22cc24f818c8",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1751073116615,
          "stop" : 1751073116917,
          "duration" : 302
        }
      }, {
        "uid" : "4c05cb3263a8a358",
        "reportUrl" : "https://lambotik.github.io/Oblache/446//#testresult/4c05cb3263a8a358",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1750986889568,
          "stop" : 1750986890087,
          "duration" : 519
        }
      }, {
        "uid" : "2dd56252c5831255",
        "reportUrl" : "https://lambotik.github.io/Oblache/445//#testresult/2dd56252c5831255",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1750900424118,
          "stop" : 1750900424490,
          "duration" : 372
        }
      }, {
        "uid" : "9850b072ac75f1c4",
        "reportUrl" : "https://lambotik.github.io/Oblache/444//#testresult/9850b072ac75f1c4",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1750814102496,
          "stop" : 1750814102998,
          "duration" : 502
        }
      }, {
        "uid" : "77675165a541a91d",
        "reportUrl" : "https://lambotik.github.io/Oblache/443//#testresult/77675165a541a91d",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1750727658035,
          "stop" : 1750727658557,
          "duration" : 522
        }
      }, {
        "uid" : "2b857f24ccca9e32",
        "reportUrl" : "https://lambotik.github.io/Oblache/442//#testresult/2b857f24ccca9e32",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1750641506556,
          "stop" : 1750641507075,
          "duration" : 519
        }
      }, {
        "uid" : "10d2a250e53f4429",
        "reportUrl" : "https://lambotik.github.io/Oblache/441//#testresult/10d2a250e53f4429",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1750555236288,
          "stop" : 1750555236802,
          "duration" : 514
        }
      }, {
        "uid" : "2e7922e8335034ab",
        "reportUrl" : "https://lambotik.github.io/Oblache/440//#testresult/2e7922e8335034ab",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1750468356437,
          "stop" : 1750468356948,
          "duration" : 511
        }
      }, {
        "uid" : "78f2dc3f10992a4",
        "reportUrl" : "https://lambotik.github.io/Oblache/439//#testresult/78f2dc3f10992a4",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1750382009542,
          "stop" : 1750382010034,
          "duration" : 492
        }
      }, {
        "uid" : "631cb7329865edd4",
        "reportUrl" : "https://lambotik.github.io/Oblache/438//#testresult/631cb7329865edd4",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1750295647570,
          "stop" : 1750295648118,
          "duration" : 548
        }
      }, {
        "uid" : "79d6a55ff7930c24",
        "reportUrl" : "https://lambotik.github.io/Oblache/437//#testresult/79d6a55ff7930c24",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1750209213855,
          "stop" : 1750209214159,
          "duration" : 304
        }
      }, {
        "uid" : "c1cd3a08260e42e",
        "reportUrl" : "https://lambotik.github.io/Oblache/436//#testresult/c1cd3a08260e42e",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1750122849926,
          "stop" : 1750122850289,
          "duration" : 363
        }
      }, {
        "uid" : "5646da15ec5081b7",
        "reportUrl" : "https://lambotik.github.io/Oblache/435//#testresult/5646da15ec5081b7",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1750036552518,
          "stop" : 1750036552822,
          "duration" : 304
        }
      }, {
        "uid" : "ef511180086406de",
        "reportUrl" : "https://lambotik.github.io/Oblache/434//#testresult/ef511180086406de",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1749950474799,
          "stop" : 1749950475113,
          "duration" : 314
        }
      }, {
        "uid" : "f0d4530fa27f8f2c",
        "reportUrl" : "https://lambotik.github.io/Oblache/433//#testresult/f0d4530fa27f8f2c",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1749863469567,
          "stop" : 1749863470058,
          "duration" : 491
        }
      }, {
        "uid" : "34857321718d1bb3",
        "reportUrl" : "https://lambotik.github.io/Oblache/432//#testresult/34857321718d1bb3",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1749777234716,
          "stop" : 1749777234994,
          "duration" : 278
        }
      }, {
        "uid" : "e35225799d78aeec",
        "reportUrl" : "https://lambotik.github.io/Oblache/431//#testresult/e35225799d78aeec",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1749690774442,
          "stop" : 1749690774795,
          "duration" : 353
        }
      }, {
        "uid" : "b3e6b5da60701b95",
        "reportUrl" : "https://lambotik.github.io/Oblache/430//#testresult/b3e6b5da60701b95",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1749604428316,
          "stop" : 1749604428672,
          "duration" : 356
        }
      }, {
        "uid" : "5c1e4a133721a7d8",
        "reportUrl" : "https://lambotik.github.io/Oblache/429//#testresult/5c1e4a133721a7d8",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1749518066272,
          "stop" : 1749518066767,
          "duration" : 495
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "55d6086906e6f024.json",
  "parameterValues" : [ ]
}