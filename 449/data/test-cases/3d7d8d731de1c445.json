{
  "uid" : "3d7d8d731de1c445",
  "name" : "POST checking ports_len positive",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_checking_ports_len_positive",
  "historyId" : "c6f631852f230d7f46e21d1143ab0d56",
  "time" : {
    "start" : 1751246320709,
    "stop" : 1751246321018,
    "duration" : 309
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 400",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7fc2d0760800>\n\n    @allure.title('POST checking ports_len positive')\n    def test_post_checking_ports_len_positive(self):\n        result = API.post_create_docker_container_checking_ports(\n            token=TestPOST.token,\n            port_len=\"80-89\")\n>       Checking.check_status_code(result, 201)\n\ntests_api/test_bd.py:374: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 201\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 400\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 400",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7fc2d0760800>\n\n    @allure.title('POST checking ports_len positive')\n    def test_post_checking_ports_len_positive(self):\n        result = API.post_create_docker_container_checking_ports(\n            token=TestPOST.token,\n            port_len=\"80-89\")\n>       Checking.check_status_code(result, 201)\n\ntests_api/test_bd.py:374: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 201\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 400\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "post_create_docker_container",
      "time" : {
        "start" : 1751246320709,
        "stop" : 1751246321018,
        "duration" : 309
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /container_create",
        "time" : {
          "start" : 1751246321018,
          "stop" : 1751246321018,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1751246321018,
          "stop" : 1751246321018,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': {'4d72bd10-2fd2-493c-9346-f5a65316a236'}}",
          "time" : {
            "start" : 1751246321018,
            "stop" : 1751246321018,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: {\"docker_image\": \"nginx\", \"int_ports\": f\"80-89\", \"env\": 3, \"region\": 3}",
          "time" : {
            "start" : 1751246321018,
            "stop" : 1751246321018,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1751246321018,
          "stop" : 1751246321018,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 400",
          "time" : {
            "start" : 1751246321018,
            "stop" : 1751246321018,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: {\n    \"msg_code\": -1,\n    \"msg\": \"endpoint is disabled\"\n}\n",
          "time" : {
            "start" : 1751246321018,
            "stop" : 1751246321018,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 7,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 201 == Response status code: 400",
      "time" : {
        "start" : 1751246321018,
        "stop" : 1751246321018,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 400\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 9,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "pkrvmbietmlfzoi"
  }, {
    "name" : "thread",
    "value" : "2605-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 198,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 36,
        "unknown" : 0,
        "total" : 234
      },
      "items" : [ {
        "uid" : "29ba72160cf2c106",
        "reportUrl" : "https://lambotik.github.io/Oblache/448//#testresult/29ba72160cf2c106",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1751160120190,
          "stop" : 1751160120628,
          "duration" : 438
        }
      }, {
        "uid" : "b18bbebb001fdb23",
        "reportUrl" : "https://lambotik.github.io/Oblache/447//#testresult/b18bbebb001fdb23",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1751073115318,
          "stop" : 1751073115625,
          "duration" : 307
        }
      }, {
        "uid" : "47e0902963fc6948",
        "reportUrl" : "https://lambotik.github.io/Oblache/446//#testresult/47e0902963fc6948",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1750986887432,
          "stop" : 1750986887963,
          "duration" : 531
        }
      }, {
        "uid" : "36ec95b450742d51",
        "reportUrl" : "https://lambotik.github.io/Oblache/445//#testresult/36ec95b450742d51",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1750900422475,
          "stop" : 1750900422834,
          "duration" : 359
        }
      }, {
        "uid" : "a54338ed6f175255",
        "reportUrl" : "https://lambotik.github.io/Oblache/444//#testresult/a54338ed6f175255",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1750814100425,
          "stop" : 1750814100936,
          "duration" : 511
        }
      }, {
        "uid" : "92b0c958d9c0ae1f",
        "reportUrl" : "https://lambotik.github.io/Oblache/443//#testresult/92b0c958d9c0ae1f",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1750727655958,
          "stop" : 1750727656480,
          "duration" : 522
        }
      }, {
        "uid" : "5a7f234b69efba",
        "reportUrl" : "https://lambotik.github.io/Oblache/442//#testresult/5a7f234b69efba",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1750641504437,
          "stop" : 1750641504945,
          "duration" : 508
        }
      }, {
        "uid" : "71fa8e5f67ec85c8",
        "reportUrl" : "https://lambotik.github.io/Oblache/441//#testresult/71fa8e5f67ec85c8",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1750555234165,
          "stop" : 1750555234673,
          "duration" : 508
        }
      }, {
        "uid" : "e5c27f8c649d1dde",
        "reportUrl" : "https://lambotik.github.io/Oblache/440//#testresult/e5c27f8c649d1dde",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1750468354299,
          "stop" : 1750468354808,
          "duration" : 509
        }
      }, {
        "uid" : "36d6e8af2ec5141b",
        "reportUrl" : "https://lambotik.github.io/Oblache/439//#testresult/36d6e8af2ec5141b",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1750382007549,
          "stop" : 1750382008031,
          "duration" : 482
        }
      }, {
        "uid" : "dc47e4c821ab605f",
        "reportUrl" : "https://lambotik.github.io/Oblache/438//#testresult/dc47e4c821ab605f",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1750295645274,
          "stop" : 1750295645977,
          "duration" : 703
        }
      }, {
        "uid" : "5b312487e637a61d",
        "reportUrl" : "https://lambotik.github.io/Oblache/437//#testresult/5b312487e637a61d",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1750209212569,
          "stop" : 1750209212874,
          "duration" : 305
        }
      }, {
        "uid" : "f6df77024ab0bb1a",
        "reportUrl" : "https://lambotik.github.io/Oblache/436//#testresult/f6df77024ab0bb1a",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1750122848453,
          "stop" : 1750122848806,
          "duration" : 353
        }
      }, {
        "uid" : "546e9bdd93251015",
        "reportUrl" : "https://lambotik.github.io/Oblache/435//#testresult/546e9bdd93251015",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1750036551257,
          "stop" : 1750036551568,
          "duration" : 311
        }
      }, {
        "uid" : "ebcf22c180636391",
        "reportUrl" : "https://lambotik.github.io/Oblache/434//#testresult/ebcf22c180636391",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1749950473489,
          "stop" : 1749950473816,
          "duration" : 327
        }
      }, {
        "uid" : "da860e878eddc6f1",
        "reportUrl" : "https://lambotik.github.io/Oblache/433//#testresult/da860e878eddc6f1",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1749863467571,
          "stop" : 1749863468059,
          "duration" : 488
        }
      }, {
        "uid" : "c154909344d6936",
        "reportUrl" : "https://lambotik.github.io/Oblache/432//#testresult/c154909344d6936",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1749777233460,
          "stop" : 1749777233738,
          "duration" : 278
        }
      }, {
        "uid" : "ec6fc54aa137b7df",
        "reportUrl" : "https://lambotik.github.io/Oblache/431//#testresult/ec6fc54aa137b7df",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1749690772990,
          "stop" : 1749690773347,
          "duration" : 357
        }
      }, {
        "uid" : "1ac1494bf955da9e",
        "reportUrl" : "https://lambotik.github.io/Oblache/430//#testresult/1ac1494bf955da9e",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1749604426904,
          "stop" : 1749604427245,
          "duration" : 341
        }
      }, {
        "uid" : "3a7c4705027bc836",
        "reportUrl" : "https://lambotik.github.io/Oblache/429//#testresult/3a7c4705027bc836",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1749518064256,
          "stop" : 1749518064741,
          "duration" : 485
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "3d7d8d731de1c445.json",
  "parameterValues" : [ ]
}