{
  "uid" : "247b61f95eafae56",
  "name" : "POST registration email is taken for unsupported languages",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_registration_email_is_taken_for_unsupported_languages",
  "historyId" : "0f497336a453dab6752b8ca2c68cb0db",
  "time" : {
    "start" : 1748568793942,
    "stop" : 1748568854266,
    "duration" : 60324
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 504",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7ff73dc93050>\n\n    @allure.title('POST registration email is taken for unsupported languages')\n    def test_post_registration_email_is_taken_for_unsupported_languages(self):\n        response = API.post_registration(\n            email=TestPOST.email,\n            old_password=TestPOST.old_password,\n            language=\"ru-ru\",\n            tos_agree=True)\n        status_code = response\n>       Checking.check_status_code(status_code, 400)\n\ntests_api/test_bd.py:197: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [504]>, status_code = 400\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 504\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 504",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7ff73dc93050>\n\n    @allure.title('POST registration email is taken for unsupported languages')\n    def test_post_registration_email_is_taken_for_unsupported_languages(self):\n        response = API.post_registration(\n            email=TestPOST.email,\n            old_password=TestPOST.old_password,\n            language=\"ru-ru\",\n            tos_agree=True)\n        status_code = response\n>       Checking.check_status_code(status_code, 400)\n\ntests_api/test_bd.py:197: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [504]>, status_code = 400\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 504\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "Endpoint: /register",
      "time" : {
        "start" : 1748568854265,
        "stop" : 1748568854265,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request:",
      "time" : {
        "start" : 1748568854265,
        "stop" : 1748568854265,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': ''}",
        "time" : {
          "start" : 1748568854265,
          "stop" : 1748568854265,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Body: \n                            {\n                            \"email\": email,\n                            \"password\": password,\n                            \"tos_agree\": True,\n                            \"language\": ru-ru\n                           }",
        "time" : {
          "start" : 1748568854265,
          "stop" : 1748568854265,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Response:",
      "time" : {
        "start" : 1748568854265,
        "stop" : 1748568854265,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Status code: 504",
        "time" : {
          "start" : 1748568854265,
          "stop" : 1748568854265,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "JSON: <html>\r\n<head><title>504 Gateway Time-out</title></head>\r\n<body>\r\n<center><h1>504 Gateway Time-out</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
        "time" : {
          "start" : 1748568854265,
          "stop" : 1748568854265,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 400 == Response status code: 504",
      "time" : {
        "start" : 1748568854265,
        "stop" : 1748568854265,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 504\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 8,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "pkrvmf6wy0o8zjz"
  }, {
    "name" : "thread",
    "value" : "2708-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 13,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 190,
        "unknown" : 0,
        "total" : 203
      },
      "items" : [ {
        "uid" : "1176f8700190dde2",
        "reportUrl" : "https://lambotik.github.io/Oblache/417//#testresult/1176f8700190dde2",
        "status" : "passed",
        "time" : {
          "start" : 1748481128610,
          "stop" : 1748481128974,
          "duration" : 364
        }
      }, {
        "uid" : "926fffea6143c871",
        "reportUrl" : "https://lambotik.github.io/Oblache/416//#testresult/926fffea6143c871",
        "status" : "passed",
        "time" : {
          "start" : 1748394738386,
          "stop" : 1748394738864,
          "duration" : 478
        }
      }, {
        "uid" : "448c580e2f44e60d",
        "reportUrl" : "https://lambotik.github.io/Oblache/415//#testresult/448c580e2f44e60d",
        "status" : "passed",
        "time" : {
          "start" : 1748308249076,
          "stop" : 1748308249381,
          "duration" : 305
        }
      }, {
        "uid" : "2907533eecfce085",
        "reportUrl" : "https://lambotik.github.io/Oblache/414//#testresult/2907533eecfce085",
        "status" : "passed",
        "time" : {
          "start" : 1748222001316,
          "stop" : 1748222001623,
          "duration" : 307
        }
      }, {
        "uid" : "a3d986943e9da256",
        "reportUrl" : "https://lambotik.github.io/Oblache/413//#testresult/a3d986943e9da256",
        "status" : "passed",
        "time" : {
          "start" : 1748135878507,
          "stop" : 1748135878865,
          "duration" : 358
        }
      }, {
        "uid" : "7afc41fb35403eae",
        "reportUrl" : "https://lambotik.github.io/Oblache/412//#testresult/7afc41fb35403eae",
        "status" : "passed",
        "time" : {
          "start" : 1748048929783,
          "stop" : 1748048930285,
          "duration" : 502
        }
      }, {
        "uid" : "7417d59c56f499c1",
        "reportUrl" : "https://lambotik.github.io/Oblache/411//#testresult/7417d59c56f499c1",
        "status" : "passed",
        "time" : {
          "start" : 1747962676567,
          "stop" : 1747962676924,
          "duration" : 357
        }
      }, {
        "uid" : "18ba5ce04ffdd614",
        "reportUrl" : "https://lambotik.github.io/Oblache/410//#testresult/18ba5ce04ffdd614",
        "status" : "passed",
        "time" : {
          "start" : 1747876284655,
          "stop" : 1747876285011,
          "duration" : 356
        }
      }, {
        "uid" : "ceff6b114569b7db",
        "reportUrl" : "https://lambotik.github.io/Oblache/409//#testresult/ceff6b114569b7db",
        "status" : "passed",
        "time" : {
          "start" : 1747789922073,
          "stop" : 1747789922435,
          "duration" : 362
        }
      }, {
        "uid" : "a5e6a705345d8d5b",
        "reportUrl" : "https://lambotik.github.io/Oblache/408//#testresult/a5e6a705345d8d5b",
        "status" : "passed",
        "time" : {
          "start" : 1747703554321,
          "stop" : 1747703554623,
          "duration" : 302
        }
      }, {
        "uid" : "97bac46c42c91d86",
        "reportUrl" : "https://lambotik.github.io/Oblache/407//#testresult/97bac46c42c91d86",
        "status" : "passed",
        "time" : {
          "start" : 1747617268226,
          "stop" : 1747617268544,
          "duration" : 318
        }
      }, {
        "uid" : "f5da5e7bff565310",
        "reportUrl" : "https://lambotik.github.io/Oblache/406//#testresult/f5da5e7bff565310",
        "status" : "passed",
        "time" : {
          "start" : 1747530962669,
          "stop" : 1747530963049,
          "duration" : 380
        }
      }, {
        "uid" : "22c9157e02d7bcbb",
        "reportUrl" : "https://lambotik.github.io/Oblache/405//#testresult/22c9157e02d7bcbb",
        "status" : "passed",
        "time" : {
          "start" : 1747444206430,
          "stop" : 1747444206790,
          "duration" : 360
        }
      }, {
        "uid" : "3092d53dab8d6900",
        "reportUrl" : "https://lambotik.github.io/Oblache/404//#testresult/3092d53dab8d6900",
        "status" : "passed",
        "time" : {
          "start" : 1747357908676,
          "stop" : 1747357909013,
          "duration" : 337
        }
      }, {
        "uid" : "1fcfa3430de05f0a",
        "reportUrl" : "https://lambotik.github.io/Oblache/403//#testresult/1fcfa3430de05f0a",
        "status" : "passed",
        "time" : {
          "start" : 1747271303799,
          "stop" : 1747271304102,
          "duration" : 303
        }
      }, {
        "uid" : "8fb08db291f74757",
        "reportUrl" : "https://lambotik.github.io/Oblache/402//#testresult/8fb08db291f74757",
        "status" : "passed",
        "time" : {
          "start" : 1747185041160,
          "stop" : 1747185041668,
          "duration" : 508
        }
      }, {
        "uid" : "d0a3287438ce4d6f",
        "reportUrl" : "https://lambotik.github.io/Oblache/401//#testresult/d0a3287438ce4d6f",
        "status" : "passed",
        "time" : {
          "start" : 1747098714202,
          "stop" : 1747098714572,
          "duration" : 370
        }
      }, {
        "uid" : "32b76fb733d3ea3b",
        "reportUrl" : "https://lambotik.github.io/Oblache/400//#testresult/32b76fb733d3ea3b",
        "status" : "passed",
        "time" : {
          "start" : 1747012415866,
          "stop" : 1747012416281,
          "duration" : 415
        }
      }, {
        "uid" : "66a0e3532f8c8245",
        "reportUrl" : "https://lambotik.github.io/Oblache/399//#testresult/66a0e3532f8c8245",
        "status" : "passed",
        "time" : {
          "start" : 1746926112886,
          "stop" : 1746926113389,
          "duration" : 503
        }
      }, {
        "uid" : "e9905bc4b09c394f",
        "reportUrl" : "https://lambotik.github.io/Oblache/398//#testresult/e9905bc4b09c394f",
        "status" : "passed",
        "time" : {
          "start" : 1746839276788,
          "stop" : 1746839277103,
          "duration" : 315
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "247b61f95eafae56.json",
  "parameterValues" : [ ]
}