{
  "uid" : "5a0c4d3227094eb4",
  "name" : "GET list list_dbenvs.",
  "fullName" : "tests_api.test_bd.TestGET#test_get_list_envs",
  "historyId" : "2fa206bdbd2e543ff40536a26ccb5d10",
  "time" : {
    "start" : 1748568070055,
    "stop" : 1748568130367,
    "duration" : 60312
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 504",
  "statusTrace" : "self = <tests_api.test_bd.TestGET object at 0x7ff73dc92870>\n\n    @allure.title('GET list list_dbenvs.')\n    def test_get_list_envs(self):\n        response = API.get_list_envs()\n>       Checking.check_status_code(response, 200)\n\ntests_api/test_bd.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [504]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 504\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 504",
    "statusTrace" : "self = <tests_api.test_bd.TestGET object at 0x7ff73dc92870>\n\n    @allure.title('GET list list_dbenvs.')\n    def test_get_list_envs(self):\n        response = API.get_list_envs()\n>       Checking.check_status_code(response, 200)\n\ntests_api/test_bd.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [504]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 504\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "Endpoint: /list_dbenvs",
      "time" : {
        "start" : 1748568130367,
        "stop" : 1748568130367,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request:",
      "time" : {
        "start" : 1748568130367,
        "stop" : 1748568130367,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': ''}",
        "time" : {
          "start" : 1748568130367,
          "stop" : 1748568130367,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Body: None",
        "time" : {
          "start" : 1748568130367,
          "stop" : 1748568130367,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Response:",
      "time" : {
        "start" : 1748568130367,
        "stop" : 1748568130367,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Status code: 504",
        "time" : {
          "start" : 1748568130367,
          "stop" : 1748568130367,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "JSON: <html>\r\n<head><title>504 Gateway Time-out</title></head>\r\n<body>\r\n<center><h1>504 Gateway Time-out</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
        "time" : {
          "start" : 1748568130367,
          "stop" : 1748568130367,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 200 == Response status code: 504",
      "time" : {
        "start" : 1748568130367,
        "stop" : 1748568130367,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 504\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 8,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "GET"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestGET"
  }, {
    "name" : "host",
    "value" : "pkrvmf6wy0o8zjz"
  }, {
    "name" : "thread",
    "value" : "2708-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 13,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 190,
        "unknown" : 0,
        "total" : 203
      },
      "items" : [ {
        "uid" : "c8f61f1b3c83db7",
        "reportUrl" : "https://lambotik.github.io/Oblache/417//#testresult/c8f61f1b3c83db7",
        "status" : "passed",
        "time" : {
          "start" : 1748481124256,
          "stop" : 1748481124637,
          "duration" : 381
        }
      }, {
        "uid" : "45655d53ce6e7f2a",
        "reportUrl" : "https://lambotik.github.io/Oblache/416//#testresult/45655d53ce6e7f2a",
        "status" : "passed",
        "time" : {
          "start" : 1748394734717,
          "stop" : 1748394735024,
          "duration" : 307
        }
      }, {
        "uid" : "4ca597660c9a8d5d",
        "reportUrl" : "https://lambotik.github.io/Oblache/415//#testresult/4ca597660c9a8d5d",
        "status" : "passed",
        "time" : {
          "start" : 1748308245457,
          "stop" : 1748308245847,
          "duration" : 390
        }
      }, {
        "uid" : "af6b8d55e46b127",
        "reportUrl" : "https://lambotik.github.io/Oblache/414//#testresult/af6b8d55e46b127",
        "status" : "passed",
        "time" : {
          "start" : 1748221997685,
          "stop" : 1748221997988,
          "duration" : 303
        }
      }, {
        "uid" : "1fe585cf39304446",
        "reportUrl" : "https://lambotik.github.io/Oblache/413//#testresult/1fe585cf39304446",
        "status" : "passed",
        "time" : {
          "start" : 1748135874403,
          "stop" : 1748135874782,
          "duration" : 379
        }
      }, {
        "uid" : "6ff1085dae55d9bd",
        "reportUrl" : "https://lambotik.github.io/Oblache/412//#testresult/6ff1085dae55d9bd",
        "status" : "passed",
        "time" : {
          "start" : 1748048923945,
          "stop" : 1748048924474,
          "duration" : 529
        }
      }, {
        "uid" : "99d367da30ce208b",
        "reportUrl" : "https://lambotik.github.io/Oblache/411//#testresult/99d367da30ce208b",
        "status" : "passed",
        "time" : {
          "start" : 1747962672379,
          "stop" : 1747962672799,
          "duration" : 420
        }
      }, {
        "uid" : "58333bd996b9387c",
        "reportUrl" : "https://lambotik.github.io/Oblache/410//#testresult/58333bd996b9387c",
        "status" : "passed",
        "time" : {
          "start" : 1747876280572,
          "stop" : 1747876280928,
          "duration" : 356
        }
      }, {
        "uid" : "96f052a790a19026",
        "reportUrl" : "https://lambotik.github.io/Oblache/409//#testresult/96f052a790a19026",
        "status" : "passed",
        "time" : {
          "start" : 1747789917979,
          "stop" : 1747789918338,
          "duration" : 359
        }
      }, {
        "uid" : "674bf0266307961a",
        "reportUrl" : "https://lambotik.github.io/Oblache/408//#testresult/674bf0266307961a",
        "status" : "passed",
        "time" : {
          "start" : 1747703550736,
          "stop" : 1747703551041,
          "duration" : 305
        }
      }, {
        "uid" : "5e55eb1a1a9cd411",
        "reportUrl" : "https://lambotik.github.io/Oblache/407//#testresult/5e55eb1a1a9cd411",
        "status" : "passed",
        "time" : {
          "start" : 1747617264266,
          "stop" : 1747617264760,
          "duration" : 494
        }
      }, {
        "uid" : "737d56913d707c76",
        "reportUrl" : "https://lambotik.github.io/Oblache/406//#testresult/737d56913d707c76",
        "status" : "passed",
        "time" : {
          "start" : 1747530958507,
          "stop" : 1747530958908,
          "duration" : 401
        }
      }, {
        "uid" : "ee6b6efdd60e631d",
        "reportUrl" : "https://lambotik.github.io/Oblache/405//#testresult/ee6b6efdd60e631d",
        "status" : "passed",
        "time" : {
          "start" : 1747444202286,
          "stop" : 1747444202646,
          "duration" : 360
        }
      }, {
        "uid" : "3fd25b8511606206",
        "reportUrl" : "https://lambotik.github.io/Oblache/404//#testresult/3fd25b8511606206",
        "status" : "passed",
        "time" : {
          "start" : 1747357905146,
          "stop" : 1747357905459,
          "duration" : 313
        }
      }, {
        "uid" : "450553728c565930",
        "reportUrl" : "https://lambotik.github.io/Oblache/403//#testresult/450553728c565930",
        "status" : "passed",
        "time" : {
          "start" : 1747271300427,
          "stop" : 1747271300735,
          "duration" : 308
        }
      }, {
        "uid" : "a39d79e2c614a2d5",
        "reportUrl" : "https://lambotik.github.io/Oblache/402//#testresult/a39d79e2c614a2d5",
        "status" : "passed",
        "time" : {
          "start" : 1747185035437,
          "stop" : 1747185035946,
          "duration" : 509
        }
      }, {
        "uid" : "ddfbe42699eb2ace",
        "reportUrl" : "https://lambotik.github.io/Oblache/401//#testresult/ddfbe42699eb2ace",
        "status" : "passed",
        "time" : {
          "start" : 1747098709884,
          "stop" : 1747098710245,
          "duration" : 361
        }
      }, {
        "uid" : "f463b10911dc881c",
        "reportUrl" : "https://lambotik.github.io/Oblache/400//#testresult/f463b10911dc881c",
        "status" : "passed",
        "time" : {
          "start" : 1747012410079,
          "stop" : 1747012410647,
          "duration" : 568
        }
      }, {
        "uid" : "5c61bec2a648ab77",
        "reportUrl" : "https://lambotik.github.io/Oblache/399//#testresult/5c61bec2a648ab77",
        "status" : "passed",
        "time" : {
          "start" : 1746926106835,
          "stop" : 1746926107346,
          "duration" : 511
        }
      }, {
        "uid" : "4dd2d2bf2499681f",
        "reportUrl" : "https://lambotik.github.io/Oblache/398//#testresult/4dd2d2bf2499681f",
        "status" : "passed",
        "time" : {
          "start" : 1746839273374,
          "stop" : 1746839273679,
          "duration" : 305
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "5a0c4d3227094eb4.json",
  "parameterValues" : [ ]
}