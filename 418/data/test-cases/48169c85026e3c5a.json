{
  "uid" : "48169c85026e3c5a",
  "name" : "POST registration email is taken for bg-bg",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_registration_email_is_taken_for_bg_bg",
  "historyId" : "c7811bd494d11b8399f0b3c44a1e89fb",
  "time" : {
    "start" : 1748568733598,
    "stop" : 1748568793930,
    "duration" : 60332
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 504",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7ff73dc92f30>\n\n    @allure.title('POST registration email is taken for bg-bg')\n    def test_post_registration_email_is_taken_for_bg_bg(self):\n        response = API.post_registration(\n            email=TestPOST.email,\n            old_password=TestPOST.old_password,\n            language=\"bg-bg\",\n            tos_agree=True)\n>       Checking.check_status_code(response, 400)\n\ntests_api/test_bd.py:185: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [504]>, status_code = 400\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 504\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 504",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7ff73dc92f30>\n\n    @allure.title('POST registration email is taken for bg-bg')\n    def test_post_registration_email_is_taken_for_bg_bg(self):\n        response = API.post_registration(\n            email=TestPOST.email,\n            old_password=TestPOST.old_password,\n            language=\"bg-bg\",\n            tos_agree=True)\n>       Checking.check_status_code(response, 400)\n\ntests_api/test_bd.py:185: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [504]>, status_code = 400\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 504\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "Endpoint: /register",
      "time" : {
        "start" : 1748568793930,
        "stop" : 1748568793930,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request:",
      "time" : {
        "start" : 1748568793930,
        "stop" : 1748568793930,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': ''}",
        "time" : {
          "start" : 1748568793930,
          "stop" : 1748568793930,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Body: \n                            {\n                            \"email\": email,\n                            \"password\": password,\n                            \"tos_agree\": True,\n                            \"language\": bg-bg\n                           }",
        "time" : {
          "start" : 1748568793930,
          "stop" : 1748568793930,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Response:",
      "time" : {
        "start" : 1748568793930,
        "stop" : 1748568793930,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Status code: 504",
        "time" : {
          "start" : 1748568793930,
          "stop" : 1748568793930,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "JSON: <html>\r\n<head><title>504 Gateway Time-out</title></head>\r\n<body>\r\n<center><h1>504 Gateway Time-out</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
        "time" : {
          "start" : 1748568793930,
          "stop" : 1748568793930,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 400 == Response status code: 504",
      "time" : {
        "start" : 1748568793930,
        "stop" : 1748568793930,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 504\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 8,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "pkrvmf6wy0o8zjz"
  }, {
    "name" : "thread",
    "value" : "2708-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 13,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 190,
        "unknown" : 0,
        "total" : 203
      },
      "items" : [ {
        "uid" : "97a0c0978a1d46c4",
        "reportUrl" : "https://lambotik.github.io/Oblache/417//#testresult/97a0c0978a1d46c4",
        "status" : "passed",
        "time" : {
          "start" : 1748481128241,
          "stop" : 1748481128609,
          "duration" : 368
        }
      }, {
        "uid" : "dd296120f5781cda",
        "reportUrl" : "https://lambotik.github.io/Oblache/416//#testresult/dd296120f5781cda",
        "status" : "passed",
        "time" : {
          "start" : 1748394738061,
          "stop" : 1748394738384,
          "duration" : 323
        }
      }, {
        "uid" : "24c01a4c4d6a252f",
        "reportUrl" : "https://lambotik.github.io/Oblache/415//#testresult/24c01a4c4d6a252f",
        "status" : "passed",
        "time" : {
          "start" : 1748308248770,
          "stop" : 1748308249075,
          "duration" : 305
        }
      }, {
        "uid" : "d96fa7569ba49bfb",
        "reportUrl" : "https://lambotik.github.io/Oblache/414//#testresult/d96fa7569ba49bfb",
        "status" : "passed",
        "time" : {
          "start" : 1748222001012,
          "stop" : 1748222001315,
          "duration" : 303
        }
      }, {
        "uid" : "dc962a459c454edd",
        "reportUrl" : "https://lambotik.github.io/Oblache/413//#testresult/dc962a459c454edd",
        "status" : "passed",
        "time" : {
          "start" : 1748135878113,
          "stop" : 1748135878506,
          "duration" : 393
        }
      }, {
        "uid" : "d64b0b8ac74f590a",
        "reportUrl" : "https://lambotik.github.io/Oblache/412//#testresult/d64b0b8ac74f590a",
        "status" : "passed",
        "time" : {
          "start" : 1748048929249,
          "stop" : 1748048929781,
          "duration" : 532
        }
      }, {
        "uid" : "a1863bc9a04d4bfa",
        "reportUrl" : "https://lambotik.github.io/Oblache/411//#testresult/a1863bc9a04d4bfa",
        "status" : "passed",
        "time" : {
          "start" : 1747962676135,
          "stop" : 1747962676566,
          "duration" : 431
        }
      }, {
        "uid" : "a5e86acc0c887f5d",
        "reportUrl" : "https://lambotik.github.io/Oblache/410//#testresult/a5e86acc0c887f5d",
        "status" : "passed",
        "time" : {
          "start" : 1747876284292,
          "stop" : 1747876284654,
          "duration" : 362
        }
      }, {
        "uid" : "af886de889496e02",
        "reportUrl" : "https://lambotik.github.io/Oblache/409//#testresult/af886de889496e02",
        "status" : "passed",
        "time" : {
          "start" : 1747789921698,
          "stop" : 1747789922071,
          "duration" : 373
        }
      }, {
        "uid" : "c59ae28b1d3f6d9a",
        "reportUrl" : "https://lambotik.github.io/Oblache/408//#testresult/c59ae28b1d3f6d9a",
        "status" : "passed",
        "time" : {
          "start" : 1747703554009,
          "stop" : 1747703554319,
          "duration" : 310
        }
      }, {
        "uid" : "5f2baf4c5feb1c45",
        "reportUrl" : "https://lambotik.github.io/Oblache/407//#testresult/5f2baf4c5feb1c45",
        "status" : "passed",
        "time" : {
          "start" : 1747617267896,
          "stop" : 1747617268224,
          "duration" : 328
        }
      }, {
        "uid" : "28c5e99157466127",
        "reportUrl" : "https://lambotik.github.io/Oblache/406//#testresult/28c5e99157466127",
        "status" : "passed",
        "time" : {
          "start" : 1747530962307,
          "stop" : 1747530962667,
          "duration" : 360
        }
      }, {
        "uid" : "7818551af26bff4f",
        "reportUrl" : "https://lambotik.github.io/Oblache/405//#testresult/7818551af26bff4f",
        "status" : "passed",
        "time" : {
          "start" : 1747444206057,
          "stop" : 1747444206428,
          "duration" : 371
        }
      }, {
        "uid" : "5865619f275aad03",
        "reportUrl" : "https://lambotik.github.io/Oblache/404//#testresult/5865619f275aad03",
        "status" : "passed",
        "time" : {
          "start" : 1747357908361,
          "stop" : 1747357908675,
          "duration" : 314
        }
      }, {
        "uid" : "99caf0221b0ae318",
        "reportUrl" : "https://lambotik.github.io/Oblache/403//#testresult/99caf0221b0ae318",
        "status" : "passed",
        "time" : {
          "start" : 1747271303494,
          "stop" : 1747271303797,
          "duration" : 303
        }
      }, {
        "uid" : "c25b4114a9e58620",
        "reportUrl" : "https://lambotik.github.io/Oblache/402//#testresult/c25b4114a9e58620",
        "status" : "passed",
        "time" : {
          "start" : 1747185040658,
          "stop" : 1747185041158,
          "duration" : 500
        }
      }, {
        "uid" : "d7d0ce907615cc36",
        "reportUrl" : "https://lambotik.github.io/Oblache/401//#testresult/d7d0ce907615cc36",
        "status" : "passed",
        "time" : {
          "start" : 1747098713667,
          "stop" : 1747098714200,
          "duration" : 533
        }
      }, {
        "uid" : "bf45be297595563a",
        "reportUrl" : "https://lambotik.github.io/Oblache/400//#testresult/bf45be297595563a",
        "status" : "passed",
        "time" : {
          "start" : 1747012415451,
          "stop" : 1747012415864,
          "duration" : 413
        }
      }, {
        "uid" : "5b598dcaba66ab95",
        "reportUrl" : "https://lambotik.github.io/Oblache/399//#testresult/5b598dcaba66ab95",
        "status" : "passed",
        "time" : {
          "start" : 1746926112363,
          "stop" : 1746926112884,
          "duration" : 521
        }
      }, {
        "uid" : "b142eb0d062df5b1",
        "reportUrl" : "https://lambotik.github.io/Oblache/398//#testresult/b142eb0d062df5b1",
        "status" : "passed",
        "time" : {
          "start" : 1746839276477,
          "stop" : 1746839276786,
          "duration" : 309
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "48169c85026e3c5a.json",
  "parameterValues" : [ ]
}