{
  "uid" : "26cc252642a24550",
  "name" : "GET list list_dbtypes.",
  "fullName" : "tests_api.test_bd.TestGET#test_get_list_db_types",
  "historyId" : "a5ae0cd958e41b035b5b00dc6373e042",
  "time" : {
    "start" : 1743988142531,
    "stop" : 1743988143005,
    "duration" : 474
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 502",
  "statusTrace" : "self = <tests_api.test_bd.TestGET object at 0x7f8b79127080>\n\n    @allure.title('GET list list_dbtypes.')\n    def test_get_list_db_types(self):\n        response = API.get_list_db_types()\n>       Checking.check_status_code(response, 200)\n\ntests_api/test_bd.py:78: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 502",
    "statusTrace" : "self = <tests_api.test_bd.TestGET object at 0x7f8b79127080>\n\n    @allure.title('GET list list_dbtypes.')\n    def test_get_list_db_types(self):\n        response = API.get_list_db_types()\n>       Checking.check_status_code(response, 200)\n\ntests_api/test_bd.py:78: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "Endpoint: /list_dbtypes",
      "time" : {
        "start" : 1743988143005,
        "stop" : 1743988143005,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request:",
      "time" : {
        "start" : 1743988143005,
        "stop" : 1743988143005,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': 'None'}",
        "time" : {
          "start" : 1743988143005,
          "stop" : 1743988143005,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Body: None",
        "time" : {
          "start" : 1743988143005,
          "stop" : 1743988143005,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Response:",
      "time" : {
        "start" : 1743988143005,
        "stop" : 1743988143005,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Status code: 502",
        "time" : {
          "start" : 1743988143005,
          "stop" : 1743988143005,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "JSON: <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
        "time" : {
          "start" : 1743988143005,
          "stop" : 1743988143005,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 200 == Response status code: 502",
      "time" : {
        "start" : 1743988143005,
        "stop" : 1743988143005,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 502\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 8,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "GET"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestGET"
  }, {
    "name" : "host",
    "value" : "fv-az1344-338"
  }, {
    "name" : "thread",
    "value" : "2500-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 12,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 141,
        "unknown" : 0,
        "total" : 153
      },
      "items" : [ {
        "uid" : "dfb6e6bf273814b8",
        "reportUrl" : "https://lambotik.github.io/Oblache/364//#testresult/dfb6e6bf273814b8",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1743901858963,
          "stop" : 1743901859241,
          "duration" : 278
        }
      }, {
        "uid" : "d2c4766f10b370c7",
        "reportUrl" : "https://lambotik.github.io/Oblache/363//#testresult/d2c4766f10b370c7",
        "status" : "passed",
        "time" : {
          "start" : 1743815129978,
          "stop" : 1743815130378,
          "duration" : 400
        }
      }, {
        "uid" : "c350f799557813b2",
        "reportUrl" : "https://lambotik.github.io/Oblache/362//#testresult/c350f799557813b2",
        "status" : "passed",
        "time" : {
          "start" : 1743728781852,
          "stop" : 1743728782482,
          "duration" : 630
        }
      }, {
        "uid" : "726e830c416aae12",
        "reportUrl" : "https://lambotik.github.io/Oblache/361//#testresult/726e830c416aae12",
        "status" : "passed",
        "time" : {
          "start" : 1743642400009,
          "stop" : 1743642400390,
          "duration" : 381
        }
      }, {
        "uid" : "f4697931285f2647",
        "reportUrl" : "https://lambotik.github.io/Oblache/360//#testresult/f4697931285f2647",
        "status" : "passed",
        "time" : {
          "start" : 1743556056564,
          "stop" : 1743556056928,
          "duration" : 364
        }
      }, {
        "uid" : "10d10a09c2facb2c",
        "reportUrl" : "https://lambotik.github.io/Oblache/359//#testresult/10d10a09c2facb2c",
        "status" : "passed",
        "time" : {
          "start" : 1743470091396,
          "stop" : 1743470091753,
          "duration" : 357
        }
      }, {
        "uid" : "6e0e4f66e0967438",
        "reportUrl" : "https://lambotik.github.io/Oblache/358//#testresult/6e0e4f66e0967438",
        "status" : "passed",
        "time" : {
          "start" : 1743383420986,
          "stop" : 1743383421487,
          "duration" : 501
        }
      }, {
        "uid" : "d3d81dd4544b7b6f",
        "reportUrl" : "https://lambotik.github.io/Oblache/357//#testresult/d3d81dd4544b7b6f",
        "status" : "passed",
        "time" : {
          "start" : 1743297093127,
          "stop" : 1743297093470,
          "duration" : 343
        }
      }, {
        "uid" : "b9aa7d9f5f855ec2",
        "reportUrl" : "https://lambotik.github.io/Oblache/356//#testresult/b9aa7d9f5f855ec2",
        "status" : "passed",
        "time" : {
          "start" : 1743210317495,
          "stop" : 1743210317814,
          "duration" : 319
        }
      }, {
        "uid" : "20ed073ec9701283",
        "reportUrl" : "https://lambotik.github.io/Oblache/355//#testresult/20ed073ec9701283",
        "status" : "passed",
        "time" : {
          "start" : 1743123950606,
          "stop" : 1743123950987,
          "duration" : 381
        }
      }, {
        "uid" : "5a9023c92f72ff0",
        "reportUrl" : "https://lambotik.github.io/Oblache/354//#testresult/5a9023c92f72ff0",
        "status" : "passed",
        "time" : {
          "start" : 1743037558266,
          "stop" : 1743037558637,
          "duration" : 371
        }
      }, {
        "uid" : "2cdf03b7a3fc85b",
        "reportUrl" : "https://lambotik.github.io/Oblache/353//#testresult/2cdf03b7a3fc85b",
        "status" : "passed",
        "time" : {
          "start" : 1742951169373,
          "stop" : 1742951169676,
          "duration" : 303
        }
      }, {
        "uid" : "cd5032024ce39fba",
        "reportUrl" : "https://lambotik.github.io/Oblache/352//#testresult/cd5032024ce39fba",
        "status" : "passed",
        "time" : {
          "start" : 1742864784276,
          "stop" : 1742864784638,
          "duration" : 362
        }
      }, {
        "uid" : "b24111fb626e4483",
        "reportUrl" : "https://lambotik.github.io/Oblache/351//#testresult/b24111fb626e4483",
        "status" : "passed",
        "time" : {
          "start" : 1742778478823,
          "stop" : 1742778479360,
          "duration" : 537
        }
      }, {
        "uid" : "79251394e739b550",
        "reportUrl" : "https://lambotik.github.io/Oblache/350//#testresult/79251394e739b550",
        "status" : "passed",
        "time" : {
          "start" : 1742692230815,
          "stop" : 1742692231226,
          "duration" : 411
        }
      }, {
        "uid" : "b8408165e87d6d13",
        "reportUrl" : "https://lambotik.github.io/Oblache/349//#testresult/b8408165e87d6d13",
        "status" : "passed",
        "time" : {
          "start" : 1742605469866,
          "stop" : 1742605470240,
          "duration" : 374
        }
      }, {
        "uid" : "80dd2f2a86d49180",
        "reportUrl" : "https://lambotik.github.io/Oblache/348//#testresult/80dd2f2a86d49180",
        "status" : "passed",
        "time" : {
          "start" : 1742519161081,
          "stop" : 1742519161605,
          "duration" : 524
        }
      }, {
        "uid" : "6181198709da8c68",
        "reportUrl" : "https://lambotik.github.io/Oblache/347//#testresult/6181198709da8c68",
        "status" : "passed",
        "time" : {
          "start" : 1742432670583,
          "stop" : 1742432670963,
          "duration" : 380
        }
      }, {
        "uid" : "3d263a05effcc75f",
        "reportUrl" : "https://lambotik.github.io/Oblache/346//#testresult/3d263a05effcc75f",
        "status" : "passed",
        "time" : {
          "start" : 1742346359984,
          "stop" : 1742346360464,
          "duration" : 480
        }
      }, {
        "uid" : "cbc5efcb74263c99",
        "reportUrl" : "https://lambotik.github.io/Oblache/345//#testresult/cbc5efcb74263c99",
        "status" : "passed",
        "time" : {
          "start" : 1742259908821,
          "stop" : 1742259909331,
          "duration" : 510
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "26cc252642a24550.json",
  "parameterValues" : [ ]
}