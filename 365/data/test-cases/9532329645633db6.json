{
  "uid" : "9532329645633db6",
  "name" : "GET list db_versions.",
  "fullName" : "tests_api.test_bd.TestGET#test_get_list_db_versions",
  "historyId" : "8bbfe42adf25237260fbe695e4aa058a",
  "time" : {
    "start" : 1743988143015,
    "stop" : 1743988143485,
    "duration" : 470
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 502",
  "statusTrace" : "self = <tests_api.test_bd.TestGET object at 0x7f8b791271a0>\n\n    @allure.title('GET list db_versions.')\n    def test_get_list_db_versions(self):\n        response = API.get_list_dbversions()\n>       Checking.check_status_code(response, 200)\n\ntests_api/test_bd.py:83: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 502",
    "statusTrace" : "self = <tests_api.test_bd.TestGET object at 0x7f8b791271a0>\n\n    @allure.title('GET list db_versions.')\n    def test_get_list_db_versions(self):\n        response = API.get_list_dbversions()\n>       Checking.check_status_code(response, 200)\n\ntests_api/test_bd.py:83: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "Endpoint: /list_dbversions",
      "time" : {
        "start" : 1743988143485,
        "stop" : 1743988143485,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request:",
      "time" : {
        "start" : 1743988143485,
        "stop" : 1743988143485,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': 'None'}",
        "time" : {
          "start" : 1743988143485,
          "stop" : 1743988143485,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Body: None",
        "time" : {
          "start" : 1743988143485,
          "stop" : 1743988143485,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Response:",
      "time" : {
        "start" : 1743988143485,
        "stop" : 1743988143485,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Status code: 502",
        "time" : {
          "start" : 1743988143485,
          "stop" : 1743988143485,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "JSON: <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
        "time" : {
          "start" : 1743988143485,
          "stop" : 1743988143485,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 200 == Response status code: 502",
      "time" : {
        "start" : 1743988143485,
        "stop" : 1743988143485,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 502\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 8,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "GET"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestGET"
  }, {
    "name" : "host",
    "value" : "fv-az1344-338"
  }, {
    "name" : "thread",
    "value" : "2500-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 13,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 140,
        "unknown" : 0,
        "total" : 153
      },
      "items" : [ {
        "uid" : "7b19349e58dae482",
        "reportUrl" : "https://lambotik.github.io/Oblache/364//#testresult/7b19349e58dae482",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1743901859252,
          "stop" : 1743901859535,
          "duration" : 283
        }
      }, {
        "uid" : "16ce6d87c0e042c8",
        "reportUrl" : "https://lambotik.github.io/Oblache/363//#testresult/16ce6d87c0e042c8",
        "status" : "passed",
        "time" : {
          "start" : 1743815130380,
          "stop" : 1743815130711,
          "duration" : 331
        }
      }, {
        "uid" : "c03c0521913d9376",
        "reportUrl" : "https://lambotik.github.io/Oblache/362//#testresult/c03c0521913d9376",
        "status" : "passed",
        "time" : {
          "start" : 1743728782484,
          "stop" : 1743728782994,
          "duration" : 510
        }
      }, {
        "uid" : "fb273692d36344a6",
        "reportUrl" : "https://lambotik.github.io/Oblache/361//#testresult/fb273692d36344a6",
        "status" : "passed",
        "time" : {
          "start" : 1743642400391,
          "stop" : 1743642400792,
          "duration" : 401
        }
      }, {
        "uid" : "f71ec504db065ea9",
        "reportUrl" : "https://lambotik.github.io/Oblache/360//#testresult/f71ec504db065ea9",
        "status" : "passed",
        "time" : {
          "start" : 1743556056930,
          "stop" : 1743556057298,
          "duration" : 368
        }
      }, {
        "uid" : "1c36647e66db96ef",
        "reportUrl" : "https://lambotik.github.io/Oblache/359//#testresult/1c36647e66db96ef",
        "status" : "passed",
        "time" : {
          "start" : 1743470091754,
          "stop" : 1743470092137,
          "duration" : 383
        }
      }, {
        "uid" : "4321abe9cf8d56d8",
        "reportUrl" : "https://lambotik.github.io/Oblache/358//#testresult/4321abe9cf8d56d8",
        "status" : "passed",
        "time" : {
          "start" : 1743383421488,
          "stop" : 1743383421995,
          "duration" : 507
        }
      }, {
        "uid" : "4f19615250aca7e7",
        "reportUrl" : "https://lambotik.github.io/Oblache/357//#testresult/4f19615250aca7e7",
        "status" : "passed",
        "time" : {
          "start" : 1743297093472,
          "stop" : 1743297093796,
          "duration" : 324
        }
      }, {
        "uid" : "99d68c0cf3a19d02",
        "reportUrl" : "https://lambotik.github.io/Oblache/356//#testresult/99d68c0cf3a19d02",
        "status" : "passed",
        "time" : {
          "start" : 1743210317815,
          "stop" : 1743210318142,
          "duration" : 327
        }
      }, {
        "uid" : "b175df3a97ade0f3",
        "reportUrl" : "https://lambotik.github.io/Oblache/355//#testresult/b175df3a97ade0f3",
        "status" : "passed",
        "time" : {
          "start" : 1743123950989,
          "stop" : 1743123951384,
          "duration" : 395
        }
      }, {
        "uid" : "a588667b40713fc6",
        "reportUrl" : "https://lambotik.github.io/Oblache/354//#testresult/a588667b40713fc6",
        "status" : "passed",
        "time" : {
          "start" : 1743037558638,
          "stop" : 1743037559076,
          "duration" : 438
        }
      }, {
        "uid" : "ab709950ec1fb73f",
        "reportUrl" : "https://lambotik.github.io/Oblache/353//#testresult/ab709950ec1fb73f",
        "status" : "passed",
        "time" : {
          "start" : 1742951169678,
          "stop" : 1742951169998,
          "duration" : 320
        }
      }, {
        "uid" : "5efcc8da60694b32",
        "reportUrl" : "https://lambotik.github.io/Oblache/352//#testresult/5efcc8da60694b32",
        "status" : "passed",
        "time" : {
          "start" : 1742864784640,
          "stop" : 1742864784997,
          "duration" : 357
        }
      }, {
        "uid" : "d136b5108e56199b",
        "reportUrl" : "https://lambotik.github.io/Oblache/351//#testresult/d136b5108e56199b",
        "status" : "passed",
        "time" : {
          "start" : 1742778479362,
          "stop" : 1742778479872,
          "duration" : 510
        }
      }, {
        "uid" : "816e022023b82093",
        "reportUrl" : "https://lambotik.github.io/Oblache/350//#testresult/816e022023b82093",
        "status" : "passed",
        "time" : {
          "start" : 1742692231228,
          "stop" : 1742692231628,
          "duration" : 400
        }
      }, {
        "uid" : "269847fcd659cd37",
        "reportUrl" : "https://lambotik.github.io/Oblache/349//#testresult/269847fcd659cd37",
        "status" : "passed",
        "time" : {
          "start" : 1742605470241,
          "stop" : 1742605470553,
          "duration" : 312
        }
      }, {
        "uid" : "96568c2c2d634e7f",
        "reportUrl" : "https://lambotik.github.io/Oblache/348//#testresult/96568c2c2d634e7f",
        "status" : "passed",
        "time" : {
          "start" : 1742519161607,
          "stop" : 1742519162116,
          "duration" : 509
        }
      }, {
        "uid" : "40ff4f08604dfbc7",
        "reportUrl" : "https://lambotik.github.io/Oblache/347//#testresult/40ff4f08604dfbc7",
        "status" : "passed",
        "time" : {
          "start" : 1742432670964,
          "stop" : 1742432671339,
          "duration" : 375
        }
      }, {
        "uid" : "3e20906959c78af1",
        "reportUrl" : "https://lambotik.github.io/Oblache/346//#testresult/3e20906959c78af1",
        "status" : "passed",
        "time" : {
          "start" : 1742346360466,
          "stop" : 1742346360780,
          "duration" : 314
        }
      }, {
        "uid" : "ecb83e6bd06dabf0",
        "reportUrl" : "https://lambotik.github.io/Oblache/345//#testresult/ecb83e6bd06dabf0",
        "status" : "passed",
        "time" : {
          "start" : 1742259909333,
          "stop" : 1742259909843,
          "duration" : 510
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "9532329645633db6.json",
  "parameterValues" : [ ]
}