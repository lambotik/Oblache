{
  "uid" : "66d51d371ff73e1f",
  "name" : "POST is_logged_with_wrong_token",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_is_logged_with_wrong_token",
  "historyId" : "e64b1bb9888c29958e823605e9d5d50f",
  "time" : {
    "start" : 1743988150937,
    "stop" : 1743988151410,
    "duration" : 473
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 502",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f8b79127e60>\n\n    @allure.title('POST is_logged_with_wrong_token')\n    def test_post_is_logged_with_wrong_token(self):\n        response = API.post_is_logged_with_wrong_token()\n>       Checking.check_status_code(response, 401)\n\ntests_api/test_bd.py:215: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 401\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 502",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f8b79127e60>\n\n    @allure.title('POST is_logged_with_wrong_token')\n    def test_post_is_logged_with_wrong_token(self):\n        response = API.post_is_logged_with_wrong_token()\n>       Checking.check_status_code(response, 401)\n\ntests_api/test_bd.py:215: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 401\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "post_is_logged",
      "time" : {
        "start" : 1743988150937,
        "stop" : 1743988151409,
        "duration" : 472
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /is_logged",
        "time" : {
          "start" : 1743988151409,
          "stop" : 1743988151409,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1743988151409,
          "stop" : 1743988151409,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': '1'}",
          "time" : {
            "start" : 1743988151409,
            "stop" : 1743988151409,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: None",
          "time" : {
            "start" : 1743988151409,
            "stop" : 1743988151409,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1743988151409,
          "stop" : 1743988151409,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 502",
          "time" : {
            "start" : 1743988151409,
            "stop" : 1743988151409,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
          "time" : {
            "start" : 1743988151409,
            "stop" : 1743988151409,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 7,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 401 == Response status code: 502",
      "time" : {
        "start" : 1743988151409,
        "stop" : 1743988151409,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 502\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 9,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "fv-az1344-338"
  }, {
    "name" : "thread",
    "value" : "2500-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 12,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 141,
        "unknown" : 0,
        "total" : 153
      },
      "items" : [ {
        "uid" : "abc1e969a1db1f01",
        "reportUrl" : "https://lambotik.github.io/Oblache/364//#testresult/abc1e969a1db1f01",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1743901865050,
          "stop" : 1743901865327,
          "duration" : 277
        }
      }, {
        "uid" : "bae37f7353047e3c",
        "reportUrl" : "https://lambotik.github.io/Oblache/363//#testresult/bae37f7353047e3c",
        "status" : "passed",
        "time" : {
          "start" : 1743815135730,
          "stop" : 1743815136047,
          "duration" : 317
        }
      }, {
        "uid" : "993e7ad436b368e3",
        "reportUrl" : "https://lambotik.github.io/Oblache/362//#testresult/993e7ad436b368e3",
        "status" : "passed",
        "time" : {
          "start" : 1743728790460,
          "stop" : 1743728791090,
          "duration" : 630
        }
      }, {
        "uid" : "fcc9e08039b4407b",
        "reportUrl" : "https://lambotik.github.io/Oblache/361//#testresult/fcc9e08039b4407b",
        "status" : "passed",
        "time" : {
          "start" : 1743642406073,
          "stop" : 1743642406455,
          "duration" : 382
        }
      }, {
        "uid" : "f6eb8ddbf9e62631",
        "reportUrl" : "https://lambotik.github.io/Oblache/360//#testresult/f6eb8ddbf9e62631",
        "status" : "passed",
        "time" : {
          "start" : 1743556062547,
          "stop" : 1743556062926,
          "duration" : 379
        }
      }, {
        "uid" : "1cea2c6629efc5b",
        "reportUrl" : "https://lambotik.github.io/Oblache/359//#testresult/1cea2c6629efc5b",
        "status" : "passed",
        "time" : {
          "start" : 1743470096644,
          "stop" : 1743470097022,
          "duration" : 378
        }
      }, {
        "uid" : "3b877344cdf738dd",
        "reportUrl" : "https://lambotik.github.io/Oblache/358//#testresult/3b877344cdf738dd",
        "status" : "passed",
        "time" : {
          "start" : 1743383429154,
          "stop" : 1743383429653,
          "duration" : 499
        }
      }, {
        "uid" : "9606f5b25d355ff5",
        "reportUrl" : "https://lambotik.github.io/Oblache/357//#testresult/9606f5b25d355ff5",
        "status" : "passed",
        "time" : {
          "start" : 1743297098432,
          "stop" : 1743297098746,
          "duration" : 314
        }
      }, {
        "uid" : "374f8a503313ab48",
        "reportUrl" : "https://lambotik.github.io/Oblache/356//#testresult/374f8a503313ab48",
        "status" : "passed",
        "time" : {
          "start" : 1743210322876,
          "stop" : 1743210323250,
          "duration" : 374
        }
      }, {
        "uid" : "987a1e0ab2e412b2",
        "reportUrl" : "https://lambotik.github.io/Oblache/355//#testresult/987a1e0ab2e412b2",
        "status" : "passed",
        "time" : {
          "start" : 1743123956693,
          "stop" : 1743123957066,
          "duration" : 373
        }
      }, {
        "uid" : "f6dd55a1dbd3b479",
        "reportUrl" : "https://lambotik.github.io/Oblache/354//#testresult/f6dd55a1dbd3b479",
        "status" : "passed",
        "time" : {
          "start" : 1743037564257,
          "stop" : 1743037564634,
          "duration" : 377
        }
      }, {
        "uid" : "f854e5028136381c",
        "reportUrl" : "https://lambotik.github.io/Oblache/353//#testresult/f854e5028136381c",
        "status" : "passed",
        "time" : {
          "start" : 1742951174584,
          "stop" : 1742951174892,
          "duration" : 308
        }
      }, {
        "uid" : "cdf47ed8135aa688",
        "reportUrl" : "https://lambotik.github.io/Oblache/352//#testresult/cdf47ed8135aa688",
        "status" : "passed",
        "time" : {
          "start" : 1742864789475,
          "stop" : 1742864789778,
          "duration" : 303
        }
      }, {
        "uid" : "9aa1c5f6ee02213a",
        "reportUrl" : "https://lambotik.github.io/Oblache/351//#testresult/9aa1c5f6ee02213a",
        "status" : "passed",
        "time" : {
          "start" : 1742778487075,
          "stop" : 1742778487581,
          "duration" : 506
        }
      }, {
        "uid" : "42aea9f079f1afa8",
        "reportUrl" : "https://lambotik.github.io/Oblache/350//#testresult/42aea9f079f1afa8",
        "status" : "passed",
        "time" : {
          "start" : 1742692236841,
          "stop" : 1742692237205,
          "duration" : 364
        }
      }, {
        "uid" : "af5b0e75ed956102",
        "reportUrl" : "https://lambotik.github.io/Oblache/349//#testresult/af5b0e75ed956102",
        "status" : "passed",
        "time" : {
          "start" : 1742605475406,
          "stop" : 1742605475742,
          "duration" : 336
        }
      }, {
        "uid" : "7a94c88ec5e3037f",
        "reportUrl" : "https://lambotik.github.io/Oblache/348//#testresult/7a94c88ec5e3037f",
        "status" : "passed",
        "time" : {
          "start" : 1742519169349,
          "stop" : 1742519169850,
          "duration" : 501
        }
      }, {
        "uid" : "5c66c71a8fbca07a",
        "reportUrl" : "https://lambotik.github.io/Oblache/347//#testresult/5c66c71a8fbca07a",
        "status" : "passed",
        "time" : {
          "start" : 1742432676898,
          "stop" : 1742432677266,
          "duration" : 368
        }
      }, {
        "uid" : "c420e0fa8e7d1ee2",
        "reportUrl" : "https://lambotik.github.io/Oblache/346//#testresult/c420e0fa8e7d1ee2",
        "status" : "passed",
        "time" : {
          "start" : 1742346365682,
          "stop" : 1742346365992,
          "duration" : 310
        }
      }, {
        "uid" : "fc4ab63896a5a74",
        "reportUrl" : "https://lambotik.github.io/Oblache/345//#testresult/fc4ab63896a5a74",
        "status" : "passed",
        "time" : {
          "start" : 1742259917049,
          "stop" : 1742259917554,
          "duration" : 505
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "66d51d371ff73e1f.json",
  "parameterValues" : [ ]
}