{
  "uid" : "1ee048e639588790",
  "name" : "POST db_list",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_db_list",
  "historyId" : "74e2e9a19a1c9ee2ec47a859e878d5d7",
  "time" : {
    "start" : 1743988156840,
    "stop" : 1743988157312,
    "duration" : 472
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 502",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f8b78eb48f0>\n\n    @allure.title('POST db_list')\n    def test_post_db_list(self):\n        response_db_list = API.post_db_list(token=TestPOST.token)\n>       Checking.check_status_code(response_db_list, 200)\n\ntests_api/test_bd.py:294: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 502",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f8b78eb48f0>\n\n    @allure.title('POST db_list')\n    def test_post_db_list(self):\n        response_db_list = API.post_db_list(token=TestPOST.token)\n>       Checking.check_status_code(response_db_list, 200)\n\ntests_api/test_bd.py:294: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "post_db_list",
      "time" : {
        "start" : 1743988156840,
        "stop" : 1743988157312,
        "duration" : 472
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /db_list",
        "time" : {
          "start" : 1743988157311,
          "stop" : 1743988157312,
          "duration" : 1
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1743988157312,
          "stop" : 1743988157312,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': 'None'}",
          "time" : {
            "start" : 1743988157312,
            "stop" : 1743988157312,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: None",
          "time" : {
            "start" : 1743988157312,
            "stop" : 1743988157312,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1743988157312,
          "stop" : 1743988157312,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 502",
          "time" : {
            "start" : 1743988157312,
            "stop" : 1743988157312,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
          "time" : {
            "start" : 1743988157312,
            "stop" : 1743988157312,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 7,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 200 == Response status code: 502",
      "time" : {
        "start" : 1743988157312,
        "stop" : 1743988157312,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 502\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 9,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "fv-az1344-338"
  }, {
    "name" : "thread",
    "value" : "2500-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 13,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 140,
        "unknown" : 0,
        "total" : 153
      },
      "items" : [ {
        "uid" : "85d910f21435f9ef",
        "reportUrl" : "https://lambotik.github.io/Oblache/364//#testresult/85d910f21435f9ef",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1743901868536,
          "stop" : 1743901868807,
          "duration" : 271
        }
      }, {
        "uid" : "7b921bb45244dfa5",
        "reportUrl" : "https://lambotik.github.io/Oblache/363//#testresult/7b921bb45244dfa5",
        "status" : "passed",
        "time" : {
          "start" : 1743815142118,
          "stop" : 1743815142447,
          "duration" : 329
        }
      }, {
        "uid" : "57027165e59ce51e",
        "reportUrl" : "https://lambotik.github.io/Oblache/362//#testresult/57027165e59ce51e",
        "status" : "passed",
        "time" : {
          "start" : 1743728799958,
          "stop" : 1743728800466,
          "duration" : 508
        }
      }, {
        "uid" : "2f77da6fdfae6552",
        "reportUrl" : "https://lambotik.github.io/Oblache/361//#testresult/2f77da6fdfae6552",
        "status" : "passed",
        "time" : {
          "start" : 1743642412857,
          "stop" : 1743642413224,
          "duration" : 367
        }
      }, {
        "uid" : "42075bad1d3329c4",
        "reportUrl" : "https://lambotik.github.io/Oblache/360//#testresult/42075bad1d3329c4",
        "status" : "passed",
        "time" : {
          "start" : 1743556069373,
          "stop" : 1743556069738,
          "duration" : 365
        }
      }, {
        "uid" : "b7a8b48bc594da57",
        "reportUrl" : "https://lambotik.github.io/Oblache/359//#testresult/b7a8b48bc594da57",
        "status" : "passed",
        "time" : {
          "start" : 1743470102604,
          "stop" : 1743470102909,
          "duration" : 305
        }
      }, {
        "uid" : "705533396baa64ff",
        "reportUrl" : "https://lambotik.github.io/Oblache/358//#testresult/705533396baa64ff",
        "status" : "passed",
        "time" : {
          "start" : 1743383438325,
          "stop" : 1743383438831,
          "duration" : 506
        }
      }, {
        "uid" : "1580af90e13b710",
        "reportUrl" : "https://lambotik.github.io/Oblache/357//#testresult/1580af90e13b710",
        "status" : "passed",
        "time" : {
          "start" : 1743297104334,
          "stop" : 1743297104712,
          "duration" : 378
        }
      }, {
        "uid" : "bd77dfcb70d25850",
        "reportUrl" : "https://lambotik.github.io/Oblache/356//#testresult/bd77dfcb70d25850",
        "status" : "passed",
        "time" : {
          "start" : 1743210328927,
          "stop" : 1743210329255,
          "duration" : 328
        }
      }, {
        "uid" : "3303f482fb00fc7f",
        "reportUrl" : "https://lambotik.github.io/Oblache/355//#testresult/3303f482fb00fc7f",
        "status" : "passed",
        "time" : {
          "start" : 1743123963462,
          "stop" : 1743123963837,
          "duration" : 375
        }
      }, {
        "uid" : "9bf9b58b643f0ee1",
        "reportUrl" : "https://lambotik.github.io/Oblache/354//#testresult/9bf9b58b643f0ee1",
        "status" : "passed",
        "time" : {
          "start" : 1743037571067,
          "stop" : 1743037571428,
          "duration" : 361
        }
      }, {
        "uid" : "dcc8585620a88e5b",
        "reportUrl" : "https://lambotik.github.io/Oblache/353//#testresult/dcc8585620a88e5b",
        "status" : "passed",
        "time" : {
          "start" : 1742951180440,
          "stop" : 1742951180748,
          "duration" : 308
        }
      }, {
        "uid" : "5d7df6a4fe34b7ae",
        "reportUrl" : "https://lambotik.github.io/Oblache/352//#testresult/5d7df6a4fe34b7ae",
        "status" : "passed",
        "time" : {
          "start" : 1742864795258,
          "stop" : 1742864795570,
          "duration" : 312
        }
      }, {
        "uid" : "d60d12831596aff9",
        "reportUrl" : "https://lambotik.github.io/Oblache/351//#testresult/d60d12831596aff9",
        "status" : "passed",
        "time" : {
          "start" : 1742778496253,
          "stop" : 1742778496770,
          "duration" : 517
        }
      }, {
        "uid" : "fbe5e7fa4214f7b4",
        "reportUrl" : "https://lambotik.github.io/Oblache/350//#testresult/fbe5e7fa4214f7b4",
        "status" : "passed",
        "time" : {
          "start" : 1742692243548,
          "stop" : 1742692243913,
          "duration" : 365
        }
      }, {
        "uid" : "eb2a096122a023e5",
        "reportUrl" : "https://lambotik.github.io/Oblache/349//#testresult/eb2a096122a023e5",
        "status" : "passed",
        "time" : {
          "start" : 1742605481206,
          "stop" : 1742605481517,
          "duration" : 311
        }
      }, {
        "uid" : "b1cf0a50ef659e88",
        "reportUrl" : "https://lambotik.github.io/Oblache/348//#testresult/b1cf0a50ef659e88",
        "status" : "passed",
        "time" : {
          "start" : 1742519178617,
          "stop" : 1742519179123,
          "duration" : 506
        }
      }, {
        "uid" : "d117393df848f6f0",
        "reportUrl" : "https://lambotik.github.io/Oblache/347//#testresult/d117393df848f6f0",
        "status" : "passed",
        "time" : {
          "start" : 1742432683607,
          "stop" : 1742432683973,
          "duration" : 366
        }
      }, {
        "uid" : "e066cf53a27f06a3",
        "reportUrl" : "https://lambotik.github.io/Oblache/346//#testresult/e066cf53a27f06a3",
        "status" : "passed",
        "time" : {
          "start" : 1742346371810,
          "stop" : 1742346372119,
          "duration" : 309
        }
      }, {
        "uid" : "ed4fbdfe9115a95f",
        "reportUrl" : "https://lambotik.github.io/Oblache/345//#testresult/ed4fbdfe9115a95f",
        "status" : "passed",
        "time" : {
          "start" : 1742259926188,
          "stop" : 1742259926699,
          "duration" : 511
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "1ee048e639588790.json",
  "parameterValues" : [ ]
}