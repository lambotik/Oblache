{
  "uid" : "c95138b10093778a",
  "name" : "POST checking ports_len positive",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_checking_ports_len_positive",
  "historyId" : "c6f631852f230d7f46e21d1143ab0d56",
  "time" : {
    "start" : 1744765746152,
    "stop" : 1744765746455,
    "duration" : 303
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 400",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7fccb37dcc20>\n\n    @allure.title('POST checking ports_len positive')\n    def test_post_checking_ports_len_positive(self):\n        result = API.post_create_docker_container_checking_ports(\n            token=TestPOST.token,\n            port_len=\"80-89\")\n>       Checking.check_status_code(result, 201)\n\ntests_api/test_bd.py:374: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 201\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 400\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 400",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7fccb37dcc20>\n\n    @allure.title('POST checking ports_len positive')\n    def test_post_checking_ports_len_positive(self):\n        result = API.post_create_docker_container_checking_ports(\n            token=TestPOST.token,\n            port_len=\"80-89\")\n>       Checking.check_status_code(result, 201)\n\ntests_api/test_bd.py:374: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 201\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 400\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "post_create_docker_container",
      "time" : {
        "start" : 1744765746152,
        "stop" : 1744765746455,
        "duration" : 303
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /container_create",
        "time" : {
          "start" : 1744765746454,
          "stop" : 1744765746454,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1744765746454,
          "stop" : 1744765746455,
          "duration" : 1
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': '31c0943b-690e-4fc6-a383-9447c7e53073'}",
          "time" : {
            "start" : 1744765746454,
            "stop" : 1744765746454,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: {\"docker_image\": \"nginx\", \"int_ports\": f\"80-89\", \"env\": 3, \"region\": 3}",
          "time" : {
            "start" : 1744765746454,
            "stop" : 1744765746454,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1744765746455,
          "stop" : 1744765746455,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 400",
          "time" : {
            "start" : 1744765746455,
            "stop" : 1744765746455,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: {\n    \"msg_code\": -1,\n    \"msg\": \"endpoint is disabled\"\n}\n",
          "time" : {
            "start" : 1744765746455,
            "stop" : 1744765746455,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 7,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 201 == Response status code: 400",
      "time" : {
        "start" : 1744765746455,
        "stop" : 1744765746455,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 400\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 9,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "fv-az1787-421"
  }, {
    "name" : "thread",
    "value" : "2457-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 126,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 36,
        "unknown" : 0,
        "total" : 162
      },
      "items" : [ {
        "uid" : "4d2dd25b04241c62",
        "reportUrl" : "https://lambotik.github.io/Oblache/373//#testresult/4d2dd25b04241c62",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1744679386579,
          "stop" : 1744679386892,
          "duration" : 313
        }
      }, {
        "uid" : "ba485c46dfe9dc52",
        "reportUrl" : "https://lambotik.github.io/Oblache/372//#testresult/ba485c46dfe9dc52",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1744593052873,
          "stop" : 1744593053191,
          "duration" : 318
        }
      }, {
        "uid" : "5864f135ac4e2b75",
        "reportUrl" : "https://lambotik.github.io/Oblache/371//#testresult/5864f135ac4e2b75",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1744511803107,
          "stop" : 1744511803425,
          "duration" : 318
        }
      }, {
        "uid" : "af7c9f07b13048f7",
        "reportUrl" : "https://lambotik.github.io/Oblache/370//#testresult/af7c9f07b13048f7",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1744419986015,
          "stop" : 1744419986332,
          "duration" : 317
        }
      }, {
        "uid" : "979071c26cae711b",
        "reportUrl" : "https://lambotik.github.io/Oblache/369//#testresult/979071c26cae711b",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1744333697954,
          "stop" : 1744333698268,
          "duration" : 314
        }
      }, {
        "uid" : "379744e33b5ccae6",
        "reportUrl" : "https://lambotik.github.io/Oblache/368//#testresult/379744e33b5ccae6",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1744247245206,
          "stop" : 1744247245716,
          "duration" : 510
        }
      }, {
        "uid" : "ec2e63f7f9cfb8c4",
        "reportUrl" : "https://lambotik.github.io/Oblache/367//#testresult/ec2e63f7f9cfb8c4",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1744160850326,
          "stop" : 1744160850837,
          "duration" : 511
        }
      }, {
        "uid" : "5e4f1db02cd722ea",
        "reportUrl" : "https://lambotik.github.io/Oblache/366//#testresult/5e4f1db02cd722ea",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1744074432714,
          "stop" : 1744074433215,
          "duration" : 501
        }
      }, {
        "uid" : "cf5b0d665a95227a",
        "reportUrl" : "https://lambotik.github.io/Oblache/365//#testresult/cf5b0d665a95227a",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1743988161193,
          "stop" : 1743988161671,
          "duration" : 478
        }
      }, {
        "uid" : "34309e03caa16bd",
        "reportUrl" : "https://lambotik.github.io/Oblache/364//#testresult/34309e03caa16bd",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1743901871113,
          "stop" : 1743901871395,
          "duration" : 282
        }
      }, {
        "uid" : "fede75329f95e9a2",
        "reportUrl" : "https://lambotik.github.io/Oblache/363//#testresult/fede75329f95e9a2",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1743815146531,
          "stop" : 1743815146852,
          "duration" : 321
        }
      }, {
        "uid" : "8522c43d978f0a56",
        "reportUrl" : "https://lambotik.github.io/Oblache/362//#testresult/8522c43d978f0a56",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1743728807070,
          "stop" : 1743728807576,
          "duration" : 506
        }
      }, {
        "uid" : "8e46fa9d3d4eaadc",
        "reportUrl" : "https://lambotik.github.io/Oblache/361//#testresult/8e46fa9d3d4eaadc",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1743642417995,
          "stop" : 1743642418364,
          "duration" : 369
        }
      }, {
        "uid" : "5e4a9c172e7bfa13",
        "reportUrl" : "https://lambotik.github.io/Oblache/360//#testresult/5e4a9c172e7bfa13",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1743556074588,
          "stop" : 1743556074953,
          "duration" : 365
        }
      }, {
        "uid" : "d08c2303815781a9",
        "reportUrl" : "https://lambotik.github.io/Oblache/359//#testresult/d08c2303815781a9",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1743470106811,
          "stop" : 1743470107116,
          "duration" : 305
        }
      }, {
        "uid" : "d1f8a9ae6138e07",
        "reportUrl" : "https://lambotik.github.io/Oblache/358//#testresult/d1f8a9ae6138e07",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1743383445314,
          "stop" : 1743383445828,
          "duration" : 514
        }
      }, {
        "uid" : "23a40f1c30868a5c",
        "reportUrl" : "https://lambotik.github.io/Oblache/357//#testresult/23a40f1c30868a5c",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1743297108874,
          "stop" : 1743297109204,
          "duration" : 330
        }
      }, {
        "uid" : "81e8512a6c6d1a0",
        "reportUrl" : "https://lambotik.github.io/Oblache/356//#testresult/81e8512a6c6d1a0",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1743210333267,
          "stop" : 1743210333577,
          "duration" : 310
        }
      }, {
        "uid" : "7dd0d92518a133f3",
        "reportUrl" : "https://lambotik.github.io/Oblache/355//#testresult/7dd0d92518a133f3",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1743123968625,
          "stop" : 1743123968987,
          "duration" : 362
        }
      }, {
        "uid" : "187ab6e589215539",
        "reportUrl" : "https://lambotik.github.io/Oblache/354//#testresult/187ab6e589215539",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1743037576169,
          "stop" : 1743037576530,
          "duration" : 361
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "c95138b10093778a.json",
  "parameterValues" : [ ]
}