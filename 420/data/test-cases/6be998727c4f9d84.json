{
  "uid" : "6be998727c4f9d84",
  "name" : "GET list db_versions.",
  "fullName" : "tests_api.test_bd.TestGET#test_get_list_db_versions",
  "historyId" : "8bbfe42adf25237260fbe695e4aa058a",
  "time" : {
    "start" : 1748741703291,
    "stop" : 1748741763765,
    "duration" : 60474
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 504",
  "statusTrace" : "self = <tests_api.test_bd.TestGET object at 0x7f5f74b8e9f0>\n\n    @allure.title('GET list db_versions.')\n    def test_get_list_db_versions(self):\n        response = API.get_list_dbversions()\n>       Checking.check_status_code(response, 200)\n\ntests_api/test_bd.py:83: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [504]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 504\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 504",
    "statusTrace" : "self = <tests_api.test_bd.TestGET object at 0x7f5f74b8e9f0>\n\n    @allure.title('GET list db_versions.')\n    def test_get_list_db_versions(self):\n        response = API.get_list_dbversions()\n>       Checking.check_status_code(response, 200)\n\ntests_api/test_bd.py:83: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [504]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 504\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "Endpoint: /list_dbversions",
      "time" : {
        "start" : 1748741763764,
        "stop" : 1748741763764,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request:",
      "time" : {
        "start" : 1748741763764,
        "stop" : 1748741763765,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': ''}",
        "time" : {
          "start" : 1748741763764,
          "stop" : 1748741763764,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Body: None",
        "time" : {
          "start" : 1748741763765,
          "stop" : 1748741763765,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Response:",
      "time" : {
        "start" : 1748741763765,
        "stop" : 1748741763765,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Status code: 504",
        "time" : {
          "start" : 1748741763765,
          "stop" : 1748741763765,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "JSON: <html>\r\n<head><title>504 Gateway Time-out</title></head>\r\n<body>\r\n<center><h1>504 Gateway Time-out</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
        "time" : {
          "start" : 1748741763765,
          "stop" : 1748741763765,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 200 == Response status code: 504",
      "time" : {
        "start" : 1748741763765,
        "stop" : 1748741763765,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 504\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 8,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "GET"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestGET"
  }, {
    "name" : "host",
    "value" : "pkrvmf6wy0o8zjz"
  }, {
    "name" : "thread",
    "value" : "2773-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 16,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 189,
        "unknown" : 0,
        "total" : 205
      },
      "items" : [ {
        "uid" : "3c209e3b3947677a",
        "reportUrl" : "https://lambotik.github.io/Oblache/419//#testresult/3c209e3b3947677a",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 504",
        "time" : {
          "start" : 1748654417810,
          "stop" : 1748654478216,
          "duration" : 60406
        }
      }, {
        "uid" : "b3006570e138d143",
        "reportUrl" : "https://lambotik.github.io/Oblache/418//#testresult/b3006570e138d143",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 504",
        "time" : {
          "start" : 1748568009642,
          "stop" : 1748568070043,
          "duration" : 60401
        }
      }, {
        "uid" : "2efd33f038e8c029",
        "reportUrl" : "https://lambotik.github.io/Oblache/417//#testresult/2efd33f038e8c029",
        "status" : "passed",
        "time" : {
          "start" : 1748481123878,
          "stop" : 1748481124254,
          "duration" : 376
        }
      }, {
        "uid" : "aee00aae41f0b794",
        "reportUrl" : "https://lambotik.github.io/Oblache/416//#testresult/aee00aae41f0b794",
        "status" : "passed",
        "time" : {
          "start" : 1748394734383,
          "stop" : 1748394734715,
          "duration" : 332
        }
      }, {
        "uid" : "fc0af411a0562bcb",
        "reportUrl" : "https://lambotik.github.io/Oblache/415//#testresult/fc0af411a0562bcb",
        "status" : "passed",
        "time" : {
          "start" : 1748308245142,
          "stop" : 1748308245456,
          "duration" : 314
        }
      }, {
        "uid" : "e52972808fe1e5f2",
        "reportUrl" : "https://lambotik.github.io/Oblache/414//#testresult/e52972808fe1e5f2",
        "status" : "passed",
        "time" : {
          "start" : 1748221997373,
          "stop" : 1748221997684,
          "duration" : 311
        }
      }, {
        "uid" : "37e0fba54f5712f4",
        "reportUrl" : "https://lambotik.github.io/Oblache/413//#testresult/37e0fba54f5712f4",
        "status" : "passed",
        "time" : {
          "start" : 1748135874039,
          "stop" : 1748135874402,
          "duration" : 363
        }
      }, {
        "uid" : "8a2f558d6699fe8d",
        "reportUrl" : "https://lambotik.github.io/Oblache/412//#testresult/8a2f558d6699fe8d",
        "status" : "passed",
        "time" : {
          "start" : 1748048923423,
          "stop" : 1748048923944,
          "duration" : 521
        }
      }, {
        "uid" : "88c0136681f53689",
        "reportUrl" : "https://lambotik.github.io/Oblache/411//#testresult/88c0136681f53689",
        "status" : "passed",
        "time" : {
          "start" : 1747962672005,
          "stop" : 1747962672378,
          "duration" : 373
        }
      }, {
        "uid" : "3b3ef50010647fd3",
        "reportUrl" : "https://lambotik.github.io/Oblache/410//#testresult/3b3ef50010647fd3",
        "status" : "passed",
        "time" : {
          "start" : 1747876280199,
          "stop" : 1747876280570,
          "duration" : 371
        }
      }, {
        "uid" : "79dbf4533378dcd3",
        "reportUrl" : "https://lambotik.github.io/Oblache/409//#testresult/79dbf4533378dcd3",
        "status" : "passed",
        "time" : {
          "start" : 1747789917589,
          "stop" : 1747789917978,
          "duration" : 389
        }
      }, {
        "uid" : "38e99ed2dcaca3aa",
        "reportUrl" : "https://lambotik.github.io/Oblache/408//#testresult/38e99ed2dcaca3aa",
        "status" : "passed",
        "time" : {
          "start" : 1747703550355,
          "stop" : 1747703550735,
          "duration" : 380
        }
      }, {
        "uid" : "38e513133ef5ebfc",
        "reportUrl" : "https://lambotik.github.io/Oblache/407//#testresult/38e513133ef5ebfc",
        "status" : "passed",
        "time" : {
          "start" : 1747617263931,
          "stop" : 1747617264265,
          "duration" : 334
        }
      }, {
        "uid" : "9f805c7bf199708a",
        "reportUrl" : "https://lambotik.github.io/Oblache/406//#testresult/9f805c7bf199708a",
        "status" : "passed",
        "time" : {
          "start" : 1747530958089,
          "stop" : 1747530958506,
          "duration" : 417
        }
      }, {
        "uid" : "b968c72e22b2538e",
        "reportUrl" : "https://lambotik.github.io/Oblache/405//#testresult/b968c72e22b2538e",
        "status" : "passed",
        "time" : {
          "start" : 1747444201912,
          "stop" : 1747444202285,
          "duration" : 373
        }
      }, {
        "uid" : "a5c54f189e15dcb7",
        "reportUrl" : "https://lambotik.github.io/Oblache/404//#testresult/a5c54f189e15dcb7",
        "status" : "passed",
        "time" : {
          "start" : 1747357904833,
          "stop" : 1747357905145,
          "duration" : 312
        }
      }, {
        "uid" : "3f92daab4cf69c2f",
        "reportUrl" : "https://lambotik.github.io/Oblache/403//#testresult/3f92daab4cf69c2f",
        "status" : "passed",
        "time" : {
          "start" : 1747271300120,
          "stop" : 1747271300426,
          "duration" : 306
        }
      }, {
        "uid" : "d6204f7d72cc8441",
        "reportUrl" : "https://lambotik.github.io/Oblache/402//#testresult/d6204f7d72cc8441",
        "status" : "passed",
        "time" : {
          "start" : 1747185034916,
          "stop" : 1747185035436,
          "duration" : 520
        }
      }, {
        "uid" : "59ce04de4a404f9f",
        "reportUrl" : "https://lambotik.github.io/Oblache/401//#testresult/59ce04de4a404f9f",
        "status" : "passed",
        "time" : {
          "start" : 1747098709499,
          "stop" : 1747098709883,
          "duration" : 384
        }
      }, {
        "uid" : "d0966a1f09b91d7f",
        "reportUrl" : "https://lambotik.github.io/Oblache/400//#testresult/d0966a1f09b91d7f",
        "status" : "passed",
        "time" : {
          "start" : 1747012409482,
          "stop" : 1747012410077,
          "duration" : 595
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "6be998727c4f9d84.json",
  "parameterValues" : [ ]
}