{
  "uid" : "1b2512341aa746ba",
  "name" : "POST db_list_with_filter",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_db_list_with_filter",
  "historyId" : "1404cf75602dc5c195df0f6e9ffb5ba3",
  "time" : {
    "start" : 1748743518217,
    "stop" : 1748743578684,
    "duration" : 60467
  },
  "status" : "skipped",
  "statusMessage" : "XFAIL There are databases that need to be deleted manually.\n\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f5f74b8ff80>\n\n    @allure.title('POST db_list_with_filter')\n    @pytest.mark.xfail(reason='There are databases that need to be deleted manually.')\n    def test_post_db_list_with_filter(self):\n        list_db = API.post_db_list(token=TestPOST.token)\n>       json_list_db = json.loads(list_db.text)\n\ntests_api/test_bd.py:305: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/json/decoder.py:338: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f5f7601e660>\ns = '<html>\\r\\n<head><title>504 Gateway Time-out</title></head>\\r\\n<body>\\r\\n<center><h1>504 Gateway Time-out</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/json/decoder.py:356: JSONDecodeError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "skipped",
    "statusMessage" : "XFAIL There are databases that need to be deleted manually.\n\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f5f74b8ff80>\n\n    @allure.title('POST db_list_with_filter')\n    @pytest.mark.xfail(reason='There are databases that need to be deleted manually.')\n    def test_post_db_list_with_filter(self):\n        list_db = API.post_db_list(token=TestPOST.token)\n>       json_list_db = json.loads(list_db.text)\n\ntests_api/test_bd.py:305: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/json/decoder.py:338: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f5f7601e660>\ns = '<html>\\r\\n<head><title>504 Gateway Time-out</title></head>\\r\\n<body>\\r\\n<center><h1>504 Gateway Time-out</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/json/decoder.py:356: JSONDecodeError",
    "steps" : [ {
      "name" : "post_db_list",
      "time" : {
        "start" : 1748743518217,
        "stop" : 1748743578684,
        "duration" : 60467
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /db_list",
        "time" : {
          "start" : 1748743578684,
          "stop" : 1748743578684,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1748743578684,
          "stop" : 1748743578684,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': {None}}",
          "time" : {
            "start" : 1748743578684,
            "stop" : 1748743578684,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: None",
          "time" : {
            "start" : 1748743578684,
            "stop" : 1748743578684,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1748743578684,
          "stop" : 1748743578684,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 504",
          "time" : {
            "start" : 1748743578684,
            "stop" : 1748743578684,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: <html>\r\n<head><title>504 Gateway Time-out</title></head>\r\n<body>\r\n<center><h1>504 Gateway Time-out</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
          "time" : {
            "start" : 1748743578684,
            "stop" : 1748743578684,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 7,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 8,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.xfail(reason='There are databases that need to be deleted manually.')"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "pkrvmf6wy0o8zjz"
  }, {
    "name" : "thread",
    "value" : "2773-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 204,
        "passed" : 1,
        "unknown" : 0,
        "total" : 205
      },
      "items" : [ {
        "uid" : "658c02069ec0c74b",
        "reportUrl" : "https://lambotik.github.io/Oblache/419//#testresult/658c02069ec0c74b",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
        "time" : {
          "start" : 1748656229117,
          "stop" : 1748656289510,
          "duration" : 60393
        }
      }, {
        "uid" : "89fb8514f4481e1b",
        "reportUrl" : "https://lambotik.github.io/Oblache/418//#testresult/89fb8514f4481e1b",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
        "time" : {
          "start" : 1748569819716,
          "stop" : 1748569880058,
          "duration" : 60342
        }
      }, {
        "uid" : "521174c098e5e64b",
        "reportUrl" : "https://lambotik.github.io/Oblache/417//#testresult/521174c098e5e64b",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1748481137782,
          "stop" : 1748481138504,
          "duration" : 722
        }
      }, {
        "uid" : "2689b9615cad4f8f",
        "reportUrl" : "https://lambotik.github.io/Oblache/416//#testresult/2689b9615cad4f8f",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1748394746289,
          "stop" : 1748394746895,
          "duration" : 606
        }
      }, {
        "uid" : "2ae169255b616626",
        "reportUrl" : "https://lambotik.github.io/Oblache/415//#testresult/2ae169255b616626",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1748308256592,
          "stop" : 1748308257183,
          "duration" : 591
        }
      }, {
        "uid" : "b005bb9dee90135e",
        "reportUrl" : "https://lambotik.github.io/Oblache/414//#testresult/b005bb9dee90135e",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1748222009041,
          "stop" : 1748222009623,
          "duration" : 582
        }
      }, {
        "uid" : "2a8f509c4049d41a",
        "reportUrl" : "https://lambotik.github.io/Oblache/413//#testresult/2a8f509c4049d41a",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1748135887337,
          "stop" : 1748135888058,
          "duration" : 721
        }
      }, {
        "uid" : "af76c0a3645bddf7",
        "reportUrl" : "https://lambotik.github.io/Oblache/412//#testresult/af76c0a3645bddf7",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1748048942051,
          "stop" : 1748048943065,
          "duration" : 1014
        }
      }, {
        "uid" : "f561d624bdd5261d",
        "reportUrl" : "https://lambotik.github.io/Oblache/411//#testresult/f561d624bdd5261d",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1747962685446,
          "stop" : 1747962686186,
          "duration" : 740
        }
      }, {
        "uid" : "6c7580bd4cf43f66",
        "reportUrl" : "https://lambotik.github.io/Oblache/410//#testresult/6c7580bd4cf43f66",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1747876293580,
          "stop" : 1747876294267,
          "duration" : 687
        }
      }, {
        "uid" : "2d4aaa352adf7c94",
        "reportUrl" : "https://lambotik.github.io/Oblache/409//#testresult/2d4aaa352adf7c94",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1747789930874,
          "stop" : 1747789931570,
          "duration" : 696
        }
      }, {
        "uid" : "5e502e05a9aebc95",
        "reportUrl" : "https://lambotik.github.io/Oblache/408//#testresult/5e502e05a9aebc95",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1747703562083,
          "stop" : 1747703562675,
          "duration" : 592
        }
      }, {
        "uid" : "bb638ef7e3292d21",
        "reportUrl" : "https://lambotik.github.io/Oblache/407//#testresult/bb638ef7e3292d21",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1747617275998,
          "stop" : 1747617276607,
          "duration" : 609
        }
      }, {
        "uid" : "38fef6895cc7c5ea",
        "reportUrl" : "https://lambotik.github.io/Oblache/406//#testresult/38fef6895cc7c5ea",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1747530971515,
          "stop" : 1747530972220,
          "duration" : 705
        }
      }, {
        "uid" : "646188d5cf81bdb2",
        "reportUrl" : "https://lambotik.github.io/Oblache/405//#testresult/646188d5cf81bdb2",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1747444215410,
          "stop" : 1747444216122,
          "duration" : 712
        }
      }, {
        "uid" : "e10487b94cd5c668",
        "reportUrl" : "https://lambotik.github.io/Oblache/404//#testresult/e10487b94cd5c668",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1747357916641,
          "stop" : 1747357917263,
          "duration" : 622
        }
      }, {
        "uid" : "bebfbae91480d9f",
        "reportUrl" : "https://lambotik.github.io/Oblache/403//#testresult/bebfbae91480d9f",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1747271311352,
          "stop" : 1747271311945,
          "duration" : 593
        }
      }, {
        "uid" : "c77bb5314cdfda96",
        "reportUrl" : "https://lambotik.github.io/Oblache/402//#testresult/c77bb5314cdfda96",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1747185053465,
          "stop" : 1747185054447,
          "duration" : 982
        }
      }, {
        "uid" : "f8e74f7ada5729ef",
        "reportUrl" : "https://lambotik.github.io/Oblache/401//#testresult/f8e74f7ada5729ef",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1747098723177,
          "stop" : 1747098723872,
          "duration" : 695
        }
      }, {
        "uid" : "7783db149f0ab079",
        "reportUrl" : "https://lambotik.github.io/Oblache/400//#testresult/7783db149f0ab079",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1747012426313,
          "stop" : 1747012427124,
          "duration" : 811
        }
      } ]
    },
    "tags" : [ "@pytest.mark.xfail(reason='There are databases that need to be deleted manually.')" ]
  },
  "source" : "1b2512341aa746ba.json",
  "parameterValues" : [ ]
}