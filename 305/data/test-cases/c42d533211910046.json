{
  "uid" : "c42d533211910046",
  "name" : "POST create_docker_container_without_token",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_create_docker_container_without_token",
  "historyId" : "f833256fb8ca072b26357ead25c8b408",
  "time" : {
    "start" : 1738806764096,
    "stop" : 1738806824484,
    "duration" : 60388
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 504",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f65469f3b30>\n\n    @allure.title('POST create_docker_container_without_token')\n    def test_post_create_docker_container_without_token(self):\n        result = API.post_create_docker_container(token='incorrect_token')\n>       Checking.check_status_code(result, 401)\n\ntests_api/test_bd.py:404: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [504]>, status_code = 401\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 504\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 504",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f65469f3b30>\n\n    @allure.title('POST create_docker_container_without_token')\n    def test_post_create_docker_container_without_token(self):\n        result = API.post_create_docker_container(token='incorrect_token')\n>       Checking.check_status_code(result, 401)\n\ntests_api/test_bd.py:404: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [504]>, status_code = 401\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 504\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "post_create_docker_container",
      "time" : {
        "start" : 1738806764096,
        "stop" : 1738806824483,
        "duration" : 60387
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /container_create",
        "time" : {
          "start" : 1738806824483,
          "stop" : 1738806824483,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1738806824483,
          "stop" : 1738806824483,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Url: https://dbend.areso.pro/container_create",
          "time" : {
            "start" : 1738806824483,
            "stop" : 1738806824483,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': 'incorrect_token'}",
          "time" : {
            "start" : 1738806824483,
            "stop" : 1738806824483,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: {\"docker_image\": \"nginx\", \"int_ports\": \"80\", \"env\": 3, \"region\": 3}",
          "time" : {
            "start" : 1738806824483,
            "stop" : 1738806824483,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 3,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1738806824483,
          "stop" : 1738806824483,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 504",
          "time" : {
            "start" : 1738806824483,
            "stop" : 1738806824483,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: <html>\r\n<head><title>504 Gateway Time-out</title></head>\r\n<body>\r\n<center><h1>504 Gateway Time-out</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
          "time" : {
            "start" : 1738806824483,
            "stop" : 1738806824483,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 8,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 401 == Response status code: 504",
      "time" : {
        "start" : 1738806824483,
        "stop" : 1738806824484,
        "duration" : 1
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 504\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 10,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "fv-az1939-91"
  }, {
    "name" : "thread",
    "value" : "2438-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 52,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 36,
        "unknown" : 0,
        "total" : 88
      },
      "items" : [ {
        "uid" : "dfde51c2bbc794d7",
        "reportUrl" : "https://lambotik.github.io/Oblache/304//#testresult/dfde51c2bbc794d7",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 504",
        "time" : {
          "start" : 1738720352473,
          "stop" : 1738720412808,
          "duration" : 60335
        }
      }, {
        "uid" : "4280ecf91df91cb1",
        "reportUrl" : "https://lambotik.github.io/Oblache/303//#testresult/4280ecf91df91cb1",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 504",
        "time" : {
          "start" : 1738633917766,
          "stop" : 1738633978380,
          "duration" : 60614
        }
      }, {
        "uid" : "c7ed2d4e7671a5cd",
        "reportUrl" : "https://lambotik.github.io/Oblache/302//#testresult/c7ed2d4e7671a5cd",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 504",
        "time" : {
          "start" : 1738547573075,
          "stop" : 1738547633397,
          "duration" : 60322
        }
      }, {
        "uid" : "5c9e96b15f404540",
        "reportUrl" : "https://lambotik.github.io/Oblache/301//#testresult/5c9e96b15f404540",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 504",
        "time" : {
          "start" : 1738461297230,
          "stop" : 1738461357613,
          "duration" : 60383
        }
      }, {
        "uid" : "fc29d03f8b616918",
        "reportUrl" : "https://lambotik.github.io/Oblache/300//#testresult/fc29d03f8b616918",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1738371874895,
          "stop" : 1738371875420,
          "duration" : 525
        }
      }, {
        "uid" : "51d560bc01ba4143",
        "reportUrl" : "https://lambotik.github.io/Oblache/299//#testresult/51d560bc01ba4143",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1738350583502,
          "stop" : 1738350583819,
          "duration" : 317
        }
      }, {
        "uid" : "e50ad31b3b4ce082",
        "reportUrl" : "https://lambotik.github.io/Oblache/298//#testresult/e50ad31b3b4ce082",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1738198773742,
          "stop" : 1738198774048,
          "duration" : 306
        }
      }, {
        "uid" : "789f81547d5f2c34",
        "reportUrl" : "https://lambotik.github.io/Oblache/297//#testresult/789f81547d5f2c34",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1738112428341,
          "stop" : 1738112428655,
          "duration" : 314
        }
      }, {
        "uid" : "2ab30b3988925efa",
        "reportUrl" : "https://lambotik.github.io/Oblache/296//#testresult/2ab30b3988925efa",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1738026040605,
          "stop" : 1738026040922,
          "duration" : 317
        }
      }, {
        "uid" : "f1311a9a191791bc",
        "reportUrl" : "https://lambotik.github.io/Oblache/295//#testresult/f1311a9a191791bc",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1737939719717,
          "stop" : 1737939720081,
          "duration" : 364
        }
      }, {
        "uid" : "a2cf7cf4e2bb4a20",
        "reportUrl" : "https://lambotik.github.io/Oblache/294//#testresult/a2cf7cf4e2bb4a20",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1737853370124,
          "stop" : 1737853370636,
          "duration" : 512
        }
      }, {
        "uid" : "fa23f4469570b8db",
        "reportUrl" : "https://lambotik.github.io/Oblache/293//#testresult/fa23f4469570b8db",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1737766669035,
          "stop" : 1737766669611,
          "duration" : 576
        }
      }, {
        "uid" : "67433c9463368048",
        "reportUrl" : "https://lambotik.github.io/Oblache/292//#testresult/67433c9463368048",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1737680505283,
          "stop" : 1737680505789,
          "duration" : 506
        }
      }, {
        "uid" : "fd04b60b60a33985",
        "reportUrl" : "https://lambotik.github.io/Oblache/291//#testresult/fd04b60b60a33985",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1737594033441,
          "stop" : 1737594033750,
          "duration" : 309
        }
      }, {
        "uid" : "2c80a9d690a604fa",
        "reportUrl" : "https://lambotik.github.io/Oblache/290//#testresult/2c80a9d690a604fa",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1737507718326,
          "stop" : 1737507718640,
          "duration" : 314
        }
      }, {
        "uid" : "c5c5efac55570b6e",
        "reportUrl" : "https://lambotik.github.io/Oblache/289//#testresult/c5c5efac55570b6e",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1737421200248,
          "stop" : 1737421200557,
          "duration" : 309
        }
      }, {
        "uid" : "6d3e8932b91d50",
        "reportUrl" : "https://lambotik.github.io/Oblache/288//#testresult/6d3e8932b91d50",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1737334892579,
          "stop" : 1737334892936,
          "duration" : 357
        }
      }, {
        "uid" : "44884a9341ff0a29",
        "reportUrl" : "https://lambotik.github.io/Oblache/287//#testresult/44884a9341ff0a29",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1737248731124,
          "stop" : 1737248731642,
          "duration" : 518
        }
      }, {
        "uid" : "ac1bf2a8be61a313",
        "reportUrl" : "https://lambotik.github.io/Oblache/286//#testresult/ac1bf2a8be61a313",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1737161914077,
          "stop" : 1737161914445,
          "duration" : 368
        }
      }, {
        "uid" : "973171f076a46006",
        "reportUrl" : "https://lambotik.github.io/Oblache/285//#testresult/973171f076a46006",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1737075617547,
          "stop" : 1737075618063,
          "duration" : 516
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "c42d533211910046.json",
  "parameterValues" : [ ]
}