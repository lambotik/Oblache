{
  "uid" : "59d00408842e7946",
  "name" : "POST is_logged_with_wrong_token",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_is_logged_with_wrong_token",
  "historyId" : "e64b1bb9888c29958e823605e9d5d50f",
  "time" : {
    "start" : 1748655384000,
    "stop" : 1748655444337,
    "duration" : 60337
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 504",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f9c08c1b500>\n\n    @allure.title('POST is_logged_with_wrong_token')\n    def test_post_is_logged_with_wrong_token(self):\n        response = API.post_is_logged_with_wrong_token()\n>       Checking.check_status_code(response, 401)\n\ntests_api/test_bd.py:215: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [504]>, status_code = 401\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 504\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 504",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f9c08c1b500>\n\n    @allure.title('POST is_logged_with_wrong_token')\n    def test_post_is_logged_with_wrong_token(self):\n        response = API.post_is_logged_with_wrong_token()\n>       Checking.check_status_code(response, 401)\n\ntests_api/test_bd.py:215: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [504]>, status_code = 401\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 504\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "post_is_logged",
      "time" : {
        "start" : 1748655384000,
        "stop" : 1748655444337,
        "duration" : 60337
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /is_logged",
        "time" : {
          "start" : 1748655444337,
          "stop" : 1748655444337,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "shouldDisplayMessage" : false,
        "hasContent" : false,
        "stepsCount" : 0,
        "attachmentsCount" : 0
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1748655444337,
          "stop" : 1748655444337,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': 'WRONG TOKEN'}",
          "time" : {
            "start" : 1748655444337,
            "stop" : 1748655444337,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "shouldDisplayMessage" : false,
          "hasContent" : false,
          "stepsCount" : 0,
          "attachmentsCount" : 0
        }, {
          "name" : "Body: None",
          "time" : {
            "start" : 1748655444337,
            "stop" : 1748655444337,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "shouldDisplayMessage" : false,
          "hasContent" : false,
          "stepsCount" : 0,
          "attachmentsCount" : 0
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "shouldDisplayMessage" : false,
        "hasContent" : true,
        "stepsCount" : 2,
        "attachmentsCount" : 0
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1748655444337,
          "stop" : 1748655444337,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 504",
          "time" : {
            "start" : 1748655444337,
            "stop" : 1748655444337,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "shouldDisplayMessage" : false,
          "hasContent" : false,
          "stepsCount" : 0,
          "attachmentsCount" : 0
        }, {
          "name" : "JSON: <html>\r\n<head><title>504 Gateway Time-out</title></head>\r\n<body>\r\n<center><h1>504 Gateway Time-out</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
          "time" : {
            "start" : 1748655444337,
            "stop" : 1748655444337,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "shouldDisplayMessage" : false,
          "hasContent" : false,
          "stepsCount" : 0,
          "attachmentsCount" : 0
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "shouldDisplayMessage" : false,
        "hasContent" : true,
        "stepsCount" : 2,
        "attachmentsCount" : 0
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "hasContent" : true,
      "stepsCount" : 7,
      "attachmentsCount" : 0
    }, {
      "name" : "Assert status code: 401 == Response status code: 504",
      "time" : {
        "start" : 1748655444337,
        "stop" : 1748655444337,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 504\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : true,
      "hasContent" : true,
      "stepsCount" : 0,
      "attachmentsCount" : 0
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 9,
    "attachmentsCount" : 0
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "pkrvmf6wy0o8zjz"
  }, {
    "name" : "thread",
    "value" : "2697-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 14,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 190,
        "unknown" : 0,
        "total" : 204
      },
      "items" : [ {
        "uid" : "f995605de96863ce",
        "reportUrl" : "https://lambotik.github.io/Oblache/418//#testresult/f995605de96863ce",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 504",
        "time" : {
          "start" : 1748568974974,
          "stop" : 1748569035313,
          "duration" : 60339
        }
      }, {
        "uid" : "41d8355119d672e6",
        "reportUrl" : "https://lambotik.github.io/Oblache/417//#testresult/41d8355119d672e6",
        "status" : "passed",
        "time" : {
          "start" : 1748481129723,
          "stop" : 1748481130089,
          "duration" : 366
        }
      }, {
        "uid" : "dab45a66882789f4",
        "reportUrl" : "https://lambotik.github.io/Oblache/416//#testresult/dab45a66882789f4",
        "status" : "passed",
        "time" : {
          "start" : 1748394739524,
          "stop" : 1748394739852,
          "duration" : 328
        }
      }, {
        "uid" : "ecf8f76f296b536c",
        "reportUrl" : "https://lambotik.github.io/Oblache/415//#testresult/ecf8f76f296b536c",
        "status" : "passed",
        "time" : {
          "start" : 1748308250001,
          "stop" : 1748308250308,
          "duration" : 307
        }
      }, {
        "uid" : "b5ef4481586206f2",
        "reportUrl" : "https://lambotik.github.io/Oblache/414//#testresult/b5ef4481586206f2",
        "status" : "passed",
        "time" : {
          "start" : 1748222002258,
          "stop" : 1748222002570,
          "duration" : 312
        }
      }, {
        "uid" : "5ddc37ab38382377",
        "reportUrl" : "https://lambotik.github.io/Oblache/413//#testresult/5ddc37ab38382377",
        "status" : "passed",
        "time" : {
          "start" : 1748135879586,
          "stop" : 1748135879945,
          "duration" : 359
        }
      }, {
        "uid" : "ef5177376b30788e",
        "reportUrl" : "https://lambotik.github.io/Oblache/412//#testresult/ef5177376b30788e",
        "status" : "passed",
        "time" : {
          "start" : 1748048931316,
          "stop" : 1748048931820,
          "duration" : 504
        }
      }, {
        "uid" : "3fc1e5f3f2bcdea1",
        "reportUrl" : "https://lambotik.github.io/Oblache/411//#testresult/3fc1e5f3f2bcdea1",
        "status" : "passed",
        "time" : {
          "start" : 1747962677644,
          "stop" : 1747962678011,
          "duration" : 367
        }
      }, {
        "uid" : "e71e1d0ca2a93583",
        "reportUrl" : "https://lambotik.github.io/Oblache/410//#testresult/e71e1d0ca2a93583",
        "status" : "passed",
        "time" : {
          "start" : 1747876285934,
          "stop" : 1747876286304,
          "duration" : 370
        }
      }, {
        "uid" : "7a195ba951e80362",
        "reportUrl" : "https://lambotik.github.io/Oblache/409//#testresult/7a195ba951e80362",
        "status" : "passed",
        "time" : {
          "start" : 1747789923154,
          "stop" : 1747789923520,
          "duration" : 366
        }
      }, {
        "uid" : "aa8b1cad38e456ea",
        "reportUrl" : "https://lambotik.github.io/Oblache/408//#testresult/aa8b1cad38e456ea",
        "status" : "passed",
        "time" : {
          "start" : 1747703555235,
          "stop" : 1747703555542,
          "duration" : 307
        }
      }, {
        "uid" : "2e63c9a27779872a",
        "reportUrl" : "https://lambotik.github.io/Oblache/407//#testresult/2e63c9a27779872a",
        "status" : "passed",
        "time" : {
          "start" : 1747617269203,
          "stop" : 1747617269519,
          "duration" : 316
        }
      }, {
        "uid" : "801cfef2b0614e7c",
        "reportUrl" : "https://lambotik.github.io/Oblache/406//#testresult/801cfef2b0614e7c",
        "status" : "passed",
        "time" : {
          "start" : 1747530963779,
          "stop" : 1747530964136,
          "duration" : 357
        }
      }, {
        "uid" : "bb3d66ba5c2f5b55",
        "reportUrl" : "https://lambotik.github.io/Oblache/405//#testresult/bb3d66ba5c2f5b55",
        "status" : "passed",
        "time" : {
          "start" : 1747444207517,
          "stop" : 1747444207893,
          "duration" : 376
        }
      }, {
        "uid" : "e5e0e2e512b8d114",
        "reportUrl" : "https://lambotik.github.io/Oblache/404//#testresult/e5e0e2e512b8d114",
        "status" : "passed",
        "time" : {
          "start" : 1747357909834,
          "stop" : 1747357910147,
          "duration" : 313
        }
      }, {
        "uid" : "4c7cac18481376e7",
        "reportUrl" : "https://lambotik.github.io/Oblache/403//#testresult/4c7cac18481376e7",
        "status" : "passed",
        "time" : {
          "start" : 1747271304735,
          "stop" : 1747271305039,
          "duration" : 304
        }
      }, {
        "uid" : "2de3418a55d47644",
        "reportUrl" : "https://lambotik.github.io/Oblache/402//#testresult/2de3418a55d47644",
        "status" : "passed",
        "time" : {
          "start" : 1747185042708,
          "stop" : 1747185043209,
          "duration" : 501
        }
      }, {
        "uid" : "8cca80a91ebb75a1",
        "reportUrl" : "https://lambotik.github.io/Oblache/401//#testresult/8cca80a91ebb75a1",
        "status" : "passed",
        "time" : {
          "start" : 1747098715299,
          "stop" : 1747098715655,
          "duration" : 356
        }
      }, {
        "uid" : "c108abe15f9004df",
        "reportUrl" : "https://lambotik.github.io/Oblache/400//#testresult/c108abe15f9004df",
        "status" : "passed",
        "time" : {
          "start" : 1747012417136,
          "stop" : 1747012417707,
          "duration" : 571
        }
      }, {
        "uid" : "6b09ae2694f7efec",
        "reportUrl" : "https://lambotik.github.io/Oblache/399//#testresult/6b09ae2694f7efec",
        "status" : "passed",
        "time" : {
          "start" : 1746926114407,
          "stop" : 1746926114905,
          "duration" : 498
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "59d00408842e7946.json",
  "parameterValues" : [ ]
}