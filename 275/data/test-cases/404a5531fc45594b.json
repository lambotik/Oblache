{
  "uid" : "404a5531fc45594b",
  "name" : "POST checking ports_len positive",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_checking_ports_len_positive",
  "historyId" : "c6f631852f230d7f46e21d1143ab0d56",
  "time" : {
    "start" : 1736211744445,
    "stop" : 1736211744763,
    "duration" : 318
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 400",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f312aaa6270>\n\n    @allure.title('POST checking ports_len positive')\n    def test_post_checking_ports_len_positive(self):\n        result = API.post_create_docker_container_checking_ports(\n            token=TestPOST.token,\n            port_len=\"80-89\")\n>       Checking.check_status_code(result, 201)\n\ntests_api/test_bd.py:374: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 201\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 400\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 400",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f312aaa6270>\n\n    @allure.title('POST checking ports_len positive')\n    def test_post_checking_ports_len_positive(self):\n        result = API.post_create_docker_container_checking_ports(\n            token=TestPOST.token,\n            port_len=\"80-89\")\n>       Checking.check_status_code(result, 201)\n\ntests_api/test_bd.py:374: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 201\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 400\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "post_create_docker_container",
      "time" : {
        "start" : 1736211744445,
        "stop" : 1736211744763,
        "duration" : 318
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /container_create",
        "time" : {
          "start" : 1736211744763,
          "stop" : 1736211744763,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1736211744763,
          "stop" : 1736211744763,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Url: https://dbend.areso.pro/container_create",
          "time" : {
            "start" : 1736211744763,
            "stop" : 1736211744763,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': '3920708b-b3ce-475c-8431-5579ff7f08f6'}",
          "time" : {
            "start" : 1736211744763,
            "stop" : 1736211744763,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: {\"docker_image\": \"nginx\", \"int_ports\": f\"80-89\", \"env\": 3, \"region\": 3}",
          "time" : {
            "start" : 1736211744763,
            "stop" : 1736211744763,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 3,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1736211744763,
          "stop" : 1736211744763,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 400",
          "time" : {
            "start" : 1736211744763,
            "stop" : 1736211744763,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: {\n    \"msg_code\": -1,\n    \"msg\": \"endpoint is disabled\"\n}\n",
          "time" : {
            "start" : 1736211744763,
            "stop" : 1736211744763,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 8,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 201 == Response status code: 400",
      "time" : {
        "start" : 1736211744763,
        "stop" : 1736211744763,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 400\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 10,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "fv-az1971-667"
  }, {
    "name" : "thread",
    "value" : "2444-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 22,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 36,
        "unknown" : 0,
        "total" : 58
      },
      "items" : [ {
        "uid" : "c4d4145eb55bcb85",
        "reportUrl" : "https://lambotik.github.io/Oblache/274//#testresult/c4d4145eb55bcb85",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1736125498913,
          "stop" : 1736125499245,
          "duration" : 332
        }
      }, {
        "uid" : "9e376ce1c72b4318",
        "reportUrl" : "https://lambotik.github.io/Oblache/273//#testresult/9e376ce1c72b4318",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1736039242368,
          "stop" : 1736039242884,
          "duration" : 516
        }
      }, {
        "uid" : "4d179c8a8cb518e",
        "reportUrl" : "https://lambotik.github.io/Oblache/272//#testresult/4d179c8a8cb518e",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1735952453733,
          "stop" : 1735952454094,
          "duration" : 361
        }
      }, {
        "uid" : "29def84f3e3b3230",
        "reportUrl" : "https://lambotik.github.io/Oblache/271//#testresult/29def84f3e3b3230",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1735866141892,
          "stop" : 1735866142214,
          "duration" : 322
        }
      }, {
        "uid" : "d1b38f43e6e297f2",
        "reportUrl" : "https://lambotik.github.io/Oblache/270//#testresult/d1b38f43e6e297f2",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1735779695441,
          "stop" : 1735779695941,
          "duration" : 500
        }
      }, {
        "uid" : "e51a77e0ece097f7",
        "reportUrl" : "https://lambotik.github.io/Oblache/269//#testresult/e51a77e0ece097f7",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1735693643880,
          "stop" : 1735693644187,
          "duration" : 307
        }
      }, {
        "uid" : "e7211012903dd5d3",
        "reportUrl" : "https://lambotik.github.io/Oblache/268//#testresult/e7211012903dd5d3",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1735606913328,
          "stop" : 1735606913843,
          "duration" : 515
        }
      }, {
        "uid" : "acd6de4482d80ec3",
        "reportUrl" : "https://lambotik.github.io/Oblache/267//#testresult/acd6de4482d80ec3",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1735520641684,
          "stop" : 1735520642001,
          "duration" : 317
        }
      }, {
        "uid" : "aeaddf5f0fd64d8a",
        "reportUrl" : "https://lambotik.github.io/Oblache/266//#testresult/aeaddf5f0fd64d8a",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1735434463004,
          "stop" : 1735434463342,
          "duration" : 338
        }
      }, {
        "uid" : "aab8aa72b7a057b7",
        "reportUrl" : "https://lambotik.github.io/Oblache/265//#testresult/aab8aa72b7a057b7",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1735347646483,
          "stop" : 1735347646792,
          "duration" : 309
        }
      }, {
        "uid" : "2aa23f2dd7fd7912",
        "reportUrl" : "https://lambotik.github.io/Oblache/264//#testresult/2aa23f2dd7fd7912",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1735261325161,
          "stop" : 1735261325673,
          "duration" : 512
        }
      }, {
        "uid" : "43e81b771652800",
        "reportUrl" : "https://lambotik.github.io/Oblache/209//#testresult/43e81b771652800",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1730509259800,
          "stop" : 1730509260107,
          "duration" : 307
        }
      }, {
        "uid" : "32a09c4e26cd9e3a",
        "reportUrl" : "https://lambotik.github.io/Oblache/208//#testresult/32a09c4e26cd9e3a",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1730423218214,
          "stop" : 1730423218657,
          "duration" : 443
        }
      }, {
        "uid" : "fa69cc604ee852c",
        "reportUrl" : "https://lambotik.github.io/Oblache/207//#testresult/fa69cc604ee852c",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1730336571610,
          "stop" : 1730336571917,
          "duration" : 307
        }
      }, {
        "uid" : "1c0e38afb538fcc8",
        "reportUrl" : "https://lambotik.github.io/Oblache/206//#testresult/1c0e38afb538fcc8",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1730250153294,
          "stop" : 1730250153664,
          "duration" : 370
        }
      }, {
        "uid" : "739a94d07fd1f4da",
        "reportUrl" : "https://lambotik.github.io/Oblache/205//#testresult/739a94d07fd1f4da",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1730163797436,
          "stop" : 1730163797735,
          "duration" : 299
        }
      }, {
        "uid" : "467f00af9ed068c7",
        "reportUrl" : "https://lambotik.github.io/Oblache/204//#testresult/467f00af9ed068c7",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1730077482098,
          "stop" : 1730077482413,
          "duration" : 315
        }
      }, {
        "uid" : "67a38c12e948f633",
        "reportUrl" : "https://lambotik.github.io/Oblache/203//#testresult/67a38c12e948f633",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1729991204311,
          "stop" : 1729991204669,
          "duration" : 358
        }
      }, {
        "uid" : "1c86f31726eb2b9e",
        "reportUrl" : "https://lambotik.github.io/Oblache/202//#testresult/1c86f31726eb2b9e",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1729904403922,
          "stop" : 1729904404226,
          "duration" : 304
        }
      }, {
        "uid" : "a44eac7672aae371",
        "reportUrl" : "https://lambotik.github.io/Oblache/201//#testresult/a44eac7672aae371",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1729818175743,
          "stop" : 1729818176260,
          "duration" : 517
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "404a5531fc45594b.json",
  "parameterValues" : [ ]
}