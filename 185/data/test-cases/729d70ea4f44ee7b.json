{
  "uid" : "729d70ea4f44ee7b",
  "name" : "GET list db_versions.",
  "fullName" : "tests_api.test_bd.TestGET#test_get_list_db_versions",
  "historyId" : "8bbfe42adf25237260fbe695e4aa058a",
  "time" : {
    "start" : 1728435638591,
    "stop" : 1728435639062,
    "duration" : 471
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 500",
  "statusTrace" : "self = <tests_api.test_bd.TestGET object at 0x7fe6ff73c7a0>\n\n    @allure.title('GET list db_versions.')\n    def test_get_list_db_versions(self):\n        response = API.get_list_dbversions()\n>       Checking.check_status_code(response, 200)\n\ntests_api/test_bd.py:83: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [500]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 500\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 500",
    "statusTrace" : "self = <tests_api.test_bd.TestGET object at 0x7fe6ff73c7a0>\n\n    @allure.title('GET list db_versions.')\n    def test_get_list_db_versions(self):\n        response = API.get_list_dbversions()\n>       Checking.check_status_code(response, 200)\n\ntests_api/test_bd.py:83: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [500]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 500\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "Endpoint: /list_dbversions",
      "time" : {
        "start" : 1728435639062,
        "stop" : 1728435639062,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : false,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "Request:",
      "time" : {
        "start" : 1728435639062,
        "stop" : 1728435639062,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Url: https://dbend.areso.pro/list_dbversions",
        "time" : {
          "start" : 1728435639062,
          "stop" : 1728435639062,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "hasContent" : false,
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false
      }, {
        "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': 'None'}",
        "time" : {
          "start" : 1728435639062,
          "stop" : 1728435639062,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "hasContent" : false,
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false
      }, {
        "name" : "Body: None",
        "time" : {
          "start" : 1728435639062,
          "stop" : 1728435639062,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "hasContent" : false,
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : true,
      "stepsCount" : 3,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "Response:",
      "time" : {
        "start" : 1728435639062,
        "stop" : 1728435639062,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Status code: 500",
        "time" : {
          "start" : 1728435639062,
          "stop" : 1728435639062,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "hasContent" : false,
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false
      }, {
        "name" : "JSON: Some general exception",
        "time" : {
          "start" : 1728435639062,
          "stop" : 1728435639062,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "hasContent" : false,
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : true,
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "Assert status code: 200 == Response status code: 500",
      "time" : {
        "start" : 1728435639062,
        "stop" : 1728435639062,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 500\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : true,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 9,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "GET"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestGET"
  }, {
    "name" : "host",
    "value" : "fv-az1789-434"
  }, {
    "name" : "thread",
    "value" : "2390-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 21,
        "unknown" : 0,
        "total" : 22
      },
      "items" : [ {
        "uid" : "20ed7edbf7dc70d2",
        "reportUrl" : "https://lambotik.github.io/Oblache/184//#testresult/20ed7edbf7dc70d2",
        "status" : "passed",
        "time" : {
          "start" : 1728349250493,
          "stop" : 1728349250932,
          "duration" : 439
        }
      }, {
        "uid" : "b55a81ac58f95fa",
        "reportUrl" : "https://lambotik.github.io/Oblache/183//#testresult/b55a81ac58f95fa",
        "status" : "passed",
        "time" : {
          "start" : 1728262991800,
          "stop" : 1728262992125,
          "duration" : 325
        }
      }, {
        "uid" : "4cedc19083d094f0",
        "reportUrl" : "https://lambotik.github.io/Oblache/182//#testresult/4cedc19083d094f0",
        "status" : "passed",
        "time" : {
          "start" : 1728176742322,
          "stop" : 1728176742684,
          "duration" : 362
        }
      }, {
        "uid" : "ec72070557846d4d",
        "reportUrl" : "https://lambotik.github.io/Oblache/181//#testresult/ec72070557846d4d",
        "status" : "passed",
        "time" : {
          "start" : 1728090017877,
          "stop" : 1728090018187,
          "duration" : 310
        }
      }, {
        "uid" : "510a42fdda568e97",
        "reportUrl" : "https://lambotik.github.io/Oblache/180//#testresult/510a42fdda568e97",
        "status" : "passed",
        "time" : {
          "start" : 1728003661213,
          "stop" : 1728003661539,
          "duration" : 326
        }
      }, {
        "uid" : "fc90971be4bc2063",
        "reportUrl" : "https://lambotik.github.io/Oblache/179//#testresult/fc90971be4bc2063",
        "status" : "passed",
        "time" : {
          "start" : 1727917267400,
          "stop" : 1727917267902,
          "duration" : 502
        }
      }, {
        "uid" : "fe3ce0dce36409b3",
        "reportUrl" : "https://lambotik.github.io/Oblache/178//#testresult/fe3ce0dce36409b3",
        "status" : "passed",
        "time" : {
          "start" : 1727830863800,
          "stop" : 1727830864130,
          "duration" : 330
        }
      }, {
        "uid" : "40a9e7e20414dbc2",
        "reportUrl" : "https://lambotik.github.io/Oblache/177//#testresult/40a9e7e20414dbc2",
        "status" : "passed",
        "time" : {
          "start" : 1727744811679,
          "stop" : 1727744812125,
          "duration" : 446
        }
      }, {
        "uid" : "bf5825c62201855",
        "reportUrl" : "https://lambotik.github.io/Oblache/176//#testresult/bf5825c62201855",
        "status" : "passed",
        "time" : {
          "start" : 1727658204937,
          "stop" : 1727658205452,
          "duration" : 515
        }
      }, {
        "uid" : "e4bb2551c0ad146a",
        "reportUrl" : "https://lambotik.github.io/Oblache/18//#testresult/e4bb2551c0ad146a",
        "status" : "passed",
        "time" : {
          "start" : 1727640796986,
          "stop" : 1727640797376,
          "duration" : 390
        }
      }, {
        "uid" : "2cfc16f0dca83c9",
        "reportUrl" : "https://lambotik.github.io/Oblache/17//#testresult/2cfc16f0dca83c9",
        "status" : "passed",
        "time" : {
          "start" : 1727640527033,
          "stop" : 1727640527662,
          "duration" : 629
        }
      }, {
        "uid" : "e93d018effa256a7",
        "reportUrl" : "https://lambotik.github.io/Oblache/175//#testresult/e93d018effa256a7",
        "status" : "passed",
        "time" : {
          "start" : 1727571975536,
          "stop" : 1727571976060,
          "duration" : 524
        }
      }, {
        "uid" : "3f7a5345ef9217d5",
        "reportUrl" : "https://lambotik.github.io/Oblache/174//#testresult/3f7a5345ef9217d5",
        "status" : "passed",
        "time" : {
          "start" : 1727485224306,
          "stop" : 1727485224667,
          "duration" : 361
        }
      }, {
        "uid" : "65325335cec16ebd",
        "reportUrl" : "https://lambotik.github.io/Oblache/173//#testresult/65325335cec16ebd",
        "status" : "passed",
        "time" : {
          "start" : 1727398855152,
          "stop" : 1727398855656,
          "duration" : 504
        }
      }, {
        "uid" : "ebc936f70e75f07e",
        "reportUrl" : "https://lambotik.github.io/Oblache/172//#testresult/ebc936f70e75f07e",
        "status" : "passed",
        "time" : {
          "start" : 1727312431580,
          "stop" : 1727312432096,
          "duration" : 516
        }
      }, {
        "uid" : "649050dc6d63c5e",
        "reportUrl" : "https://lambotik.github.io/Oblache/171//#testresult/649050dc6d63c5e",
        "status" : "passed",
        "time" : {
          "start" : 1727226117063,
          "stop" : 1727226117367,
          "duration" : 304
        }
      }, {
        "uid" : "3ef5c4205edbb339",
        "reportUrl" : "https://lambotik.github.io/Oblache/170//#testresult/3ef5c4205edbb339",
        "status" : "passed",
        "time" : {
          "start" : 1727139677961,
          "stop" : 1727139678257,
          "duration" : 296
        }
      }, {
        "uid" : "c533f8d78018d74a",
        "reportUrl" : "https://lambotik.github.io/Oblache/169//#testresult/c533f8d78018d74a",
        "status" : "passed",
        "time" : {
          "start" : 1727053272512,
          "stop" : 1727053272856,
          "duration" : 344
        }
      }, {
        "uid" : "277494b7156e5ed3",
        "reportUrl" : "https://lambotik.github.io/Oblache/168//#testresult/277494b7156e5ed3",
        "status" : "passed",
        "time" : {
          "start" : 1726967104557,
          "stop" : 1726967105049,
          "duration" : 492
        }
      }, {
        "uid" : "cd8970c87333af5",
        "reportUrl" : "https://lambotik.github.io/Oblache/167//#testresult/cd8970c87333af5",
        "status" : "passed",
        "time" : {
          "start" : 1726880318004,
          "stop" : 1726880318379,
          "duration" : 375
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "729d70ea4f44ee7b.json",
  "parameterValues" : [ ]
}