{
  "uid" : "d62d33f25f617605",
  "name" : "POST create_docker_container_without_token",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_create_docker_container_without_token",
  "historyId" : "f833256fb8ca072b26357ead25c8b408",
  "time" : {
    "start" : 1743642419527,
    "stop" : 1743642419895,
    "duration" : 368
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 400",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f3489c1c770>\n\n    @allure.title('POST create_docker_container_without_token')\n    def test_post_create_docker_container_without_token(self):\n        result = API.post_create_docker_container(token='incorrect_token')\n>       Checking.check_status_code(result, 401)\n\ntests_api/test_bd.py:404: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 401\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 400\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 400",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f3489c1c770>\n\n    @allure.title('POST create_docker_container_without_token')\n    def test_post_create_docker_container_without_token(self):\n        result = API.post_create_docker_container(token='incorrect_token')\n>       Checking.check_status_code(result, 401)\n\ntests_api/test_bd.py:404: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 401\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 400\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "post_create_docker_container",
      "time" : {
        "start" : 1743642419528,
        "stop" : 1743642419895,
        "duration" : 367
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /container_create",
        "time" : {
          "start" : 1743642419895,
          "stop" : 1743642419895,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1743642419895,
          "stop" : 1743642419895,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': 'incorrect_token'}",
          "time" : {
            "start" : 1743642419895,
            "stop" : 1743642419895,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: {\"docker_image\": \"nginx\", \"int_ports\": \"80\", \"env\": 3, \"region\": 3}",
          "time" : {
            "start" : 1743642419895,
            "stop" : 1743642419895,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1743642419895,
          "stop" : 1743642419895,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 400",
          "time" : {
            "start" : 1743642419895,
            "stop" : 1743642419895,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: {\n    \"msg_code\": -1,\n    \"msg\": \"endpoint is disabled\"\n}\n",
          "time" : {
            "start" : 1743642419895,
            "stop" : 1743642419895,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 7,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 401 == Response status code: 400",
      "time" : {
        "start" : 1743642419895,
        "stop" : 1743642419895,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 400\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 9,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "fv-az1691-818"
  }, {
    "name" : "thread",
    "value" : "2458-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 113,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 36,
        "unknown" : 0,
        "total" : 149
      },
      "items" : [ {
        "uid" : "2880e947bd7c9db0",
        "reportUrl" : "https://lambotik.github.io/Oblache/360//#testresult/2880e947bd7c9db0",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1743556076114,
          "stop" : 1743556076480,
          "duration" : 366
        }
      }, {
        "uid" : "6690c42359beee83",
        "reportUrl" : "https://lambotik.github.io/Oblache/359//#testresult/6690c42359beee83",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1743470108130,
          "stop" : 1743470108431,
          "duration" : 301
        }
      }, {
        "uid" : "5adbb06e97c57071",
        "reportUrl" : "https://lambotik.github.io/Oblache/358//#testresult/5adbb06e97c57071",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1743383447384,
          "stop" : 1743383447892,
          "duration" : 508
        }
      }, {
        "uid" : "65fdf71c6521876d",
        "reportUrl" : "https://lambotik.github.io/Oblache/357//#testresult/65fdf71c6521876d",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1743297110211,
          "stop" : 1743297110526,
          "duration" : 315
        }
      }, {
        "uid" : "f8ca0b6831e5ca4c",
        "reportUrl" : "https://lambotik.github.io/Oblache/356//#testresult/f8ca0b6831e5ca4c",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1743210334571,
          "stop" : 1743210334886,
          "duration" : 315
        }
      }, {
        "uid" : "8e2344f9f945f979",
        "reportUrl" : "https://lambotik.github.io/Oblache/355//#testresult/8e2344f9f945f979",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1743123970154,
          "stop" : 1743123970516,
          "duration" : 362
        }
      }, {
        "uid" : "49920728e6385c7d",
        "reportUrl" : "https://lambotik.github.io/Oblache/354//#testresult/49920728e6385c7d",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1743037577656,
          "stop" : 1743037578036,
          "duration" : 380
        }
      }, {
        "uid" : "aae5a8b1961cc702",
        "reportUrl" : "https://lambotik.github.io/Oblache/353//#testresult/aae5a8b1961cc702",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1742951186052,
          "stop" : 1742951186357,
          "duration" : 305
        }
      }, {
        "uid" : "73d62dc2bda56168",
        "reportUrl" : "https://lambotik.github.io/Oblache/352//#testresult/73d62dc2bda56168",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1742864800955,
          "stop" : 1742864801261,
          "duration" : 306
        }
      }, {
        "uid" : "1b4f44b3fb3536c1",
        "reportUrl" : "https://lambotik.github.io/Oblache/351//#testresult/1b4f44b3fb3536c1",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1742778505427,
          "stop" : 1742778505933,
          "duration" : 506
        }
      }, {
        "uid" : "e07f7b44912cf7ac",
        "reportUrl" : "https://lambotik.github.io/Oblache/350//#testresult/e07f7b44912cf7ac",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1742692250172,
          "stop" : 1742692250534,
          "duration" : 362
        }
      }, {
        "uid" : "d5f5561d08fa496e",
        "reportUrl" : "https://lambotik.github.io/Oblache/349//#testresult/d5f5561d08fa496e",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1742605486830,
          "stop" : 1742605487151,
          "duration" : 321
        }
      }, {
        "uid" : "e65cb5fefeca04e8",
        "reportUrl" : "https://lambotik.github.io/Oblache/348//#testresult/e65cb5fefeca04e8",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1742519187805,
          "stop" : 1742519188303,
          "duration" : 498
        }
      }, {
        "uid" : "2866ccce657307b1",
        "reportUrl" : "https://lambotik.github.io/Oblache/347//#testresult/2866ccce657307b1",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1742432690206,
          "stop" : 1742432690563,
          "duration" : 357
        }
      }, {
        "uid" : "f2ad157411f1160a",
        "reportUrl" : "https://lambotik.github.io/Oblache/346//#testresult/f2ad157411f1160a",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1742346377713,
          "stop" : 1742346378018,
          "duration" : 305
        }
      }, {
        "uid" : "da794f0a4cf8349a",
        "reportUrl" : "https://lambotik.github.io/Oblache/345//#testresult/da794f0a4cf8349a",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1742259935290,
          "stop" : 1742259935794,
          "duration" : 504
        }
      }, {
        "uid" : "6ceaea62a204a75e",
        "reportUrl" : "https://lambotik.github.io/Oblache/344//#testresult/6ceaea62a204a75e",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1742173653230,
          "stop" : 1742173653536,
          "duration" : 306
        }
      }, {
        "uid" : "621f69473dcab84e",
        "reportUrl" : "https://lambotik.github.io/Oblache/343//#testresult/621f69473dcab84e",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1742087464409,
          "stop" : 1742087464922,
          "duration" : 513
        }
      }, {
        "uid" : "1bd43bb1a96998a",
        "reportUrl" : "https://lambotik.github.io/Oblache/342//#testresult/1bd43bb1a96998a",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1742000637112,
          "stop" : 1742000637430,
          "duration" : 318
        }
      }, {
        "uid" : "bbc41bb47e4d9971",
        "reportUrl" : "https://lambotik.github.io/Oblache/341//#testresult/bbc41bb47e4d9971",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1741914277788,
          "stop" : 1741914278101,
          "duration" : 313
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "d62d33f25f617605.json",
  "parameterValues" : [ ]
}