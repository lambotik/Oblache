{
  "uid" : "18cf8e4961c1977f",
  "name" : "POST registration Bulgaria language.",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_registration_for_bulgaria_language",
  "historyId" : "9770496b60bb3f26dd42c11f178217a0",
  "time" : {
    "start" : 1738891256263,
    "stop" : 1738891316797,
    "duration" : 60534
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 504",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7ff0aa610bc0>\n\n    @allure.title('POST registration Bulgaria language.')\n    def test_post_registration_for_bulgaria_language(self):\n        response = API.post_registration_variety_email(\n            mail=random.choice(['gmail', 'mail', 'yandex']),\n            old_password=TestPOST.old_password,\n            prefix='bg',\n            language='bg-bg',\n            tos_agree=True)\n>       Checking.check_status_code(response, 201)\n\ntests_api/test_bd.py:151: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [504]>, status_code = 201\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 504\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 504",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7ff0aa610bc0>\n\n    @allure.title('POST registration Bulgaria language.')\n    def test_post_registration_for_bulgaria_language(self):\n        response = API.post_registration_variety_email(\n            mail=random.choice(['gmail', 'mail', 'yandex']),\n            old_password=TestPOST.old_password,\n            prefix='bg',\n            language='bg-bg',\n            tos_agree=True)\n>       Checking.check_status_code(response, 201)\n\ntests_api/test_bd.py:151: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [504]>, status_code = 201\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 504\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "post_registration_variety_email",
      "time" : {
        "start" : 1738891256263,
        "stop" : 1738891316797,
        "duration" : 60534
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /register",
        "time" : {
          "start" : 1738891316797,
          "stop" : 1738891316797,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1738891316797,
          "stop" : 1738891316797,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Url: https://dbend.areso.pro/register",
          "time" : {
            "start" : 1738891316797,
            "stop" : 1738891316797,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': 'None'}",
          "time" : {
            "start" : 1738891316797,
            "stop" : 1738891316797,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: \n                                {\n                                \"email\": f'aqa2025_02_07_01_01_45@gmail.bg',\n                                \"password\": password,\n                                \"tos_agree\": True,\n                                \"language\": bg-bg\n                               }",
          "time" : {
            "start" : 1738891316797,
            "stop" : 1738891316797,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 3,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1738891316797,
          "stop" : 1738891316797,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 504",
          "time" : {
            "start" : 1738891316797,
            "stop" : 1738891316797,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: <html>\r\n<head><title>504 Gateway Time-out</title></head>\r\n<body>\r\n<center><h1>504 Gateway Time-out</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
          "time" : {
            "start" : 1738891316797,
            "stop" : 1738891316797,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 8,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 201 == Response status code: 504",
      "time" : {
        "start" : 1738891316797,
        "stop" : 1738891316797,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 504\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 10,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "fv-az1278-617"
  }, {
    "name" : "thread",
    "value" : "2446-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 6,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 83,
        "unknown" : 0,
        "total" : 89
      },
      "items" : [ {
        "uid" : "6c21f42da85f6ddf",
        "reportUrl" : "https://lambotik.github.io/Oblache/305//#testresult/6c21f42da85f6ddf",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 504",
        "time" : {
          "start" : 1738804831395,
          "stop" : 1738804891775,
          "duration" : 60380
        }
      }, {
        "uid" : "921ea5cf7cfb29c3",
        "reportUrl" : "https://lambotik.github.io/Oblache/304//#testresult/921ea5cf7cfb29c3",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 504",
        "time" : {
          "start" : 1738718421819,
          "stop" : 1738718482118,
          "duration" : 60299
        }
      }, {
        "uid" : "b9ac5bde91dfb5d6",
        "reportUrl" : "https://lambotik.github.io/Oblache/303//#testresult/b9ac5bde91dfb5d6",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 504",
        "time" : {
          "start" : 1738631981045,
          "stop" : 1738632041575,
          "duration" : 60530
        }
      }, {
        "uid" : "5fc5786ec96dcb00",
        "reportUrl" : "https://lambotik.github.io/Oblache/302//#testresult/5fc5786ec96dcb00",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 504",
        "time" : {
          "start" : 1738545642657,
          "stop" : 1738545702998,
          "duration" : 60341
        }
      }, {
        "uid" : "2b7732d77224e4e3",
        "reportUrl" : "https://lambotik.github.io/Oblache/301//#testresult/2b7732d77224e4e3",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 504",
        "time" : {
          "start" : 1738459364665,
          "stop" : 1738459425043,
          "duration" : 60378
        }
      }, {
        "uid" : "73e789535d293c29",
        "reportUrl" : "https://lambotik.github.io/Oblache/300//#testresult/73e789535d293c29",
        "status" : "passed",
        "time" : {
          "start" : 1738371852514,
          "stop" : 1738371853050,
          "duration" : 536
        }
      }, {
        "uid" : "8dae994d5428ab65",
        "reportUrl" : "https://lambotik.github.io/Oblache/299//#testresult/8dae994d5428ab65",
        "status" : "passed",
        "time" : {
          "start" : 1738350569376,
          "stop" : 1738350569721,
          "duration" : 345
        }
      }, {
        "uid" : "7b810d28a4fec8c9",
        "reportUrl" : "https://lambotik.github.io/Oblache/298//#testresult/7b810d28a4fec8c9",
        "status" : "passed",
        "time" : {
          "start" : 1738198760109,
          "stop" : 1738198760427,
          "duration" : 318
        }
      }, {
        "uid" : "5dc48cf0d0e815f5",
        "reportUrl" : "https://lambotik.github.io/Oblache/297//#testresult/5dc48cf0d0e815f5",
        "status" : "passed",
        "time" : {
          "start" : 1738112414392,
          "stop" : 1738112414876,
          "duration" : 484
        }
      }, {
        "uid" : "26cb8e0b784e61ad",
        "reportUrl" : "https://lambotik.github.io/Oblache/296//#testresult/26cb8e0b784e61ad",
        "status" : "passed",
        "time" : {
          "start" : 1738026026346,
          "stop" : 1738026026686,
          "duration" : 340
        }
      }, {
        "uid" : "58176d0fd37011e6",
        "reportUrl" : "https://lambotik.github.io/Oblache/295//#testresult/58176d0fd37011e6",
        "status" : "passed",
        "time" : {
          "start" : 1737939703568,
          "stop" : 1737939703943,
          "duration" : 375
        }
      }, {
        "uid" : "fedb7738954559db",
        "reportUrl" : "https://lambotik.github.io/Oblache/294//#testresult/fedb7738954559db",
        "status" : "passed",
        "time" : {
          "start" : 1737853348691,
          "stop" : 1737853349201,
          "duration" : 510
        }
      }, {
        "uid" : "64b86a5e38bdd64a",
        "reportUrl" : "https://lambotik.github.io/Oblache/293//#testresult/64b86a5e38bdd64a",
        "status" : "passed",
        "time" : {
          "start" : 1737766646414,
          "stop" : 1737766647081,
          "duration" : 667
        }
      }, {
        "uid" : "2b867434339fbdb7",
        "reportUrl" : "https://lambotik.github.io/Oblache/292//#testresult/2b867434339fbdb7",
        "status" : "passed",
        "time" : {
          "start" : 1737680482330,
          "stop" : 1737680482860,
          "duration" : 530
        }
      }, {
        "uid" : "bab67f273c7e17c9",
        "reportUrl" : "https://lambotik.github.io/Oblache/291//#testresult/bab67f273c7e17c9",
        "status" : "passed",
        "time" : {
          "start" : 1737594019550,
          "stop" : 1737594019868,
          "duration" : 318
        }
      }, {
        "uid" : "b210ed4f9365416b",
        "reportUrl" : "https://lambotik.github.io/Oblache/290//#testresult/b210ed4f9365416b",
        "status" : "passed",
        "time" : {
          "start" : 1737507703962,
          "stop" : 1737507704283,
          "duration" : 321
        }
      }, {
        "uid" : "c99cea78b5cfcbf0",
        "reportUrl" : "https://lambotik.github.io/Oblache/289//#testresult/c99cea78b5cfcbf0",
        "status" : "passed",
        "time" : {
          "start" : 1737421186706,
          "stop" : 1737421187013,
          "duration" : 307
        }
      }, {
        "uid" : "ee826aa614b2fc5b",
        "reportUrl" : "https://lambotik.github.io/Oblache/288//#testresult/ee826aa614b2fc5b",
        "status" : "passed",
        "time" : {
          "start" : 1737334876664,
          "stop" : 1737334877058,
          "duration" : 394
        }
      }, {
        "uid" : "c0e17e81cf37acf1",
        "reportUrl" : "https://lambotik.github.io/Oblache/287//#testresult/c0e17e81cf37acf1",
        "status" : "passed",
        "time" : {
          "start" : 1737248703648,
          "stop" : 1737248704172,
          "duration" : 524
        }
      }, {
        "uid" : "e739eef4b2b3d0b2",
        "reportUrl" : "https://lambotik.github.io/Oblache/286//#testresult/e739eef4b2b3d0b2",
        "status" : "passed",
        "time" : {
          "start" : 1737161898231,
          "stop" : 1737161898658,
          "duration" : 427
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "18cf8e4961c1977f.json",
  "parameterValues" : [ ]
}