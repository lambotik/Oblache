{
  "uid" : "b24feb64b3ee7307",
  "name" : "POST registration Bulgaria language not agree.",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_registration_for_bulgaria_language_not_agree",
  "historyId" : "537e92787106744f03e7bc213d25350a",
  "time" : {
    "start" : 1738891316808,
    "stop" : 1738891377333,
    "duration" : 60525
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 504",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7ff0aa610ce0>\n\n    @allure.title('POST registration Bulgaria language not agree.')\n    def test_post_registration_for_bulgaria_language_not_agree(self):\n        response = API.post_registration_variety_email(\n            mail=random.choice(['gmail', 'mail', 'yandex']),\n            old_password=TestPOST.old_password,\n            prefix='bg',\n            language='bg-bg',\n            tos_agree=False)\n>       Checking.check_status_code(response, 400)\n\ntests_api/test_bd.py:163: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [504]>, status_code = 400\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 504\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 504",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7ff0aa610ce0>\n\n    @allure.title('POST registration Bulgaria language not agree.')\n    def test_post_registration_for_bulgaria_language_not_agree(self):\n        response = API.post_registration_variety_email(\n            mail=random.choice(['gmail', 'mail', 'yandex']),\n            old_password=TestPOST.old_password,\n            prefix='bg',\n            language='bg-bg',\n            tos_agree=False)\n>       Checking.check_status_code(response, 400)\n\ntests_api/test_bd.py:163: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [504]>, status_code = 400\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 504\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "post_registration_variety_email",
      "time" : {
        "start" : 1738891316808,
        "stop" : 1738891377332,
        "duration" : 60524
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /register",
        "time" : {
          "start" : 1738891377332,
          "stop" : 1738891377332,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1738891377332,
          "stop" : 1738891377332,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Url: https://dbend.areso.pro/register",
          "time" : {
            "start" : 1738891377332,
            "stop" : 1738891377332,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': 'None'}",
          "time" : {
            "start" : 1738891377332,
            "stop" : 1738891377332,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: \n                                {\n                                \"email\": f'aqa2025_02_07_01_01_45@gmail.bg',\n                                \"password\": password,\n                                \"tos_agree\": False,\n                                \"language\": bg-bg\n                               }",
          "time" : {
            "start" : 1738891377332,
            "stop" : 1738891377332,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 3,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1738891377332,
          "stop" : 1738891377332,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 504",
          "time" : {
            "start" : 1738891377332,
            "stop" : 1738891377332,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: <html>\r\n<head><title>504 Gateway Time-out</title></head>\r\n<body>\r\n<center><h1>504 Gateway Time-out</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
          "time" : {
            "start" : 1738891377332,
            "stop" : 1738891377332,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 8,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 400 == Response status code: 504",
      "time" : {
        "start" : 1738891377333,
        "stop" : 1738891377333,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 504\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 10,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "fv-az1278-617"
  }, {
    "name" : "thread",
    "value" : "2446-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 6,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 83,
        "unknown" : 0,
        "total" : 89
      },
      "items" : [ {
        "uid" : "941dabda5529289e",
        "reportUrl" : "https://lambotik.github.io/Oblache/305//#testresult/941dabda5529289e",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 504",
        "time" : {
          "start" : 1738804891787,
          "stop" : 1738804952177,
          "duration" : 60390
        }
      }, {
        "uid" : "e75692ccc86b9e9",
        "reportUrl" : "https://lambotik.github.io/Oblache/304//#testresult/e75692ccc86b9e9",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 504",
        "time" : {
          "start" : 1738718482129,
          "stop" : 1738718542414,
          "duration" : 60285
        }
      }, {
        "uid" : "cabeea07b9f52f67",
        "reportUrl" : "https://lambotik.github.io/Oblache/303//#testresult/cabeea07b9f52f67",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 504",
        "time" : {
          "start" : 1738632041586,
          "stop" : 1738632102121,
          "duration" : 60535
        }
      }, {
        "uid" : "89f6d14c90157b87",
        "reportUrl" : "https://lambotik.github.io/Oblache/302//#testresult/89f6d14c90157b87",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 504",
        "time" : {
          "start" : 1738545703009,
          "stop" : 1738545763369,
          "duration" : 60360
        }
      }, {
        "uid" : "7c1b2f356e66fc7f",
        "reportUrl" : "https://lambotik.github.io/Oblache/301//#testresult/7c1b2f356e66fc7f",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 504",
        "time" : {
          "start" : 1738459425054,
          "stop" : 1738459485466,
          "duration" : 60412
        }
      }, {
        "uid" : "4ac897af90b3d612",
        "reportUrl" : "https://lambotik.github.io/Oblache/300//#testresult/4ac897af90b3d612",
        "status" : "passed",
        "time" : {
          "start" : 1738371853052,
          "stop" : 1738371853586,
          "duration" : 534
        }
      }, {
        "uid" : "2bfb544eb7804e40",
        "reportUrl" : "https://lambotik.github.io/Oblache/299//#testresult/2bfb544eb7804e40",
        "status" : "passed",
        "time" : {
          "start" : 1738350569723,
          "stop" : 1738350570037,
          "duration" : 314
        }
      }, {
        "uid" : "896681a772fee978",
        "reportUrl" : "https://lambotik.github.io/Oblache/298//#testresult/896681a772fee978",
        "status" : "passed",
        "time" : {
          "start" : 1738198760429,
          "stop" : 1738198760742,
          "duration" : 313
        }
      }, {
        "uid" : "596ae2d0337ae70b",
        "reportUrl" : "https://lambotik.github.io/Oblache/297//#testresult/596ae2d0337ae70b",
        "status" : "passed",
        "time" : {
          "start" : 1738112414877,
          "stop" : 1738112415182,
          "duration" : 305
        }
      }, {
        "uid" : "8f7fdd01344848ff",
        "reportUrl" : "https://lambotik.github.io/Oblache/296//#testresult/8f7fdd01344848ff",
        "status" : "passed",
        "time" : {
          "start" : 1738026026687,
          "stop" : 1738026027025,
          "duration" : 338
        }
      }, {
        "uid" : "e33bf1e5f7219aed",
        "reportUrl" : "https://lambotik.github.io/Oblache/295//#testresult/e33bf1e5f7219aed",
        "status" : "passed",
        "time" : {
          "start" : 1737939703944,
          "stop" : 1737939704318,
          "duration" : 374
        }
      }, {
        "uid" : "7ba16c6020026618",
        "reportUrl" : "https://lambotik.github.io/Oblache/294//#testresult/7ba16c6020026618",
        "status" : "passed",
        "time" : {
          "start" : 1737853349202,
          "stop" : 1737853349723,
          "duration" : 521
        }
      }, {
        "uid" : "e1cbfadad2cd7fc7",
        "reportUrl" : "https://lambotik.github.io/Oblache/293//#testresult/e1cbfadad2cd7fc7",
        "status" : "passed",
        "time" : {
          "start" : 1737766647082,
          "stop" : 1737766647606,
          "duration" : 524
        }
      }, {
        "uid" : "d94d3ceb1e6d2ce4",
        "reportUrl" : "https://lambotik.github.io/Oblache/292//#testresult/d94d3ceb1e6d2ce4",
        "status" : "passed",
        "time" : {
          "start" : 1737680482862,
          "stop" : 1737680483543,
          "duration" : 681
        }
      }, {
        "uid" : "5a115c1caedcded7",
        "reportUrl" : "https://lambotik.github.io/Oblache/291//#testresult/5a115c1caedcded7",
        "status" : "passed",
        "time" : {
          "start" : 1737594019869,
          "stop" : 1737594020295,
          "duration" : 426
        }
      }, {
        "uid" : "2050184a91aacd80",
        "reportUrl" : "https://lambotik.github.io/Oblache/290//#testresult/2050184a91aacd80",
        "status" : "passed",
        "time" : {
          "start" : 1737507704285,
          "stop" : 1737507704599,
          "duration" : 314
        }
      }, {
        "uid" : "1a22cd8982ad48d7",
        "reportUrl" : "https://lambotik.github.io/Oblache/289//#testresult/1a22cd8982ad48d7",
        "status" : "passed",
        "time" : {
          "start" : 1737421187015,
          "stop" : 1737421187318,
          "duration" : 303
        }
      }, {
        "uid" : "4d7c38a77d34d87e",
        "reportUrl" : "https://lambotik.github.io/Oblache/288//#testresult/4d7c38a77d34d87e",
        "status" : "passed",
        "time" : {
          "start" : 1737334877059,
          "stop" : 1737334877433,
          "duration" : 374
        }
      }, {
        "uid" : "b1542263eb669cb7",
        "reportUrl" : "https://lambotik.github.io/Oblache/287//#testresult/b1542263eb669cb7",
        "status" : "passed",
        "time" : {
          "start" : 1737248704174,
          "stop" : 1737248704689,
          "duration" : 515
        }
      }, {
        "uid" : "c42966799f8c3dea",
        "reportUrl" : "https://lambotik.github.io/Oblache/286//#testresult/c42966799f8c3dea",
        "status" : "passed",
        "time" : {
          "start" : 1737161898660,
          "stop" : 1737161899020,
          "duration" : 360
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "b24feb64b3ee7307.json",
  "parameterValues" : [ ]
}