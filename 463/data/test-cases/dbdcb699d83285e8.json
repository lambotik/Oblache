{
  "uid" : "dbdcb699d83285e8",
  "name" : "POST registration Bulgaria language not agree.",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_registration_for_bulgaria_language_not_agree",
  "historyId" : "537e92787106744f03e7bc213d25350a",
  "time" : {
    "start" : 1754446146556,
    "stop" : 1754446147023,
    "duration" : 467
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 502",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7fc320e30830>\n\n    @allure.title('POST registration Bulgaria language not agree.')\n    def test_post_registration_for_bulgaria_language_not_agree(self):\n        response = API.post_registration_variety_email(\n            mail=random.choice(['gmail', 'mail', 'yandex']),\n            old_password=TestPOST.old_password,\n            prefix='bg',\n            language='bg-bg',\n            tos_agree=False)\n>       Checking.check_status_code(response, 400)\n\ntests_api/test_bd.py:163: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 400\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 502",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7fc320e30830>\n\n    @allure.title('POST registration Bulgaria language not agree.')\n    def test_post_registration_for_bulgaria_language_not_agree(self):\n        response = API.post_registration_variety_email(\n            mail=random.choice(['gmail', 'mail', 'yandex']),\n            old_password=TestPOST.old_password,\n            prefix='bg',\n            language='bg-bg',\n            tos_agree=False)\n>       Checking.check_status_code(response, 400)\n\ntests_api/test_bd.py:163: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 400\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "post_registration_variety_email",
      "time" : {
        "start" : 1754446146556,
        "stop" : 1754446147023,
        "duration" : 467
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /register",
        "time" : {
          "start" : 1754446147023,
          "stop" : 1754446147023,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false,
        "stepsCount" : 0
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1754446147023,
          "stop" : 1754446147023,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': ''}",
          "time" : {
            "start" : 1754446147023,
            "stop" : 1754446147023,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false,
          "stepsCount" : 0
        }, {
          "name" : "Body: \n                                {\n                                \"email\": f'aqa2025_08_06_02_08_51@yandex.bg',\n                                \"password\": password,\n                                \"tos_agree\": False,\n                                \"language\": bg-bg\n                               }",
          "time" : {
            "start" : 1754446147023,
            "stop" : 1754446147023,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false,
          "stepsCount" : 0
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true,
        "stepsCount" : 2
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1754446147023,
          "stop" : 1754446147023,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 502",
          "time" : {
            "start" : 1754446147023,
            "stop" : 1754446147023,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false,
          "stepsCount" : 0
        }, {
          "name" : "JSON: <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
          "time" : {
            "start" : 1754446147023,
            "stop" : 1754446147023,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false,
          "stepsCount" : 0
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true,
        "stepsCount" : 2
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true,
      "stepsCount" : 7
    }, {
      "name" : "Assert status code: 400 == Response status code: 502",
      "time" : {
        "start" : 1754446147023,
        "stop" : 1754446147023,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 502\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true,
      "stepsCount" : 0
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 9
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "pkrvmjbmru5nbw0"
  }, {
    "name" : "thread",
    "value" : "2583-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 22,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 225,
        "unknown" : 0,
        "total" : 248
      },
      "items" : [ {
        "uid" : "c9d8e967fc797497",
        "reportUrl" : "https://lambotik.github.io/Oblache/462//#testresult/c9d8e967fc797497",
        "status" : "passed",
        "time" : {
          "start" : 1754359840812,
          "stop" : 1754359841183,
          "duration" : 371
        }
      }, {
        "uid" : "a17b76a40208f1a6",
        "reportUrl" : "https://lambotik.github.io/Oblache/461//#testresult/a17b76a40208f1a6",
        "status" : "passed",
        "time" : {
          "start" : 1754274166529,
          "stop" : 1754274166886,
          "duration" : 357
        }
      }, {
        "uid" : "86ba4fcd57978a73",
        "reportUrl" : "https://lambotik.github.io/Oblache/460//#testresult/86ba4fcd57978a73",
        "status" : "passed",
        "time" : {
          "start" : 1754187790901,
          "stop" : 1754187791396,
          "duration" : 495
        }
      }, {
        "uid" : "3b5d817194ff5b6f",
        "reportUrl" : "https://lambotik.github.io/Oblache/459//#testresult/3b5d817194ff5b6f",
        "status" : "passed",
        "time" : {
          "start" : 1754100139288,
          "stop" : 1754100139662,
          "duration" : 374
        }
      }, {
        "uid" : "67265e0e35f6652a",
        "reportUrl" : "https://lambotik.github.io/Oblache/458//#testresult/67265e0e35f6652a",
        "status" : "passed",
        "time" : {
          "start" : 1754015064235,
          "stop" : 1754015064540,
          "duration" : 305
        }
      }, {
        "uid" : "4ace6b8da12eb525",
        "reportUrl" : "https://lambotik.github.io/Oblache/457//#testresult/4ace6b8da12eb525",
        "status" : "passed",
        "time" : {
          "start" : 1753927661970,
          "stop" : 1753927662400,
          "duration" : 430
        }
      }, {
        "uid" : "600159788c7edd47",
        "reportUrl" : "https://lambotik.github.io/Oblache/456//#testresult/600159788c7edd47",
        "status" : "passed",
        "time" : {
          "start" : 1753841287152,
          "stop" : 1753841287515,
          "duration" : 363
        }
      }, {
        "uid" : "c730b4245b490c94",
        "reportUrl" : "https://lambotik.github.io/Oblache/455//#testresult/c730b4245b490c94",
        "status" : "passed",
        "time" : {
          "start" : 1753755798824,
          "stop" : 1753755799325,
          "duration" : 501
        }
      }, {
        "uid" : "7608c7799d200578",
        "reportUrl" : "https://lambotik.github.io/Oblache/454//#testresult/7608c7799d200578",
        "status" : "passed",
        "time" : {
          "start" : 1753668727027,
          "stop" : 1753668727513,
          "duration" : 486
        }
      }, {
        "uid" : "ecf262c41a4da9d3",
        "reportUrl" : "https://lambotik.github.io/Oblache/453//#testresult/ecf262c41a4da9d3",
        "status" : "passed",
        "time" : {
          "start" : 1753582863171,
          "stop" : 1753582863696,
          "duration" : 525
        }
      }, {
        "uid" : "e8786ed9bc59c1d5",
        "reportUrl" : "https://lambotik.github.io/Oblache/452//#testresult/e8786ed9bc59c1d5",
        "status" : "passed",
        "time" : {
          "start" : 1753495270394,
          "stop" : 1753495270697,
          "duration" : 303
        }
      }, {
        "uid" : "b026f10bd6480c9c",
        "reportUrl" : "https://lambotik.github.io/Oblache/451//#testresult/b026f10bd6480c9c",
        "status" : "passed",
        "time" : {
          "start" : 1753409106780,
          "stop" : 1753409107150,
          "duration" : 370
        }
      }, {
        "uid" : "a6ec504ee0c7128b",
        "reportUrl" : "https://lambotik.github.io/Oblache/450//#testresult/a6ec504ee0c7128b",
        "status" : "passed",
        "time" : {
          "start" : 1751332908259,
          "stop" : 1751332908567,
          "duration" : 308
        }
      }, {
        "uid" : "ed98d45a787a5472",
        "reportUrl" : "https://lambotik.github.io/Oblache/449//#testresult/ed98d45a787a5472",
        "status" : "passed",
        "time" : {
          "start" : 1751246308731,
          "stop" : 1751246309038,
          "duration" : 307
        }
      }, {
        "uid" : "d7b0b13d1483215",
        "reportUrl" : "https://lambotik.github.io/Oblache/448//#testresult/d7b0b13d1483215",
        "status" : "passed",
        "time" : {
          "start" : 1751160103813,
          "stop" : 1751160104268,
          "duration" : 455
        }
      }, {
        "uid" : "2d9cf1185c397ff4",
        "reportUrl" : "https://lambotik.github.io/Oblache/447//#testresult/2d9cf1185c397ff4",
        "status" : "passed",
        "time" : {
          "start" : 1751073102833,
          "stop" : 1751073103321,
          "duration" : 488
        }
      }, {
        "uid" : "ad99c7db5c0a460",
        "reportUrl" : "https://lambotik.github.io/Oblache/446//#testresult/ad99c7db5c0a460",
        "status" : "passed",
        "time" : {
          "start" : 1750986867541,
          "stop" : 1750986868044,
          "duration" : 503
        }
      }, {
        "uid" : "391d2ff90715cfb3",
        "reportUrl" : "https://lambotik.github.io/Oblache/445//#testresult/391d2ff90715cfb3",
        "status" : "passed",
        "time" : {
          "start" : 1750900406415,
          "stop" : 1750900406787,
          "duration" : 372
        }
      }, {
        "uid" : "10ad00b4f33d793b",
        "reportUrl" : "https://lambotik.github.io/Oblache/444//#testresult/10ad00b4f33d793b",
        "status" : "passed",
        "time" : {
          "start" : 1750814080985,
          "stop" : 1750814081495,
          "duration" : 510
        }
      }, {
        "uid" : "a1568d656f4d58e",
        "reportUrl" : "https://lambotik.github.io/Oblache/443//#testresult/a1568d656f4d58e",
        "status" : "passed",
        "time" : {
          "start" : 1750727636537,
          "stop" : 1750727637041,
          "duration" : 504
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "dbdcb699d83285e8.json",
  "parameterValues" : [ ]
}