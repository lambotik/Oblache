{
  "uid" : "8fc349335e6f6f7c",
  "name" : "POST registration for English language not agree.",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_registration_for_english_language_not_agree",
  "historyId" : "e9cf5ad26f729332760738798d233dd1",
  "time" : {
    "start" : 1754446145601,
    "stop" : 1754446146066,
    "duration" : 465
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 502",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7fc320e30ef0>\n\n    @allure.title('POST registration for English language not agree.')\n    def test_post_registration_for_english_language_not_agree(self):\n        response = API.post_registration_variety_email(\n            mail=random.choice(['gmail', 'mail', 'yandex']),\n            old_password=TestPOST.old_password,\n            prefix=random.choice(['com', 'ru', 'by']),\n            language=\"en-us\",\n            tos_agree=False)\n>       Checking.check_status_code(response, 400)\n\ntests_api/test_bd.py:139: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 400\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 502",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7fc320e30ef0>\n\n    @allure.title('POST registration for English language not agree.')\n    def test_post_registration_for_english_language_not_agree(self):\n        response = API.post_registration_variety_email(\n            mail=random.choice(['gmail', 'mail', 'yandex']),\n            old_password=TestPOST.old_password,\n            prefix=random.choice(['com', 'ru', 'by']),\n            language=\"en-us\",\n            tos_agree=False)\n>       Checking.check_status_code(response, 400)\n\ntests_api/test_bd.py:139: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 400\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "post_registration_variety_email",
      "time" : {
        "start" : 1754446145601,
        "stop" : 1754446146066,
        "duration" : 465
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /register",
        "time" : {
          "start" : 1754446146066,
          "stop" : 1754446146066,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false,
        "stepsCount" : 0
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1754446146066,
          "stop" : 1754446146066,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': ''}",
          "time" : {
            "start" : 1754446146066,
            "stop" : 1754446146066,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false,
          "stepsCount" : 0
        }, {
          "name" : "Body: \n                                {\n                                \"email\": f'aqa2025_08_06_02_08_51@gmail.com',\n                                \"password\": password,\n                                \"tos_agree\": False,\n                                \"language\": en-us\n                               }",
          "time" : {
            "start" : 1754446146066,
            "stop" : 1754446146066,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false,
          "stepsCount" : 0
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true,
        "stepsCount" : 2
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1754446146066,
          "stop" : 1754446146066,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 502",
          "time" : {
            "start" : 1754446146066,
            "stop" : 1754446146066,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false,
          "stepsCount" : 0
        }, {
          "name" : "JSON: <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
          "time" : {
            "start" : 1754446146066,
            "stop" : 1754446146066,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false,
          "stepsCount" : 0
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true,
        "stepsCount" : 2
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true,
      "stepsCount" : 7
    }, {
      "name" : "Assert status code: 400 == Response status code: 502",
      "time" : {
        "start" : 1754446146066,
        "stop" : 1754446146066,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 502\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true,
      "stepsCount" : 0
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 9
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "pkrvmjbmru5nbw0"
  }, {
    "name" : "thread",
    "value" : "2583-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 22,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 226,
        "unknown" : 0,
        "total" : 248
      },
      "items" : [ {
        "uid" : "56ce3b63ff127787",
        "reportUrl" : "https://lambotik.github.io/Oblache/462//#testresult/56ce3b63ff127787",
        "status" : "passed",
        "time" : {
          "start" : 1754359840085,
          "stop" : 1754359840445,
          "duration" : 360
        }
      }, {
        "uid" : "c72f8cc13498b89d",
        "reportUrl" : "https://lambotik.github.io/Oblache/461//#testresult/c72f8cc13498b89d",
        "status" : "passed",
        "time" : {
          "start" : 1754274165787,
          "stop" : 1754274166151,
          "duration" : 364
        }
      }, {
        "uid" : "ac669ac6755c0cd9",
        "reportUrl" : "https://lambotik.github.io/Oblache/460//#testresult/ac669ac6755c0cd9",
        "status" : "passed",
        "time" : {
          "start" : 1754187789884,
          "stop" : 1754187790384,
          "duration" : 500
        }
      }, {
        "uid" : "9b86b5aa21611c07",
        "reportUrl" : "https://lambotik.github.io/Oblache/459//#testresult/9b86b5aa21611c07",
        "status" : "passed",
        "time" : {
          "start" : 1754100138541,
          "stop" : 1754100138890,
          "duration" : 349
        }
      }, {
        "uid" : "f9b79075ef08482a",
        "reportUrl" : "https://lambotik.github.io/Oblache/458//#testresult/f9b79075ef08482a",
        "status" : "passed",
        "time" : {
          "start" : 1754015063616,
          "stop" : 1754015063922,
          "duration" : 306
        }
      }, {
        "uid" : "815bee11d4fbe115",
        "reportUrl" : "https://lambotik.github.io/Oblache/457//#testresult/815bee11d4fbe115",
        "status" : "passed",
        "time" : {
          "start" : 1753927661034,
          "stop" : 1753927661470,
          "duration" : 436
        }
      }, {
        "uid" : "2a6be8e5fcc147dd",
        "reportUrl" : "https://lambotik.github.io/Oblache/456//#testresult/2a6be8e5fcc147dd",
        "status" : "passed",
        "time" : {
          "start" : 1753841286401,
          "stop" : 1753841286788,
          "duration" : 387
        }
      }, {
        "uid" : "f9332b92c5149a68",
        "reportUrl" : "https://lambotik.github.io/Oblache/455//#testresult/f9332b92c5149a68",
        "status" : "passed",
        "time" : {
          "start" : 1753755797793,
          "stop" : 1753755798291,
          "duration" : 498
        }
      }, {
        "uid" : "9a325f10ade7a90d",
        "reportUrl" : "https://lambotik.github.io/Oblache/454//#testresult/9a325f10ade7a90d",
        "status" : "passed",
        "time" : {
          "start" : 1753668725922,
          "stop" : 1753668726548,
          "duration" : 626
        }
      }, {
        "uid" : "a2193701814aadd1",
        "reportUrl" : "https://lambotik.github.io/Oblache/453//#testresult/a2193701814aadd1",
        "status" : "passed",
        "time" : {
          "start" : 1753582862136,
          "stop" : 1753582862650,
          "duration" : 514
        }
      }, {
        "uid" : "35d012c53410314d",
        "reportUrl" : "https://lambotik.github.io/Oblache/452//#testresult/35d012c53410314d",
        "status" : "passed",
        "time" : {
          "start" : 1753495269777,
          "stop" : 1753495270079,
          "duration" : 302
        }
      }, {
        "uid" : "8463b3803eeb32a5",
        "reportUrl" : "https://lambotik.github.io/Oblache/451//#testresult/8463b3803eeb32a5",
        "status" : "passed",
        "time" : {
          "start" : 1753409106050,
          "stop" : 1753409106417,
          "duration" : 367
        }
      }, {
        "uid" : "ba1b02caa4e24595",
        "reportUrl" : "https://lambotik.github.io/Oblache/450//#testresult/ba1b02caa4e24595",
        "status" : "passed",
        "time" : {
          "start" : 1751332907624,
          "stop" : 1751332907930,
          "duration" : 306
        }
      }, {
        "uid" : "e795d4ae4266516d",
        "reportUrl" : "https://lambotik.github.io/Oblache/449//#testresult/e795d4ae4266516d",
        "status" : "passed",
        "time" : {
          "start" : 1751246308070,
          "stop" : 1751246308389,
          "duration" : 319
        }
      }, {
        "uid" : "4c23c97e09752ea8",
        "reportUrl" : "https://lambotik.github.io/Oblache/448//#testresult/4c23c97e09752ea8",
        "status" : "passed",
        "time" : {
          "start" : 1751160102974,
          "stop" : 1751160103384,
          "duration" : 410
        }
      }, {
        "uid" : "e8fb162de193c93a",
        "reportUrl" : "https://lambotik.github.io/Oblache/447//#testresult/e8fb162de193c93a",
        "status" : "passed",
        "time" : {
          "start" : 1751073102198,
          "stop" : 1751073102507,
          "duration" : 309
        }
      }, {
        "uid" : "3ddeae049d49baee",
        "reportUrl" : "https://lambotik.github.io/Oblache/446//#testresult/3ddeae049d49baee",
        "status" : "passed",
        "time" : {
          "start" : 1750986866470,
          "stop" : 1750986867023,
          "duration" : 553
        }
      }, {
        "uid" : "4e938cdce8437a23",
        "reportUrl" : "https://lambotik.github.io/Oblache/445//#testresult/4e938cdce8437a23",
        "status" : "passed",
        "time" : {
          "start" : 1750900405658,
          "stop" : 1750900406023,
          "duration" : 365
        }
      }, {
        "uid" : "87770dc600f6012b",
        "reportUrl" : "https://lambotik.github.io/Oblache/444//#testresult/87770dc600f6012b",
        "status" : "passed",
        "time" : {
          "start" : 1750814079841,
          "stop" : 1750814080356,
          "duration" : 515
        }
      }, {
        "uid" : "af0fe60110b870cd",
        "reportUrl" : "https://lambotik.github.io/Oblache/443//#testresult/af0fe60110b870cd",
        "status" : "passed",
        "time" : {
          "start" : 1750727635515,
          "stop" : 1750727636010,
          "duration" : 495
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "8fc349335e6f6f7c.json",
  "parameterValues" : [ ]
}