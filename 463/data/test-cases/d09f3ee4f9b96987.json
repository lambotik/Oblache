{
  "uid" : "d09f3ee4f9b96987",
  "name" : "GET list list_dbenvs.",
  "fullName" : "tests_api.test_get.TestGET#test_get_list_envs",
  "historyId" : "f37afe9cace3a071c80dd5bc99f8b980",
  "time" : {
    "start" : 1754446171917,
    "stop" : 1754446172384,
    "duration" : 467
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 502",
  "statusTrace" : "self = <tests_api.test_get.TestGET object at 0x7fc320e31a60>\n\n    @allure.title('GET list list_dbenvs.')\n    def test_get_list_envs(self):\n        response = API.get_list_envs()\n>       Checking.check_status_code(response, 200)\n\ntests_api/test_get.py:53: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 502",
    "statusTrace" : "self = <tests_api.test_get.TestGET object at 0x7fc320e31a60>\n\n    @allure.title('GET list list_dbenvs.')\n    def test_get_list_envs(self):\n        response = API.get_list_envs()\n>       Checking.check_status_code(response, 200)\n\ntests_api/test_get.py:53: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "Endpoint: /list_dbenvs",
      "time" : {
        "start" : 1754446172384,
        "stop" : 1754446172384,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "Request:",
      "time" : {
        "start" : 1754446172384,
        "stop" : 1754446172384,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': ''}",
        "time" : {
          "start" : 1754446172384,
          "stop" : 1754446172384,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false,
        "stepsCount" : 0
      }, {
        "name" : "Body: None",
        "time" : {
          "start" : 1754446172384,
          "stop" : 1754446172384,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false,
        "stepsCount" : 0
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true,
      "stepsCount" : 2
    }, {
      "name" : "Response:",
      "time" : {
        "start" : 1754446172384,
        "stop" : 1754446172384,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Status code: 502",
        "time" : {
          "start" : 1754446172384,
          "stop" : 1754446172384,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false,
        "stepsCount" : 0
      }, {
        "name" : "JSON: <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
        "time" : {
          "start" : 1754446172384,
          "stop" : 1754446172384,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false,
        "stepsCount" : 0
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true,
      "stepsCount" : 2
    }, {
      "name" : "Assert status code: 200 == Response status code: 502",
      "time" : {
        "start" : 1754446172384,
        "stop" : 1754446172384,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 502\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true,
      "stepsCount" : 0
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 8
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "GET"
  }, {
    "name" : "severity",
    "value" : "critical"
  }, {
    "name" : "epic",
    "value" : "Connection DB"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestGET"
  }, {
    "name" : "host",
    "value" : "pkrvmjbmru5nbw0"
  }, {
    "name" : "thread",
    "value" : "2583-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_get"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "critical",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 12,
        "unknown" : 0,
        "total" : 13
      },
      "items" : [ {
        "uid" : "50c56895dc7022c6",
        "reportUrl" : "https://lambotik.github.io/Oblache/462//#testresult/50c56895dc7022c6",
        "status" : "passed",
        "time" : {
          "start" : 1754359962921,
          "stop" : 1754359963278,
          "duration" : 357
        }
      }, {
        "uid" : "714e80f29216190c",
        "reportUrl" : "https://lambotik.github.io/Oblache/461//#testresult/714e80f29216190c",
        "status" : "passed",
        "time" : {
          "start" : 1754274286927,
          "stop" : 1754274287283,
          "duration" : 356
        }
      }, {
        "uid" : "dedec7a2dc709992",
        "reportUrl" : "https://lambotik.github.io/Oblache/460//#testresult/dedec7a2dc709992",
        "status" : "passed",
        "time" : {
          "start" : 1754187950066,
          "stop" : 1754187950562,
          "duration" : 496
        }
      }, {
        "uid" : "839d2901e48e4585",
        "reportUrl" : "https://lambotik.github.io/Oblache/459//#testresult/839d2901e48e4585",
        "status" : "passed",
        "time" : {
          "start" : 1754100283120,
          "stop" : 1754100283488,
          "duration" : 368
        }
      }, {
        "uid" : "1af40aa43ff10e1d",
        "reportUrl" : "https://lambotik.github.io/Oblache/458//#testresult/1af40aa43ff10e1d",
        "status" : "passed",
        "time" : {
          "start" : 1754015205094,
          "stop" : 1754015205395,
          "duration" : 301
        }
      }, {
        "uid" : "819b1332bc0fe5ba",
        "reportUrl" : "https://lambotik.github.io/Oblache/457//#testresult/819b1332bc0fe5ba",
        "status" : "passed",
        "time" : {
          "start" : 1753927784598,
          "stop" : 1753927785035,
          "duration" : 437
        }
      }, {
        "uid" : "9af7b918f26b99e2",
        "reportUrl" : "https://lambotik.github.io/Oblache/456//#testresult/9af7b918f26b99e2",
        "status" : "passed",
        "time" : {
          "start" : 1753841387125,
          "stop" : 1753841387484,
          "duration" : 359
        }
      }, {
        "uid" : "bde7a4eddaafae6d",
        "reportUrl" : "https://lambotik.github.io/Oblache/455//#testresult/bde7a4eddaafae6d",
        "status" : "passed",
        "time" : {
          "start" : 1753755946087,
          "stop" : 1753755946582,
          "duration" : 495
        }
      }, {
        "uid" : "43c5ad4346f15ab2",
        "reportUrl" : "https://lambotik.github.io/Oblache/454//#testresult/43c5ad4346f15ab2",
        "status" : "passed",
        "time" : {
          "start" : 1753668830424,
          "stop" : 1753668830915,
          "duration" : 491
        }
      }, {
        "uid" : "168dffef45bafd9b",
        "reportUrl" : "https://lambotik.github.io/Oblache/453//#testresult/168dffef45bafd9b",
        "status" : "passed",
        "time" : {
          "start" : 1753582967784,
          "stop" : 1753582968309,
          "duration" : 525
        }
      }, {
        "uid" : "568210e9d82c9727",
        "reportUrl" : "https://lambotik.github.io/Oblache/452//#testresult/568210e9d82c9727",
        "status" : "passed",
        "time" : {
          "start" : 1753495365158,
          "stop" : 1753495365465,
          "duration" : 307
        }
      }, {
        "uid" : "b5d54e6eac083ba8",
        "reportUrl" : "https://lambotik.github.io/Oblache/451//#testresult/b5d54e6eac083ba8",
        "status" : "passed",
        "time" : {
          "start" : 1753409205859,
          "stop" : 1753409206231,
          "duration" : 372
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "d09f3ee4f9b96987.json",
  "parameterValues" : [ ]
}