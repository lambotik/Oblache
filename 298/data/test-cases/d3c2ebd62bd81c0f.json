{
  "uid" : "d3c2ebd62bd81c0f",
  "name" : "POST checking ports_len positive",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_checking_ports_len_positive",
  "historyId" : "c6f631852f230d7f46e21d1143ab0d56",
  "time" : {
    "start" : 1738198772444,
    "stop" : 1738198772773,
    "duration" : 329
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 400",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f8aa93b24e0>\n\n    @allure.title('POST checking ports_len positive')\n    def test_post_checking_ports_len_positive(self):\n        result = API.post_create_docker_container_checking_ports(\n            token=TestPOST.token,\n            port_len=\"80-89\")\n>       Checking.check_status_code(result, 201)\n\ntests_api/test_bd.py:374: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 201\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 400\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 400",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f8aa93b24e0>\n\n    @allure.title('POST checking ports_len positive')\n    def test_post_checking_ports_len_positive(self):\n        result = API.post_create_docker_container_checking_ports(\n            token=TestPOST.token,\n            port_len=\"80-89\")\n>       Checking.check_status_code(result, 201)\n\ntests_api/test_bd.py:374: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 201\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 400\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "post_create_docker_container",
      "time" : {
        "start" : 1738198772444,
        "stop" : 1738198772773,
        "duration" : 329
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /container_create",
        "time" : {
          "start" : 1738198772773,
          "stop" : 1738198772773,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1738198772773,
          "stop" : 1738198772773,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Url: https://dbend.areso.pro/container_create",
          "time" : {
            "start" : 1738198772773,
            "stop" : 1738198772773,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': 'cb9a6a35-5c02-48ab-a833-883e0ee01f0d'}",
          "time" : {
            "start" : 1738198772773,
            "stop" : 1738198772773,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: {\"docker_image\": \"nginx\", \"int_ports\": f\"80-89\", \"env\": 3, \"region\": 3}",
          "time" : {
            "start" : 1738198772773,
            "stop" : 1738198772773,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 3,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1738198772773,
          "stop" : 1738198772773,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 400",
          "time" : {
            "start" : 1738198772773,
            "stop" : 1738198772773,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: {\n    \"msg_code\": -1,\n    \"msg\": \"endpoint is disabled\"\n}\n",
          "time" : {
            "start" : 1738198772773,
            "stop" : 1738198772773,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 8,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 201 == Response status code: 400",
      "time" : {
        "start" : 1738198772773,
        "stop" : 1738198772773,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 400\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 10,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "fv-az1440-86"
  }, {
    "name" : "thread",
    "value" : "2465-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 45,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 36,
        "unknown" : 0,
        "total" : 81
      },
      "items" : [ {
        "uid" : "3d221cf86ebd537",
        "reportUrl" : "https://lambotik.github.io/Oblache/297//#testresult/3d221cf86ebd537",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1738112427055,
          "stop" : 1738112427366,
          "duration" : 311
        }
      }, {
        "uid" : "a8c4a4c2e0ceca05",
        "reportUrl" : "https://lambotik.github.io/Oblache/296//#testresult/a8c4a4c2e0ceca05",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1738026039268,
          "stop" : 1738026039598,
          "duration" : 330
        }
      }, {
        "uid" : "c1df2ce041ecbb91",
        "reportUrl" : "https://lambotik.github.io/Oblache/295//#testresult/c1df2ce041ecbb91",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1737939718198,
          "stop" : 1737939718577,
          "duration" : 379
        }
      }, {
        "uid" : "e35554f370c99ca7",
        "reportUrl" : "https://lambotik.github.io/Oblache/294//#testresult/e35554f370c99ca7",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1737853368020,
          "stop" : 1737853368523,
          "duration" : 503
        }
      }, {
        "uid" : "23b9ebd918f5ae0d",
        "reportUrl" : "https://lambotik.github.io/Oblache/293//#testresult/23b9ebd918f5ae0d",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1737766666930,
          "stop" : 1737766667440,
          "duration" : 510
        }
      }, {
        "uid" : "125fafb5f04e1b68",
        "reportUrl" : "https://lambotik.github.io/Oblache/292//#testresult/125fafb5f04e1b68",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1737680503157,
          "stop" : 1737680503676,
          "duration" : 519
        }
      }, {
        "uid" : "c646671e4dbf4622",
        "reportUrl" : "https://lambotik.github.io/Oblache/291//#testresult/c646671e4dbf4622",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1737594032161,
          "stop" : 1737594032479,
          "duration" : 318
        }
      }, {
        "uid" : "afb534ec4094925f",
        "reportUrl" : "https://lambotik.github.io/Oblache/290//#testresult/afb534ec4094925f",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1737507716868,
          "stop" : 1737507717193,
          "duration" : 325
        }
      }, {
        "uid" : "76d61b6f83b035bf",
        "reportUrl" : "https://lambotik.github.io/Oblache/289//#testresult/76d61b6f83b035bf",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1737421198974,
          "stop" : 1737421199285,
          "duration" : 311
        }
      }, {
        "uid" : "75c88eeb59951164",
        "reportUrl" : "https://lambotik.github.io/Oblache/288//#testresult/75c88eeb59951164",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1737334891086,
          "stop" : 1737334891454,
          "duration" : 368
        }
      }, {
        "uid" : "acb0b29d0bd3fab9",
        "reportUrl" : "https://lambotik.github.io/Oblache/287//#testresult/acb0b29d0bd3fab9",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1737248729005,
          "stop" : 1737248729531,
          "duration" : 526
        }
      }, {
        "uid" : "f4f99f86a55580b8",
        "reportUrl" : "https://lambotik.github.io/Oblache/286//#testresult/f4f99f86a55580b8",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1737161912571,
          "stop" : 1737161912942,
          "duration" : 371
        }
      }, {
        "uid" : "2487800b8413482a",
        "reportUrl" : "https://lambotik.github.io/Oblache/285//#testresult/2487800b8413482a",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1737075615428,
          "stop" : 1737075615938,
          "duration" : 510
        }
      }, {
        "uid" : "6f50c814650b6c6a",
        "reportUrl" : "https://lambotik.github.io/Oblache/284//#testresult/6f50c814650b6c6a",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1736989213036,
          "stop" : 1736989213351,
          "duration" : 315
        }
      }, {
        "uid" : "9cbe7c0c9ff5367a",
        "reportUrl" : "https://lambotik.github.io/Oblache/283//#testresult/9cbe7c0c9ff5367a",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1736902871802,
          "stop" : 1736902872130,
          "duration" : 328
        }
      }, {
        "uid" : "7dd5f6c002ce1010",
        "reportUrl" : "https://lambotik.github.io/Oblache/282//#testresult/7dd5f6c002ce1010",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1736816363794,
          "stop" : 1736816364295,
          "duration" : 501
        }
      }, {
        "uid" : "56bf882ff7ceedab",
        "reportUrl" : "https://lambotik.github.io/Oblache/281//#testresult/56bf882ff7ceedab",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1736730348158,
          "stop" : 1736730348522,
          "duration" : 364
        }
      }, {
        "uid" : "1af99ed61a961097",
        "reportUrl" : "https://lambotik.github.io/Oblache/280//#testresult/1af99ed61a961097",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1736644111670,
          "stop" : 1736644112184,
          "duration" : 514
        }
      }, {
        "uid" : "d95624f026a3ba4e",
        "reportUrl" : "https://lambotik.github.io/Oblache/279//#testresult/d95624f026a3ba4e",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1736557367992,
          "stop" : 1736557368356,
          "duration" : 364
        }
      }, {
        "uid" : "8109a06e9ebd8913",
        "reportUrl" : "https://lambotik.github.io/Oblache/278//#testresult/8109a06e9ebd8913",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1736471037469,
          "stop" : 1736471037797,
          "duration" : 328
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "d3c2ebd62bd81c0f.json",
  "parameterValues" : [ ]
}