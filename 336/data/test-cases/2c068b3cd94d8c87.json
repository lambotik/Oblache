{
  "uid" : "2c068b3cd94d8c87",
  "name" : "POST login/is_logged/logout",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_login_is_logged_logout",
  "historyId" : "5acbe9eedbdaaded55cefbf9042fc1fd",
  "time" : {
    "start" : 1741481792361,
    "stop" : 1741481793491,
    "duration" : 1130
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 502",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f1c3bba4800>\nget_token = ('27d312ce-f8ae-4cd2-9417-ceac157e9ebb', {'email': 'test4@mail.com', 'password': 'testpassword'}, 'testpassword', '123456789', 'test4@mail.com')\n\n    @allure.title('POST login/is_logged/logout')\n    def test_post_login_is_logged_logout(self, get_token):\n        TestPOST.token = get_token[0]\n        response_login = API.post_login(body=TestPOST.body)\n        Checking.check_status_code(response_login, 200)\n        Checking.check_json_search_word_in_value(response_login, 'msg', 'msg[6]: login successful')\n        response_is_logged = API.post_is_logged(token=TestPOST.token)\n        Checking.check_status_code(response_is_logged, 200)\n        response_logout = API.post_logout(token=TestPOST.token)\n>       Checking.check_status_code(response_logout, 200)\n\ntests_api/test_bd.py:235: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ {
    "name" : "get_token",
    "time" : {
      "start" : 1741481792054,
      "stop" : 1741481792360,
      "duration" : 306
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Assert status code: 200 == Response status code: 200",
      "time" : {
        "start" : 1741481792360,
        "stop" : 1741481792360,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 502",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f1c3bba4800>\nget_token = ('27d312ce-f8ae-4cd2-9417-ceac157e9ebb', {'email': 'test4@mail.com', 'password': 'testpassword'}, 'testpassword', '123456789', 'test4@mail.com')\n\n    @allure.title('POST login/is_logged/logout')\n    def test_post_login_is_logged_logout(self, get_token):\n        TestPOST.token = get_token[0]\n        response_login = API.post_login(body=TestPOST.body)\n        Checking.check_status_code(response_login, 200)\n        Checking.check_json_search_word_in_value(response_login, 'msg', 'msg[6]: login successful')\n        response_is_logged = API.post_is_logged(token=TestPOST.token)\n        Checking.check_status_code(response_is_logged, 200)\n        response_logout = API.post_logout(token=TestPOST.token)\n>       Checking.check_status_code(response_logout, 200)\n\ntests_api/test_bd.py:235: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "post_login",
      "time" : {
        "start" : 1741481792361,
        "stop" : 1741481792677,
        "duration" : 316
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /login",
        "time" : {
          "start" : 1741481792676,
          "stop" : 1741481792676,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1741481792676,
          "stop" : 1741481792677,
          "duration" : 1
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': 'None'}",
          "time" : {
            "start" : 1741481792677,
            "stop" : 1741481792677,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: {\"email\": email, \"password\": password}",
          "time" : {
            "start" : 1741481792677,
            "stop" : 1741481792677,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1741481792677,
          "stop" : 1741481792677,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 200",
          "time" : {
            "start" : 1741481792677,
            "stop" : 1741481792677,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: {\n    \"token\": \"fad9ce5e-d990-4ca6-b759-7d0ef808fa40\",\n    \"msg\": \"msg[6]: login successful\"\n}\n",
          "time" : {
            "start" : 1741481792677,
            "stop" : 1741481792677,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 7,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 200 == Response status code: 200",
      "time" : {
        "start" : 1741481792677,
        "stop" : 1741481792677,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Check and compare result request with expected value by key:\nResponse: <Response [200]>\nKey: msg\nValue: msg[6]: login successful",
      "time" : {
        "start" : 1741481792677,
        "stop" : 1741481792677,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "post_is_logged",
      "time" : {
        "start" : 1741481792677,
        "stop" : 1741481792981,
        "duration" : 304
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /is_logged",
        "time" : {
          "start" : 1741481792981,
          "stop" : 1741481792981,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1741481792981,
          "stop" : 1741481792981,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': '27d312ce-f8ae-4cd2-9417-ceac157e9ebb'}",
          "time" : {
            "start" : 1741481792981,
            "stop" : 1741481792981,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: None",
          "time" : {
            "start" : 1741481792981,
            "stop" : 1741481792981,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1741481792981,
          "stop" : 1741481792981,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 200",
          "time" : {
            "start" : 1741481792981,
            "stop" : 1741481792981,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: {}\n",
          "time" : {
            "start" : 1741481792981,
            "stop" : 1741481792981,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 7,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 200 == Response status code: 200",
      "time" : {
        "start" : 1741481792981,
        "stop" : 1741481792981,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "post_is_logged",
      "time" : {
        "start" : 1741481792981,
        "stop" : 1741481793491,
        "duration" : 510
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /logout",
        "time" : {
          "start" : 1741481793491,
          "stop" : 1741481793491,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1741481793491,
          "stop" : 1741481793491,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': '27d312ce-f8ae-4cd2-9417-ceac157e9ebb'}",
          "time" : {
            "start" : 1741481793491,
            "stop" : 1741481793491,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: None",
          "time" : {
            "start" : 1741481793491,
            "stop" : 1741481793491,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1741481793491,
          "stop" : 1741481793491,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 502",
          "time" : {
            "start" : 1741481793491,
            "stop" : 1741481793491,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
          "time" : {
            "start" : 1741481793491,
            "stop" : 1741481793491,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 7,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 200 == Response status code: 502",
      "time" : {
        "start" : 1741481793491,
        "stop" : 1741481793491,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 502\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 28,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "fv-az2035-376"
  }, {
    "name" : "thread",
    "value" : "2465-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 2,
        "broken" : 12,
        "skipped" : 0,
        "passed" : 110,
        "unknown" : 0,
        "total" : 124
      },
      "items" : [ {
        "uid" : "a5f567a2f4442d31",
        "reportUrl" : "https://lambotik.github.io/Oblache/335//#testresult/a5f567a2f4442d31",
        "status" : "passed",
        "time" : {
          "start" : 1741395115440,
          "stop" : 1741395116388,
          "duration" : 948
        }
      }, {
        "uid" : "f7c1468983c722d6",
        "reportUrl" : "https://lambotik.github.io/Oblache/334//#testresult/f7c1468983c722d6",
        "status" : "passed",
        "time" : {
          "start" : 1741309512601,
          "stop" : 1741309514176,
          "duration" : 1575
        }
      }, {
        "uid" : "39f31cdddc8db03f",
        "reportUrl" : "https://lambotik.github.io/Oblache/23//#testresult/39f31cdddc8db03f",
        "status" : "broken",
        "statusDetails" : "UnicodeDecodeError: 'utf-8' codec can't decode byte 0xb0 in position 1872: invalid start byte",
        "time" : {
          "start" : 1741273248278,
          "stop" : 1741273249847,
          "duration" : 1569
        }
      }, {
        "uid" : "603e4540752ebc9b",
        "reportUrl" : "https://lambotik.github.io/Oblache/22//#testresult/603e4540752ebc9b",
        "status" : "passed",
        "time" : {
          "start" : 1741273006848,
          "stop" : 1741273007814,
          "duration" : 966
        }
      }, {
        "uid" : "c8a8e965b339271c",
        "reportUrl" : "https://lambotik.github.io/Oblache/21//#testresult/c8a8e965b339271c",
        "status" : "passed",
        "time" : {
          "start" : 1741272393947,
          "stop" : 1741272394904,
          "duration" : 957
        }
      }, {
        "uid" : "1aa9fb058d194bcf",
        "reportUrl" : "https://lambotik.github.io/Oblache/20//#testresult/1aa9fb058d194bcf",
        "status" : "passed",
        "time" : {
          "start" : 1741271064765,
          "stop" : 1741271066449,
          "duration" : 1684
        }
      }, {
        "uid" : "f39cac19f6542133",
        "reportUrl" : "https://lambotik.github.io/Oblache/19//#testresult/f39cac19f6542133",
        "status" : "passed",
        "time" : {
          "start" : 1741270246455,
          "stop" : 1741270248042,
          "duration" : 1587
        }
      }, {
        "uid" : "2ecf591b931b8bdf",
        "reportUrl" : "https://lambotik.github.io/Oblache/333//#testresult/2ecf591b931b8bdf",
        "status" : "passed",
        "time" : {
          "start" : 1741223069181,
          "stop" : 1741223070186,
          "duration" : 1005
        }
      }, {
        "uid" : "80d1f076b14a32c6",
        "reportUrl" : "https://lambotik.github.io/Oblache/332//#testresult/80d1f076b14a32c6",
        "status" : "passed",
        "time" : {
          "start" : 1741136669559,
          "stop" : 1741136670570,
          "duration" : 1011
        }
      }, {
        "uid" : "554d057abe6072ad",
        "reportUrl" : "https://lambotik.github.io/Oblache/331//#testresult/554d057abe6072ad",
        "status" : "passed",
        "time" : {
          "start" : 1741050266341,
          "stop" : 1741050267293,
          "duration" : 952
        }
      }, {
        "uid" : "46f9285b7bb842d8",
        "reportUrl" : "https://lambotik.github.io/Oblache/330//#testresult/46f9285b7bb842d8",
        "status" : "passed",
        "time" : {
          "start" : 1740963955364,
          "stop" : 1740963956468,
          "duration" : 1104
        }
      }, {
        "uid" : "427859a923465f7f",
        "reportUrl" : "https://lambotik.github.io/Oblache/329//#testresult/427859a923465f7f",
        "status" : "passed",
        "time" : {
          "start" : 1740877654975,
          "stop" : 1740877656084,
          "duration" : 1109
        }
      }, {
        "uid" : "b044ea9b197386aa",
        "reportUrl" : "https://lambotik.github.io/Oblache/328//#testresult/b044ea9b197386aa",
        "status" : "passed",
        "time" : {
          "start" : 1740791292571,
          "stop" : 1740791293499,
          "duration" : 928
        }
      }, {
        "uid" : "d0040441372f4d32",
        "reportUrl" : "https://lambotik.github.io/Oblache/327//#testresult/d0040441372f4d32",
        "status" : "passed",
        "time" : {
          "start" : 1740704623799,
          "stop" : 1740704624721,
          "duration" : 922
        }
      }, {
        "uid" : "d4170ea8f9c3ced6",
        "reportUrl" : "https://lambotik.github.io/Oblache/326//#testresult/d4170ea8f9c3ced6",
        "status" : "passed",
        "time" : {
          "start" : 1740618200302,
          "stop" : 1740618201398,
          "duration" : 1096
        }
      }, {
        "uid" : "b9d882661f6df57",
        "reportUrl" : "https://lambotik.github.io/Oblache/325//#testresult/b9d882661f6df57",
        "status" : "passed",
        "time" : {
          "start" : 1740531804711,
          "stop" : 1740531805753,
          "duration" : 1042
        }
      }, {
        "uid" : "2534429b0c8518ce",
        "reportUrl" : "https://lambotik.github.io/Oblache/324//#testresult/2534429b0c8518ce",
        "status" : "passed",
        "time" : {
          "start" : 1740445412682,
          "stop" : 1740445413798,
          "duration" : 1116
        }
      }, {
        "uid" : "b7cd896ebcfd0e6f",
        "reportUrl" : "https://lambotik.github.io/Oblache/323//#testresult/b7cd896ebcfd0e6f",
        "status" : "passed",
        "time" : {
          "start" : 1740359077148,
          "stop" : 1740359078665,
          "duration" : 1517
        }
      }, {
        "uid" : "7890cc1c3f294ec4",
        "reportUrl" : "https://lambotik.github.io/Oblache/322//#testresult/7890cc1c3f294ec4",
        "status" : "passed",
        "time" : {
          "start" : 1740272807541,
          "stop" : 1740272809085,
          "duration" : 1544
        }
      }, {
        "uid" : "7614c33e3b10bb20",
        "reportUrl" : "https://lambotik.github.io/Oblache/321//#testresult/7614c33e3b10bb20",
        "status" : "passed",
        "time" : {
          "start" : 1740186034549,
          "stop" : 1740186035632,
          "duration" : 1083
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "2c068b3cd94d8c87.json",
  "parameterValues" : [ ]
}