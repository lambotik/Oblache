{
  "uid" : "d185d8d001266cbb",
  "name" : "POST db_list",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_db_list",
  "historyId" : "74e2e9a19a1c9ee2ec47a859e878d5d7",
  "time" : {
    "start" : 1741481796829,
    "stop" : 1741481797135,
    "duration" : 306
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 401",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f1c3bba5d30>\n\n    @allure.title('POST db_list')\n    def test_post_db_list(self):\n        response_db_list = API.post_db_list(token=TestPOST.token)\n>       Checking.check_status_code(response_db_list, 200)\n\ntests_api/test_bd.py:294: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [401]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 401\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 401",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f1c3bba5d30>\n\n    @allure.title('POST db_list')\n    def test_post_db_list(self):\n        response_db_list = API.post_db_list(token=TestPOST.token)\n>       Checking.check_status_code(response_db_list, 200)\n\ntests_api/test_bd.py:294: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [401]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 401\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "post_db_list",
      "time" : {
        "start" : 1741481796829,
        "stop" : 1741481797135,
        "duration" : 306
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /db_list",
        "time" : {
          "start" : 1741481797134,
          "stop" : 1741481797134,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1741481797134,
          "stop" : 1741481797135,
          "duration" : 1
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': '27d312ce-f8ae-4cd2-9417-ceac157e9ebb'}",
          "time" : {
            "start" : 1741481797134,
            "stop" : 1741481797134,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: None",
          "time" : {
            "start" : 1741481797134,
            "stop" : 1741481797134,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1741481797135,
          "stop" : 1741481797135,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 401",
          "time" : {
            "start" : 1741481797135,
            "stop" : 1741481797135,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: {\n    \"content\": \"msg[5]: unauthenticated\"\n}\n",
          "time" : {
            "start" : 1741481797135,
            "stop" : 1741481797135,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 7,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 200 == Response status code: 401",
      "time" : {
        "start" : 1741481797135,
        "stop" : 1741481797135,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 401\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 9,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "fv-az2035-376"
  }, {
    "name" : "thread",
    "value" : "2465-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 11,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 113,
        "unknown" : 0,
        "total" : 124
      },
      "items" : [ {
        "uid" : "7ee209cfa9976946",
        "reportUrl" : "https://lambotik.github.io/Oblache/335//#testresult/7ee209cfa9976946",
        "status" : "passed",
        "time" : {
          "start" : 1741395119990,
          "stop" : 1741395120314,
          "duration" : 324
        }
      }, {
        "uid" : "7ad4676d526cc248",
        "reportUrl" : "https://lambotik.github.io/Oblache/334//#testresult/7ad4676d526cc248",
        "status" : "passed",
        "time" : {
          "start" : 1741309519984,
          "stop" : 1741309520508,
          "duration" : 524
        }
      }, {
        "uid" : "f72f692901031fff",
        "reportUrl" : "https://lambotik.github.io/Oblache/23//#testresult/f72f692901031fff",
        "status" : "passed",
        "time" : {
          "start" : 1741273255710,
          "stop" : 1741273256228,
          "duration" : 518
        }
      }, {
        "uid" : "de656ce46cca13bc",
        "reportUrl" : "https://lambotik.github.io/Oblache/22//#testresult/de656ce46cca13bc",
        "status" : "passed",
        "time" : {
          "start" : 1741273011353,
          "stop" : 1741273011744,
          "duration" : 391
        }
      }, {
        "uid" : "38f5886efd6c0ea8",
        "reportUrl" : "https://lambotik.github.io/Oblache/21//#testresult/38f5886efd6c0ea8",
        "status" : "passed",
        "time" : {
          "start" : 1741272398585,
          "stop" : 1741272398897,
          "duration" : 312
        }
      }, {
        "uid" : "9a15947fa3f53352",
        "reportUrl" : "https://lambotik.github.io/Oblache/20//#testresult/9a15947fa3f53352",
        "status" : "passed",
        "time" : {
          "start" : 1741271072305,
          "stop" : 1741271072827,
          "duration" : 522
        }
      }, {
        "uid" : "790938f80a2fda5a",
        "reportUrl" : "https://lambotik.github.io/Oblache/19//#testresult/790938f80a2fda5a",
        "status" : "passed",
        "time" : {
          "start" : 1741270253892,
          "stop" : 1741270254421,
          "duration" : 529
        }
      }, {
        "uid" : "aaa312ac90e444ab",
        "reportUrl" : "https://lambotik.github.io/Oblache/333//#testresult/aaa312ac90e444ab",
        "status" : "passed",
        "time" : {
          "start" : 1741223073760,
          "stop" : 1741223074062,
          "duration" : 302
        }
      }, {
        "uid" : "c291d5fbf1eaa74e",
        "reportUrl" : "https://lambotik.github.io/Oblache/332//#testresult/c291d5fbf1eaa74e",
        "status" : "passed",
        "time" : {
          "start" : 1741136674272,
          "stop" : 1741136674591,
          "duration" : 319
        }
      }, {
        "uid" : "e417ef66036fc1d8",
        "reportUrl" : "https://lambotik.github.io/Oblache/331//#testresult/e417ef66036fc1d8",
        "status" : "passed",
        "time" : {
          "start" : 1741050270889,
          "stop" : 1741050271198,
          "duration" : 309
        }
      }, {
        "uid" : "b0f0215bf65d66e2",
        "reportUrl" : "https://lambotik.github.io/Oblache/330//#testresult/b0f0215bf65d66e2",
        "status" : "passed",
        "time" : {
          "start" : 1740963960651,
          "stop" : 1740963961017,
          "duration" : 366
        }
      }, {
        "uid" : "994886c6a65a2915",
        "reportUrl" : "https://lambotik.github.io/Oblache/329//#testresult/994886c6a65a2915",
        "status" : "passed",
        "time" : {
          "start" : 1740877660206,
          "stop" : 1740877660570,
          "duration" : 364
        }
      }, {
        "uid" : "61f1ef40b3ebadd8",
        "reportUrl" : "https://lambotik.github.io/Oblache/328//#testresult/61f1ef40b3ebadd8",
        "status" : "passed",
        "time" : {
          "start" : 1740791297082,
          "stop" : 1740791297390,
          "duration" : 308
        }
      }, {
        "uid" : "dc20329f7ad11e96",
        "reportUrl" : "https://lambotik.github.io/Oblache/327//#testresult/dc20329f7ad11e96",
        "status" : "passed",
        "time" : {
          "start" : 1740704628401,
          "stop" : 1740704628711,
          "duration" : 310
        }
      }, {
        "uid" : "610fbc58374430b4",
        "reportUrl" : "https://lambotik.github.io/Oblache/326//#testresult/610fbc58374430b4",
        "status" : "passed",
        "time" : {
          "start" : 1740618205477,
          "stop" : 1740618205837,
          "duration" : 360
        }
      }, {
        "uid" : "7fe10b213a261ecd",
        "reportUrl" : "https://lambotik.github.io/Oblache/325//#testresult/7fe10b213a261ecd",
        "status" : "passed",
        "time" : {
          "start" : 1740531809480,
          "stop" : 1740531809798,
          "duration" : 318
        }
      }, {
        "uid" : "90872e348867e5cd",
        "reportUrl" : "https://lambotik.github.io/Oblache/324//#testresult/90872e348867e5cd",
        "status" : "passed",
        "time" : {
          "start" : 1740445417921,
          "stop" : 1740445418298,
          "duration" : 377
        }
      }, {
        "uid" : "38ad2dab343043f7",
        "reportUrl" : "https://lambotik.github.io/Oblache/323//#testresult/38ad2dab343043f7",
        "status" : "passed",
        "time" : {
          "start" : 1740359084519,
          "stop" : 1740359085038,
          "duration" : 519
        }
      }, {
        "uid" : "fc4f91d02dfe2199",
        "reportUrl" : "https://lambotik.github.io/Oblache/322//#testresult/fc4f91d02dfe2199",
        "status" : "passed",
        "time" : {
          "start" : 1740272814820,
          "stop" : 1740272815332,
          "duration" : 512
        }
      }, {
        "uid" : "cf80d59414001959",
        "reportUrl" : "https://lambotik.github.io/Oblache/321//#testresult/cf80d59414001959",
        "status" : "passed",
        "time" : {
          "start" : 1740186039748,
          "stop" : 1740186040066,
          "duration" : 318
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "d185d8d001266cbb.json",
  "parameterValues" : [ ]
}