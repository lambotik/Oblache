{
  "uid" : "a42f55ab3900aea2",
  "name" : "POST change_password_with_wrong_data",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_change_password_with_wrong_data",
  "historyId" : "c8dcf68e64482196ee23ebcfdd062055",
  "time" : {
    "start" : 1741481798098,
    "stop" : 1741481798399,
    "duration" : 301
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 401",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f1c3bba61e0>\n\n    @allure.title('POST change_password_with_wrong_data')\n    def test_post_change_password_with_wrong_data(self):\n        result = API.post_change_password(\n            token=TestPOST.token,\n            old_password='123456',\n            new_password='123456')\n>       Checking.check_status_code(result, 400)\n\ntests_api/test_bd.py:340: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [401]>, status_code = 400\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 401\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 401",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f1c3bba61e0>\n\n    @allure.title('POST change_password_with_wrong_data')\n    def test_post_change_password_with_wrong_data(self):\n        result = API.post_change_password(\n            token=TestPOST.token,\n            old_password='123456',\n            new_password='123456')\n>       Checking.check_status_code(result, 400)\n\ntests_api/test_bd.py:340: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [401]>, status_code = 400\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 401\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "post_change_password",
      "time" : {
        "start" : 1741481798098,
        "stop" : 1741481798399,
        "duration" : 301
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /password_update",
        "time" : {
          "start" : 1741481798398,
          "stop" : 1741481798398,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1741481798398,
          "stop" : 1741481798399,
          "duration" : 1
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': '27d312ce-f8ae-4cd2-9417-ceac157e9ebb'}",
          "time" : {
            "start" : 1741481798398,
            "stop" : 1741481798398,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: {\"current_password\": old_password, \"new_password\": new_password}",
          "time" : {
            "start" : 1741481798399,
            "stop" : 1741481798399,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1741481798399,
          "stop" : 1741481798399,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 401",
          "time" : {
            "start" : 1741481798399,
            "stop" : 1741481798399,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: {\n    \"content\": \"msg[5]: unauthenticated\"\n}\n",
          "time" : {
            "start" : 1741481798399,
            "stop" : 1741481798399,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 7,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 400 == Response status code: 401",
      "time" : {
        "start" : 1741481798399,
        "stop" : 1741481798399,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 401\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 9,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "fv-az2035-376"
  }, {
    "name" : "thread",
    "value" : "2465-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 11,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 113,
        "unknown" : 0,
        "total" : 124
      },
      "items" : [ {
        "uid" : "e292330b8a5a817d",
        "reportUrl" : "https://lambotik.github.io/Oblache/335//#testresult/e292330b8a5a817d",
        "status" : "passed",
        "time" : {
          "start" : 1741395122389,
          "stop" : 1741395122711,
          "duration" : 322
        }
      }, {
        "uid" : "eb6677d0a5d13e4a",
        "reportUrl" : "https://lambotik.github.io/Oblache/334//#testresult/eb6677d0a5d13e4a",
        "status" : "passed",
        "time" : {
          "start" : 1741309523592,
          "stop" : 1741309524121,
          "duration" : 529
        }
      }, {
        "uid" : "39b2a34b2be648c1",
        "reportUrl" : "https://lambotik.github.io/Oblache/23//#testresult/39b2a34b2be648c1",
        "status" : "passed",
        "time" : {
          "start" : 1741273259359,
          "stop" : 1741273259879,
          "duration" : 520
        }
      }, {
        "uid" : "a6c8a4c1bac18ea8",
        "reportUrl" : "https://lambotik.github.io/Oblache/22//#testresult/a6c8a4c1bac18ea8",
        "status" : "passed",
        "time" : {
          "start" : 1741273013592,
          "stop" : 1741273013901,
          "duration" : 309
        }
      }, {
        "uid" : "5c5dd5ecc1c62928",
        "reportUrl" : "https://lambotik.github.io/Oblache/21//#testresult/5c5dd5ecc1c62928",
        "status" : "passed",
        "time" : {
          "start" : 1741272400745,
          "stop" : 1741272401066,
          "duration" : 321
        }
      }, {
        "uid" : "3ffd603f86e40318",
        "reportUrl" : "https://lambotik.github.io/Oblache/20//#testresult/3ffd603f86e40318",
        "status" : "passed",
        "time" : {
          "start" : 1741271076048,
          "stop" : 1741271076580,
          "duration" : 532
        }
      }, {
        "uid" : "6ac4dd9a5f5ef896",
        "reportUrl" : "https://lambotik.github.io/Oblache/19//#testresult/6ac4dd9a5f5ef896",
        "status" : "passed",
        "time" : {
          "start" : 1741270257547,
          "stop" : 1741270258062,
          "duration" : 515
        }
      }, {
        "uid" : "73945e07f6bfc834",
        "reportUrl" : "https://lambotik.github.io/Oblache/333//#testresult/73945e07f6bfc834",
        "status" : "passed",
        "time" : {
          "start" : 1741223075938,
          "stop" : 1741223076242,
          "duration" : 304
        }
      }, {
        "uid" : "23f4cf5c47f952c8",
        "reportUrl" : "https://lambotik.github.io/Oblache/332//#testresult/23f4cf5c47f952c8",
        "status" : "passed",
        "time" : {
          "start" : 1741136676472,
          "stop" : 1741136676788,
          "duration" : 316
        }
      }, {
        "uid" : "d10dfac221b03504",
        "reportUrl" : "https://lambotik.github.io/Oblache/331//#testresult/d10dfac221b03504",
        "status" : "passed",
        "time" : {
          "start" : 1741050273050,
          "stop" : 1741050273364,
          "duration" : 314
        }
      }, {
        "uid" : "3c004076772589ea",
        "reportUrl" : "https://lambotik.github.io/Oblache/330//#testresult/3c004076772589ea",
        "status" : "passed",
        "time" : {
          "start" : 1740963963251,
          "stop" : 1740963963629,
          "duration" : 378
        }
      }, {
        "uid" : "ae251c438b6228b4",
        "reportUrl" : "https://lambotik.github.io/Oblache/329//#testresult/ae251c438b6228b4",
        "status" : "passed",
        "time" : {
          "start" : 1740877662795,
          "stop" : 1740877663161,
          "duration" : 366
        }
      }, {
        "uid" : "ebd30d757ef799eb",
        "reportUrl" : "https://lambotik.github.io/Oblache/328//#testresult/ebd30d757ef799eb",
        "status" : "passed",
        "time" : {
          "start" : 1740791299260,
          "stop" : 1740791299566,
          "duration" : 306
        }
      }, {
        "uid" : "3595b8dba64292b4",
        "reportUrl" : "https://lambotik.github.io/Oblache/327//#testresult/3595b8dba64292b4",
        "status" : "passed",
        "time" : {
          "start" : 1740704630567,
          "stop" : 1740704630868,
          "duration" : 301
        }
      }, {
        "uid" : "61fc2e7f774633c",
        "reportUrl" : "https://lambotik.github.io/Oblache/326//#testresult/61fc2e7f774633c",
        "status" : "passed",
        "time" : {
          "start" : 1740618208016,
          "stop" : 1740618208381,
          "duration" : 365
        }
      }, {
        "uid" : "bbd2d13e7a0be116",
        "reportUrl" : "https://lambotik.github.io/Oblache/325//#testresult/bbd2d13e7a0be116",
        "status" : "passed",
        "time" : {
          "start" : 1740531811724,
          "stop" : 1740531812043,
          "duration" : 319
        }
      }, {
        "uid" : "86809c2d2c3f4759",
        "reportUrl" : "https://lambotik.github.io/Oblache/324//#testresult/86809c2d2c3f4759",
        "status" : "passed",
        "time" : {
          "start" : 1740445420520,
          "stop" : 1740445420897,
          "duration" : 377
        }
      }, {
        "uid" : "c98969f2b1a67743",
        "reportUrl" : "https://lambotik.github.io/Oblache/323//#testresult/c98969f2b1a67743",
        "status" : "passed",
        "time" : {
          "start" : 1740359088092,
          "stop" : 1740359088596,
          "duration" : 504
        }
      }, {
        "uid" : "d4be59e7cb4020e4",
        "reportUrl" : "https://lambotik.github.io/Oblache/322//#testresult/d4be59e7cb4020e4",
        "status" : "passed",
        "time" : {
          "start" : 1740272818435,
          "stop" : 1740272818954,
          "duration" : 519
        }
      }, {
        "uid" : "8a628ce8d6fb814d",
        "reportUrl" : "https://lambotik.github.io/Oblache/321//#testresult/8a628ce8d6fb814d",
        "status" : "passed",
        "time" : {
          "start" : 1740186042183,
          "stop" : 1740186042504,
          "duration" : 321
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "a42f55ab3900aea2.json",
  "parameterValues" : [ ]
}