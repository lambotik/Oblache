{
  "uid" : "bfa335547000e9b5",
  "name" : "POST create_docker_container_without_token",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_create_docker_container_without_token",
  "historyId" : "f833256fb8ca072b26357ead25c8b408",
  "time" : {
    "start" : 1747185061094,
    "stop" : 1747185061597,
    "duration" : 503
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 400",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f26174f8320>\n\n    @allure.title('POST create_docker_container_without_token')\n    def test_post_create_docker_container_without_token(self):\n        result = API.post_create_docker_container(token='incorrect_token')\n>       Checking.check_status_code(result, 401)\n\ntests_api/test_bd.py:404: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 401\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 400\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 400",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f26174f8320>\n\n    @allure.title('POST create_docker_container_without_token')\n    def test_post_create_docker_container_without_token(self):\n        result = API.post_create_docker_container(token='incorrect_token')\n>       Checking.check_status_code(result, 401)\n\ntests_api/test_bd.py:404: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 401\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 400\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "post_create_docker_container",
      "time" : {
        "start" : 1747185061094,
        "stop" : 1747185061597,
        "duration" : 503
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /container_create",
        "time" : {
          "start" : 1747185061596,
          "stop" : 1747185061596,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1747185061596,
          "stop" : 1747185061596,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': {'incorrect_token'}}",
          "time" : {
            "start" : 1747185061596,
            "stop" : 1747185061596,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: {\"docker_image\": \"nginx\", \"int_ports\": \"80\", \"env\": 3, \"region\": 3}",
          "time" : {
            "start" : 1747185061596,
            "stop" : 1747185061596,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1747185061596,
          "stop" : 1747185061596,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 400",
          "time" : {
            "start" : 1747185061596,
            "stop" : 1747185061596,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: {\n    \"msg_code\": -1,\n    \"msg\": \"endpoint is disabled\"\n}\n",
          "time" : {
            "start" : 1747185061596,
            "stop" : 1747185061596,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 7,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 401 == Response status code: 400",
      "time" : {
        "start" : 1747185061597,
        "stop" : 1747185061597,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 400\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 9,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "pkrvmberfyhpb9w"
  }, {
    "name" : "thread",
    "value" : "2574-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 151,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 36,
        "unknown" : 0,
        "total" : 187
      },
      "items" : [ {
        "uid" : "6bb0db43d00ec903",
        "reportUrl" : "https://lambotik.github.io/Oblache/401//#testresult/6bb0db43d00ec903",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1747098728656,
          "stop" : 1747098729012,
          "duration" : 356
        }
      }, {
        "uid" : "837e47ba713e207f",
        "reportUrl" : "https://lambotik.github.io/Oblache/400//#testresult/837e47ba713e207f",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1747012432695,
          "stop" : 1747012433108,
          "duration" : 413
        }
      }, {
        "uid" : "dd0279cd87b47cbe",
        "reportUrl" : "https://lambotik.github.io/Oblache/399//#testresult/dd0279cd87b47cbe",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1746926132738,
          "stop" : 1746926133238,
          "duration" : 500
        }
      }, {
        "uid" : "1454a8d34ea2e022",
        "reportUrl" : "https://lambotik.github.io/Oblache/398//#testresult/1454a8d34ea2e022",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1746839289980,
          "stop" : 1746839290312,
          "duration" : 332
        }
      }, {
        "uid" : "cec3b5e4e3ffdc56",
        "reportUrl" : "https://lambotik.github.io/Oblache/397//#testresult/cec3b5e4e3ffdc56",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1746753043449,
          "stop" : 1746753043758,
          "duration" : 309
        }
      }, {
        "uid" : "bc1f617d0ab232bc",
        "reportUrl" : "https://lambotik.github.io/Oblache/396//#testresult/bc1f617d0ab232bc",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1746666697642,
          "stop" : 1746666698164,
          "duration" : 522
        }
      }, {
        "uid" : "6faaf43fd27295fc",
        "reportUrl" : "https://lambotik.github.io/Oblache/395//#testresult/6faaf43fd27295fc",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1746580267655,
          "stop" : 1746580268156,
          "duration" : 501
        }
      }, {
        "uid" : "732dc5355dcff89",
        "reportUrl" : "https://lambotik.github.io/Oblache/394//#testresult/732dc5355dcff89",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1746493834868,
          "stop" : 1746493835185,
          "duration" : 317
        }
      }, {
        "uid" : "5b5e38853b4a475e",
        "reportUrl" : "https://lambotik.github.io/Oblache/393//#testresult/5b5e38853b4a475e",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1746407589532,
          "stop" : 1746407589888,
          "duration" : 356
        }
      }, {
        "uid" : "253d06799d7eb74b",
        "reportUrl" : "https://lambotik.github.io/Oblache/389//#testresult/253d06799d7eb74b",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1746062152415,
          "stop" : 1746062152727,
          "duration" : 312
        }
      }, {
        "uid" : "43680bcbf3c90491",
        "reportUrl" : "https://lambotik.github.io/Oblache/388//#testresult/43680bcbf3c90491",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1745975385531,
          "stop" : 1745975385843,
          "duration" : 312
        }
      }, {
        "uid" : "95c053b2cfdab916",
        "reportUrl" : "https://lambotik.github.io/Oblache/387//#testresult/95c053b2cfdab916",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1745888962123,
          "stop" : 1745888962484,
          "duration" : 361
        }
      }, {
        "uid" : "a0d56a29047f3d9c",
        "reportUrl" : "https://lambotik.github.io/Oblache/386//#testresult/a0d56a29047f3d9c",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1745802692539,
          "stop" : 1745802693061,
          "duration" : 522
        }
      }, {
        "uid" : "a637348382fb99d3",
        "reportUrl" : "https://lambotik.github.io/Oblache/385//#testresult/a637348382fb99d3",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1745716416184,
          "stop" : 1745716416694,
          "duration" : 510
        }
      }, {
        "uid" : "8ddc7edc576ac5d7",
        "reportUrl" : "https://lambotik.github.io/Oblache/384//#testresult/8ddc7edc576ac5d7",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1745629609820,
          "stop" : 1745629610225,
          "duration" : 405
        }
      }, {
        "uid" : "7060262c6dd10c75",
        "reportUrl" : "https://lambotik.github.io/Oblache/383//#testresult/7060262c6dd10c75",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1745543366408,
          "stop" : 1745543366937,
          "duration" : 529
        }
      }, {
        "uid" : "668a89bcfe6adb98",
        "reportUrl" : "https://lambotik.github.io/Oblache/382//#testresult/668a89bcfe6adb98",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1745456955520,
          "stop" : 1745456955891,
          "duration" : 371
        }
      }, {
        "uid" : "eaeaf8729ee34c6f",
        "reportUrl" : "https://lambotik.github.io/Oblache/381//#testresult/eaeaf8729ee34c6f",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1745370562957,
          "stop" : 1745370563255,
          "duration" : 298
        }
      }, {
        "uid" : "dc320f10e30cefb7",
        "reportUrl" : "https://lambotik.github.io/Oblache/380//#testresult/dc320f10e30cefb7",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1745284135242,
          "stop" : 1745284135748,
          "duration" : 506
        }
      }, {
        "uid" : "31140964dcb405b7",
        "reportUrl" : "https://lambotik.github.io/Oblache/379//#testresult/31140964dcb405b7",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1745197952755,
          "stop" : 1745197953264,
          "duration" : 509
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "bfa335547000e9b5.json",
  "parameterValues" : [ ]
}