{
  "uid" : "da860e878eddc6f1",
  "name" : "POST checking ports_len positive",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_checking_ports_len_positive",
  "historyId" : "c6f631852f230d7f46e21d1143ab0d56",
  "time" : {
    "start" : 1749863467571,
    "stop" : 1749863468059,
    "duration" : 488
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 502",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f103c621070>\n\n    @allure.title('POST checking ports_len positive')\n    def test_post_checking_ports_len_positive(self):\n        result = API.post_create_docker_container_checking_ports(\n            token=TestPOST.token,\n            port_len=\"80-89\")\n>       Checking.check_status_code(result, 201)\n\ntests_api/test_bd.py:374: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 201\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 502",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f103c621070>\n\n    @allure.title('POST checking ports_len positive')\n    def test_post_checking_ports_len_positive(self):\n        result = API.post_create_docker_container_checking_ports(\n            token=TestPOST.token,\n            port_len=\"80-89\")\n>       Checking.check_status_code(result, 201)\n\ntests_api/test_bd.py:374: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 201\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "post_create_docker_container",
      "time" : {
        "start" : 1749863467571,
        "stop" : 1749863468058,
        "duration" : 487
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /container_create",
        "time" : {
          "start" : 1749863468058,
          "stop" : 1749863468058,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1749863468058,
          "stop" : 1749863468058,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': {None}}",
          "time" : {
            "start" : 1749863468058,
            "stop" : 1749863468058,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: {\"docker_image\": \"nginx\", \"int_ports\": f\"80-89\", \"env\": 3, \"region\": 3}",
          "time" : {
            "start" : 1749863468058,
            "stop" : 1749863468058,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1749863468058,
          "stop" : 1749863468058,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 502",
          "time" : {
            "start" : 1749863468058,
            "stop" : 1749863468058,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
          "time" : {
            "start" : 1749863468058,
            "stop" : 1749863468058,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 7,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 201 == Response status code: 502",
      "time" : {
        "start" : 1749863468058,
        "stop" : 1749863468058,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 502\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 9,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "pkrvmxyh4eaekms"
  }, {
    "name" : "thread",
    "value" : "2638-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 182,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 36,
        "unknown" : 0,
        "total" : 218
      },
      "items" : [ {
        "uid" : "c154909344d6936",
        "reportUrl" : "https://lambotik.github.io/Oblache/432//#testresult/c154909344d6936",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1749777233460,
          "stop" : 1749777233738,
          "duration" : 278
        }
      }, {
        "uid" : "ec6fc54aa137b7df",
        "reportUrl" : "https://lambotik.github.io/Oblache/431//#testresult/ec6fc54aa137b7df",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1749690772990,
          "stop" : 1749690773347,
          "duration" : 357
        }
      }, {
        "uid" : "1ac1494bf955da9e",
        "reportUrl" : "https://lambotik.github.io/Oblache/430//#testresult/1ac1494bf955da9e",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1749604426904,
          "stop" : 1749604427245,
          "duration" : 341
        }
      }, {
        "uid" : "3a7c4705027bc836",
        "reportUrl" : "https://lambotik.github.io/Oblache/429//#testresult/3a7c4705027bc836",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1749518064256,
          "stop" : 1749518064741,
          "duration" : 485
        }
      }, {
        "uid" : "84a389e301f731b6",
        "reportUrl" : "https://lambotik.github.io/Oblache/428//#testresult/84a389e301f731b6",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1749431819014,
          "stop" : 1749431819352,
          "duration" : 338
        }
      }, {
        "uid" : "96e6cc8b3028053d",
        "reportUrl" : "https://lambotik.github.io/Oblache/427//#testresult/96e6cc8b3028053d",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1749345571624,
          "stop" : 1749345571929,
          "duration" : 305
        }
      }, {
        "uid" : "7d40a41add1a5b88",
        "reportUrl" : "https://lambotik.github.io/Oblache/426//#testresult/7d40a41add1a5b88",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1749258712642,
          "stop" : 1749258712959,
          "duration" : 317
        }
      }, {
        "uid" : "4cae54f4ed1058ec",
        "reportUrl" : "https://lambotik.github.io/Oblache/425//#testresult/4cae54f4ed1058ec",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1749172356011,
          "stop" : 1749172356405,
          "duration" : 394
        }
      }, {
        "uid" : "a8fa571d0d7b4b65",
        "reportUrl" : "https://lambotik.github.io/Oblache/424//#testresult/a8fa571d0d7b4b65",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1749085947687,
          "stop" : 1749085948006,
          "duration" : 319
        }
      }, {
        "uid" : "9df4896935d6688b",
        "reportUrl" : "https://lambotik.github.io/Oblache/423//#testresult/9df4896935d6688b",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1748999594337,
          "stop" : 1748999594641,
          "duration" : 304
        }
      }, {
        "uid" : "3b31d66f5635a68d",
        "reportUrl" : "https://lambotik.github.io/Oblache/422//#testresult/3b31d66f5635a68d",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1748913232879,
          "stop" : 1748913233298,
          "duration" : 419
        }
      }, {
        "uid" : "89302faf985c716f",
        "reportUrl" : "https://lambotik.github.io/Oblache/421//#testresult/89302faf985c716f",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1748826913448,
          "stop" : 1748826913923,
          "duration" : 475
        }
      }, {
        "uid" : "e5c21bab09f8e480",
        "reportUrl" : "https://lambotik.github.io/Oblache/420//#testresult/e5c21bab09f8e480",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 504",
        "time" : {
          "start" : 1748743941558,
          "stop" : 1748744002147,
          "duration" : 60589
        }
      }, {
        "uid" : "2d0e96bd23d4c0e9",
        "reportUrl" : "https://lambotik.github.io/Oblache/419//#testresult/2d0e96bd23d4c0e9",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 504",
        "time" : {
          "start" : 1748656651551,
          "stop" : 1748656712059,
          "duration" : 60508
        }
      }, {
        "uid" : "158939a1f8b53dd7",
        "reportUrl" : "https://lambotik.github.io/Oblache/418//#testresult/158939a1f8b53dd7",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 504",
        "time" : {
          "start" : 1748570242073,
          "stop" : 1748570302406,
          "duration" : 60333
        }
      }, {
        "uid" : "ff05ef60bdc2d38c",
        "reportUrl" : "https://lambotik.github.io/Oblache/417//#testresult/ff05ef60bdc2d38c",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1748481141823,
          "stop" : 1748481142190,
          "duration" : 367
        }
      }, {
        "uid" : "841c8448baf1a4f9",
        "reportUrl" : "https://lambotik.github.io/Oblache/416//#testresult/841c8448baf1a4f9",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1748394749707,
          "stop" : 1748394750023,
          "duration" : 316
        }
      }, {
        "uid" : "4d4669e9c29aecdd",
        "reportUrl" : "https://lambotik.github.io/Oblache/415//#testresult/4d4669e9c29aecdd",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1748308259946,
          "stop" : 1748308260252,
          "duration" : 306
        }
      }, {
        "uid" : "4b75b93d1f3bbe6f",
        "reportUrl" : "https://lambotik.github.io/Oblache/414//#testresult/4b75b93d1f3bbe6f",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1748222012355,
          "stop" : 1748222012666,
          "duration" : 311
        }
      }, {
        "uid" : "17caf7cb5f78063a",
        "reportUrl" : "https://lambotik.github.io/Oblache/413//#testresult/17caf7cb5f78063a",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1748135891328,
          "stop" : 1748135891683,
          "duration" : 355
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "da860e878eddc6f1.json",
  "parameterValues" : [ ]
}