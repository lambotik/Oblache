{
  "uid" : "e7273a3bf9b8f06d",
  "name" : "POST db_list_with_filter",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_db_list_with_filter",
  "historyId" : "1404cf75602dc5c195df0f6e9ffb5ba3",
  "time" : {
    "start" : 1738460632986,
    "stop" : 1738460693373,
    "duration" : 60387
  },
  "status" : "skipped",
  "statusMessage" : "XFAIL There are databases that need to be deleted manually.\n\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f7753949b20>\n\n    @allure.title('POST db_list_with_filter')\n    @pytest.mark.xfail(reason='There are databases that need to be deleted manually.')\n    def test_post_db_list_with_filter(self):\n        list_db = API.post_db_list(token=TestPOST.token)\n>       json_list_db = json.loads(list_db.text)\n\ntests_api/test_bd.py:305: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/json/decoder.py:338: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f7754acae10>\ns = '<html>\\r\\n<head><title>504 Gateway Time-out</title></head>\\r\\n<body>\\r\\n<center><h1>504 Gateway Time-out</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/json/decoder.py:356: JSONDecodeError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "skipped",
    "statusMessage" : "XFAIL There are databases that need to be deleted manually.\n\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f7753949b20>\n\n    @allure.title('POST db_list_with_filter')\n    @pytest.mark.xfail(reason='There are databases that need to be deleted manually.')\n    def test_post_db_list_with_filter(self):\n        list_db = API.post_db_list(token=TestPOST.token)\n>       json_list_db = json.loads(list_db.text)\n\ntests_api/test_bd.py:305: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/json/decoder.py:338: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f7754acae10>\ns = '<html>\\r\\n<head><title>504 Gateway Time-out</title></head>\\r\\n<body>\\r\\n<center><h1>504 Gateway Time-out</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/json/decoder.py:356: JSONDecodeError",
    "steps" : [ {
      "name" : "post_db_list",
      "time" : {
        "start" : 1738460632986,
        "stop" : 1738460693373,
        "duration" : 60387
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /db_list",
        "time" : {
          "start" : 1738460693373,
          "stop" : 1738460693373,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1738460693373,
          "stop" : 1738460693373,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Url: https://dbend.areso.pro/db_list",
          "time" : {
            "start" : 1738460693373,
            "stop" : 1738460693373,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': 'None'}",
          "time" : {
            "start" : 1738460693373,
            "stop" : 1738460693373,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: None",
          "time" : {
            "start" : 1738460693373,
            "stop" : 1738460693373,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 3,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1738460693373,
          "stop" : 1738460693373,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 504",
          "time" : {
            "start" : 1738460693373,
            "stop" : 1738460693373,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: <html>\r\n<head><title>504 Gateway Time-out</title></head>\r\n<body>\r\n<center><h1>504 Gateway Time-out</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
          "time" : {
            "start" : 1738460693373,
            "stop" : 1738460693373,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 8,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 9,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.xfail(reason='There are databases that need to be deleted manually.')"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "fv-az1692-600"
  }, {
    "name" : "thread",
    "value" : "2455-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 83,
        "passed" : 1,
        "unknown" : 0,
        "total" : 84
      },
      "items" : [ {
        "uid" : "54dbf14d98892ce2",
        "reportUrl" : "https://lambotik.github.io/Oblache/300//#testresult/54dbf14d98892ce2",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1738371867078,
          "stop" : 1738371868104,
          "duration" : 1026
        }
      }, {
        "uid" : "1f211a08cc96d3e7",
        "reportUrl" : "https://lambotik.github.io/Oblache/299//#testresult/1f211a08cc96d3e7",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1738350578600,
          "stop" : 1738350579245,
          "duration" : 645
        }
      }, {
        "uid" : "c88e97216bcee970",
        "reportUrl" : "https://lambotik.github.io/Oblache/298//#testresult/c88e97216bcee970",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1738198769081,
          "stop" : 1738198769699,
          "duration" : 618
        }
      }, {
        "uid" : "596554e4f0ad0bf9",
        "reportUrl" : "https://lambotik.github.io/Oblache/297//#testresult/596554e4f0ad0bf9",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1738112423439,
          "stop" : 1738112424055,
          "duration" : 616
        }
      }, {
        "uid" : "663ea8c2a2efac13",
        "reportUrl" : "https://lambotik.github.io/Oblache/296//#testresult/663ea8c2a2efac13",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1738026035654,
          "stop" : 1738026036320,
          "duration" : 666
        }
      }, {
        "uid" : "81a4c1ad3af10e9",
        "reportUrl" : "https://lambotik.github.io/Oblache/295//#testresult/81a4c1ad3af10e9",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1737939714037,
          "stop" : 1737939714807,
          "duration" : 770
        }
      }, {
        "uid" : "e2499b8d7c6d254d",
        "reportUrl" : "https://lambotik.github.io/Oblache/294//#testresult/e2499b8d7c6d254d",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1737853362256,
          "stop" : 1737853363287,
          "duration" : 1031
        }
      }, {
        "uid" : "50525db0b7507bcf",
        "reportUrl" : "https://lambotik.github.io/Oblache/293//#testresult/50525db0b7507bcf",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1737766661195,
          "stop" : 1737766662236,
          "duration" : 1041
        }
      }, {
        "uid" : "d5236a26a145f9b6",
        "reportUrl" : "https://lambotik.github.io/Oblache/292//#testresult/d5236a26a145f9b6",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1737680497453,
          "stop" : 1737680498500,
          "duration" : 1047
        }
      }, {
        "uid" : "e63f19c89b60f34a",
        "reportUrl" : "https://lambotik.github.io/Oblache/291//#testresult/e63f19c89b60f34a",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1737594028778,
          "stop" : 1737594029396,
          "duration" : 618
        }
      }, {
        "uid" : "1cece96a25790558",
        "reportUrl" : "https://lambotik.github.io/Oblache/290//#testresult/1cece96a25790558",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1737507713348,
          "stop" : 1737507713984,
          "duration" : 636
        }
      }, {
        "uid" : "7cdfe75e3f4af317",
        "reportUrl" : "https://lambotik.github.io/Oblache/289//#testresult/7cdfe75e3f4af317",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1737421195453,
          "stop" : 1737421196196,
          "duration" : 743
        }
      }, {
        "uid" : "7168a2f343ef1dd5",
        "reportUrl" : "https://lambotik.github.io/Oblache/288//#testresult/7168a2f343ef1dd5",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1737334887059,
          "stop" : 1737334887791,
          "duration" : 732
        }
      }, {
        "uid" : "1f62b2f27402ce13",
        "reportUrl" : "https://lambotik.github.io/Oblache/287//#testresult/1f62b2f27402ce13",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1737248718344,
          "stop" : 1737248719384,
          "duration" : 1040
        }
      }, {
        "uid" : "bd03bae7fc58a973",
        "reportUrl" : "https://lambotik.github.io/Oblache/286//#testresult/bd03bae7fc58a973",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1737161908581,
          "stop" : 1737161909296,
          "duration" : 715
        }
      }, {
        "uid" : "82f368fbbf1071ae",
        "reportUrl" : "https://lambotik.github.io/Oblache/285//#testresult/82f368fbbf1071ae",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1737075609789,
          "stop" : 1737075610822,
          "duration" : 1033
        }
      }, {
        "uid" : "3d242e918d8eeb9a",
        "reportUrl" : "https://lambotik.github.io/Oblache/284//#testresult/3d242e918d8eeb9a",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1736989209676,
          "stop" : 1736989210289,
          "duration" : 613
        }
      }, {
        "uid" : "ac0f068b1d910126",
        "reportUrl" : "https://lambotik.github.io/Oblache/283//#testresult/ac0f068b1d910126",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1736902868276,
          "stop" : 1736902868913,
          "duration" : 637
        }
      }, {
        "uid" : "1001a249f9de2e89",
        "reportUrl" : "https://lambotik.github.io/Oblache/282//#testresult/1001a249f9de2e89",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1736816358139,
          "stop" : 1736816359163,
          "duration" : 1024
        }
      }, {
        "uid" : "6d5241f353214631",
        "reportUrl" : "https://lambotik.github.io/Oblache/281//#testresult/6d5241f353214631",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1736730344560,
          "stop" : 1736730345206,
          "duration" : 646
        }
      } ]
    },
    "tags" : [ "@pytest.mark.xfail(reason='There are databases that need to be deleted manually.')" ]
  },
  "source" : "e7273a3bf9b8f06d.json",
  "parameterValues" : [ ]
}