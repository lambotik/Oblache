{
  "uid" : "45b8a292a56e243a",
  "name" : "GET tos.",
  "fullName" : "tests_api.test_bd.TestGET#test_tos",
  "historyId" : "1bd6d480cd29dd301e6e77cd0f9194c6",
  "time" : {
    "start" : 1738458639765,
    "stop" : 1738458700151,
    "duration" : 60386
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 504",
  "statusTrace" : "self = <tests_api.test_bd.TestGET object at 0x7f7753948230>\n\n    @allure.title('GET tos.')\n    def test_tos(self):\n        response = API.get_tos(token=TestGET.token)\n        file_name = LOADING_REPORT_DIR / 'my_report1.html'\n        attach = file_name\n        allure.attach.file(attach, name=f\"Report {datetime.today()}\", attachment_type=allure.attachment_type.HTML)\n>       Checking.check_status_code(response, 200)\n\ntests_api/test_bd.py:68: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [504]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 504\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 504",
    "statusTrace" : "self = <tests_api.test_bd.TestGET object at 0x7f7753948230>\n\n    @allure.title('GET tos.')\n    def test_tos(self):\n        response = API.get_tos(token=TestGET.token)\n        file_name = LOADING_REPORT_DIR / 'my_report1.html'\n        attach = file_name\n        allure.attach.file(attach, name=f\"Report {datetime.today()}\", attachment_type=allure.attachment_type.HTML)\n>       Checking.check_status_code(response, 200)\n\ntests_api/test_bd.py:68: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [504]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 504\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "Endpoint: /tos",
      "time" : {
        "start" : 1738458700149,
        "stop" : 1738458700149,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request:",
      "time" : {
        "start" : 1738458700149,
        "stop" : 1738458700150,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Url: https://dbend.areso.pro/tos",
        "time" : {
          "start" : 1738458700150,
          "stop" : 1738458700150,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': 'None'}",
        "time" : {
          "start" : 1738458700150,
          "stop" : 1738458700150,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Body: None",
        "time" : {
          "start" : 1738458700150,
          "stop" : 1738458700150,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 3,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Response:",
      "time" : {
        "start" : 1738458700150,
        "stop" : 1738458700150,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Status code: 504",
        "time" : {
          "start" : 1738458700150,
          "stop" : 1738458700150,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "JSON: <html>\r\n<head><title>504 Gateway Time-out</title></head>\r\n<body>\r\n<center><h1>504 Gateway Time-out</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
        "time" : {
          "start" : 1738458700150,
          "stop" : 1738458700150,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 200 == Response status code: 504",
      "time" : {
        "start" : 1738458700151,
        "stop" : 1738458700151,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 504\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "4051dc787b9bd4fd",
      "name" : "Report 2025-02-02 01:11:40.149710",
      "source" : "4051dc787b9bd4fd.html",
      "type" : "text/html",
      "size" : 1651560
    } ],
    "parameters" : [ ],
    "stepsCount" : 9,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "GET"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestGET"
  }, {
    "name" : "host",
    "value" : "fv-az1692-600"
  }, {
    "name" : "thread",
    "value" : "2455-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 83,
        "unknown" : 0,
        "total" : 84
      },
      "items" : [ {
        "uid" : "14b7bafb5288def",
        "reportUrl" : "https://lambotik.github.io/Oblache/300//#testresult/14b7bafb5288def",
        "status" : "passed",
        "time" : {
          "start" : 1738371846791,
          "stop" : 1738371847322,
          "duration" : 531
        }
      }, {
        "uid" : "38329ffdf76a173e",
        "reportUrl" : "https://lambotik.github.io/Oblache/299//#testresult/38329ffdf76a173e",
        "status" : "passed",
        "time" : {
          "start" : 1738350565737,
          "stop" : 1738350566054,
          "duration" : 317
        }
      }, {
        "uid" : "295d715725b1da81",
        "reportUrl" : "https://lambotik.github.io/Oblache/298//#testresult/295d715725b1da81",
        "status" : "passed",
        "time" : {
          "start" : 1738198756737,
          "stop" : 1738198757044,
          "duration" : 307
        }
      }, {
        "uid" : "3b6e9d22bff2e2b8",
        "reportUrl" : "https://lambotik.github.io/Oblache/297//#testresult/3b6e9d22bff2e2b8",
        "status" : "passed",
        "time" : {
          "start" : 1738112410812,
          "stop" : 1738112411123,
          "duration" : 311
        }
      }, {
        "uid" : "c07dd7686c88534f",
        "reportUrl" : "https://lambotik.github.io/Oblache/296//#testresult/c07dd7686c88534f",
        "status" : "passed",
        "time" : {
          "start" : 1738026022782,
          "stop" : 1738026023113,
          "duration" : 331
        }
      }, {
        "uid" : "cb591fa75da6833f",
        "reportUrl" : "https://lambotik.github.io/Oblache/295//#testresult/cb591fa75da6833f",
        "status" : "passed",
        "time" : {
          "start" : 1737939699417,
          "stop" : 1737939699819,
          "duration" : 402
        }
      }, {
        "uid" : "f3ab22d75aa3a08c",
        "reportUrl" : "https://lambotik.github.io/Oblache/294//#testresult/f3ab22d75aa3a08c",
        "status" : "passed",
        "time" : {
          "start" : 1737853342925,
          "stop" : 1737853343456,
          "duration" : 531
        }
      }, {
        "uid" : "c2c14a33169c9d07",
        "reportUrl" : "https://lambotik.github.io/Oblache/293//#testresult/c2c14a33169c9d07",
        "status" : "passed",
        "time" : {
          "start" : 1737766640329,
          "stop" : 1737766640862,
          "duration" : 533
        }
      }, {
        "uid" : "1affe0a50b49e0d6",
        "reportUrl" : "https://lambotik.github.io/Oblache/292//#testresult/1affe0a50b49e0d6",
        "status" : "passed",
        "time" : {
          "start" : 1737680476154,
          "stop" : 1737680476801,
          "duration" : 647
        }
      }, {
        "uid" : "9ebb3920ad1d0d9f",
        "reportUrl" : "https://lambotik.github.io/Oblache/291//#testresult/9ebb3920ad1d0d9f",
        "status" : "passed",
        "time" : {
          "start" : 1737594015879,
          "stop" : 1737594016186,
          "duration" : 307
        }
      }, {
        "uid" : "b1ba0c1cf4735e02",
        "reportUrl" : "https://lambotik.github.io/Oblache/290//#testresult/b1ba0c1cf4735e02",
        "status" : "passed",
        "time" : {
          "start" : 1737507700441,
          "stop" : 1737507700757,
          "duration" : 316
        }
      }, {
        "uid" : "11bde345419a8528",
        "reportUrl" : "https://lambotik.github.io/Oblache/289//#testresult/11bde345419a8528",
        "status" : "passed",
        "time" : {
          "start" : 1737421183188,
          "stop" : 1737421183490,
          "duration" : 302
        }
      }, {
        "uid" : "729d1bdec6dde02e",
        "reportUrl" : "https://lambotik.github.io/Oblache/288//#testresult/729d1bdec6dde02e",
        "status" : "passed",
        "time" : {
          "start" : 1737334872395,
          "stop" : 1737334872788,
          "duration" : 393
        }
      }, {
        "uid" : "3b65ccd11d578bb3",
        "reportUrl" : "https://lambotik.github.io/Oblache/287//#testresult/3b65ccd11d578bb3",
        "status" : "passed",
        "time" : {
          "start" : 1737248697485,
          "stop" : 1737248697998,
          "duration" : 513
        }
      }, {
        "uid" : "c4f4bd65e7226aff",
        "reportUrl" : "https://lambotik.github.io/Oblache/286//#testresult/c4f4bd65e7226aff",
        "status" : "passed",
        "time" : {
          "start" : 1737161893847,
          "stop" : 1737161894221,
          "duration" : 374
        }
      }, {
        "uid" : "5ce607a033269676",
        "reportUrl" : "https://lambotik.github.io/Oblache/285//#testresult/5ce607a033269676",
        "status" : "passed",
        "time" : {
          "start" : 1737075588996,
          "stop" : 1737075589540,
          "duration" : 544
        }
      }, {
        "uid" : "ad6cecb34b1b47b",
        "reportUrl" : "https://lambotik.github.io/Oblache/284//#testresult/ad6cecb34b1b47b",
        "status" : "passed",
        "time" : {
          "start" : 1736989197085,
          "stop" : 1736989197392,
          "duration" : 307
        }
      }, {
        "uid" : "d8712aa0f48296e6",
        "reportUrl" : "https://lambotik.github.io/Oblache/283//#testresult/d8712aa0f48296e6",
        "status" : "passed",
        "time" : {
          "start" : 1736902855276,
          "stop" : 1736902855607,
          "duration" : 331
        }
      }, {
        "uid" : "a58c3c4899b114f1",
        "reportUrl" : "https://lambotik.github.io/Oblache/282//#testresult/a58c3c4899b114f1",
        "status" : "passed",
        "time" : {
          "start" : 1736816337942,
          "stop" : 1736816338624,
          "duration" : 682
        }
      }, {
        "uid" : "eaf483974fa3ed",
        "reportUrl" : "https://lambotik.github.io/Oblache/281//#testresult/eaf483974fa3ed",
        "status" : "passed",
        "time" : {
          "start" : 1736730331707,
          "stop" : 1736730332038,
          "duration" : 331
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "45b8a292a56e243a.json",
  "parameterValues" : [ ]
}