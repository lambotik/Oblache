{
  "uid" : "78106417b543cf31",
  "name" : "POST create_docker_container_without_token",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_create_docker_with_defunct_image",
  "historyId" : "346493b9ad20460bc067ba466e60ac88",
  "time" : {
    "start" : 1756086964750,
    "stop" : 1756086965109,
    "duration" : 359
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Result is not equal expected value",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7fe96b298a70>\n\n    @allure.title('POST create_docker_container_without_token')\n    def test_post_create_docker_with_defunct_image(self):\n        result = API.post_create_docker_container_with_defunct_image(token=TestPOST.token)\n        Checking.check_status_code(result, 400)\n>       Checking.check_json_value(result, 'msg', \"msg[]: the image doesn't found in the DockerHub\")\n\ntests_api/test_bd.py:411: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [400]>, field_name = 'msg'\nexpected_value = \"msg[]: the image doesn't found in the DockerHub\"\n\n    @staticmethod\n    def check_json_value(response: requests.models.Response, field_name: str, expected_value):\n        \"\"\"\n        :param response: requests.models.Response\n        :param field_name:\n        :param expected_value:\n        \"\"\"\n        check = response.json()\n        check_info = check.get(field_name)\n        with allure.step(\n                f'Compare result request with expected value:'\n                f'\\nResponse: {response}\\nField name: {field_name}\\nValue: {expected_value}'):\n>           assert check_info == expected_value, 'Result is not equal expected value'\nE           AssertionError: Result is not equal expected value\n\ntests_api/utils/checking.py:57: AssertionError",
  "flaky" : true,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Result is not equal expected value",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7fe96b298a70>\n\n    @allure.title('POST create_docker_container_without_token')\n    def test_post_create_docker_with_defunct_image(self):\n        result = API.post_create_docker_container_with_defunct_image(token=TestPOST.token)\n        Checking.check_status_code(result, 400)\n>       Checking.check_json_value(result, 'msg', \"msg[]: the image doesn't found in the DockerHub\")\n\ntests_api/test_bd.py:411: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [400]>, field_name = 'msg'\nexpected_value = \"msg[]: the image doesn't found in the DockerHub\"\n\n    @staticmethod\n    def check_json_value(response: requests.models.Response, field_name: str, expected_value):\n        \"\"\"\n        :param response: requests.models.Response\n        :param field_name:\n        :param expected_value:\n        \"\"\"\n        check = response.json()\n        check_info = check.get(field_name)\n        with allure.step(\n                f'Compare result request with expected value:'\n                f'\\nResponse: {response}\\nField name: {field_name}\\nValue: {expected_value}'):\n>           assert check_info == expected_value, 'Result is not equal expected value'\nE           AssertionError: Result is not equal expected value\n\ntests_api/utils/checking.py:57: AssertionError",
    "steps" : [ {
      "name" : "post_create_docker_container_with_defunct_image",
      "time" : {
        "start" : 1756086964750,
        "stop" : 1756086965109,
        "duration" : 359
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /container_create",
        "time" : {
          "start" : 1756086965109,
          "stop" : 1756086965109,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1756086965109,
          "stop" : 1756086965109,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': {'93959b33-05ab-441c-aa0a-3cb7814d64ed'}}",
          "time" : {
            "start" : 1756086965109,
            "stop" : 1756086965109,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: {\"docker_image\": \"\", \"int_ports\": \"80\", \"env\": 3, \"region\": 3}",
          "time" : {
            "start" : 1756086965109,
            "stop" : 1756086965109,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1756086965109,
          "stop" : 1756086965109,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 400",
          "time" : {
            "start" : 1756086965109,
            "stop" : 1756086965109,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: {\n    \"msg_code\": 52,\n    \"msg\": \"endpoint is disabled\"\n}\n",
          "time" : {
            "start" : 1756086965109,
            "stop" : 1756086965109,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 7,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 400 == Response status code: 400",
      "time" : {
        "start" : 1756086965109,
        "stop" : 1756086965109,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Compare result request with expected value:\nResponse: <Response [400]>\nField name: msg\nValue: msg[]: the image doesn't found in the DockerHub",
      "time" : {
        "start" : 1756086965109,
        "stop" : 1756086965109,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Result is not equal expected value\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 57, in check_json_value\n    assert check_info == expected_value, 'Result is not equal expected value'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 10,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "pkrvmqc4gcfdwos"
  }, {
    "name" : "thread",
    "value" : "2576-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 207,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 60,
        "unknown" : 0,
        "total" : 267
      },
      "items" : [ {
        "uid" : "367d9e9a10f5cc01",
        "reportUrl" : "https://lambotik.github.io/Oblache/481//#testresult/367d9e9a10f5cc01",
        "status" : "passed",
        "time" : {
          "start" : 1756000930032,
          "stop" : 1756000930879,
          "duration" : 847
        }
      }, {
        "uid" : "1663ba6f6579d87c",
        "reportUrl" : "https://lambotik.github.io/Oblache/480//#testresult/1663ba6f6579d87c",
        "status" : "passed",
        "time" : {
          "start" : 1755913633335,
          "stop" : 1755913634009,
          "duration" : 674
        }
      }, {
        "uid" : "726370bff9dc0384",
        "reportUrl" : "https://lambotik.github.io/Oblache/479//#testresult/726370bff9dc0384",
        "status" : "passed",
        "time" : {
          "start" : 1755827473398,
          "stop" : 1755827474074,
          "duration" : 676
        }
      }, {
        "uid" : "f1bdf357facff94e",
        "reportUrl" : "https://lambotik.github.io/Oblache/478//#testresult/f1bdf357facff94e",
        "status" : "passed",
        "time" : {
          "start" : 1755741020259,
          "stop" : 1755741021018,
          "duration" : 759
        }
      }, {
        "uid" : "ef6137c64d20000",
        "reportUrl" : "https://lambotik.github.io/Oblache/477//#testresult/ef6137c64d20000",
        "status" : "passed",
        "time" : {
          "start" : 1755654710796,
          "stop" : 1755654711452,
          "duration" : 656
        }
      }, {
        "uid" : "8a0f3ba7d2a72021",
        "reportUrl" : "https://lambotik.github.io/Oblache/476//#testresult/8a0f3ba7d2a72021",
        "status" : "passed",
        "time" : {
          "start" : 1755568430194,
          "stop" : 1755568430851,
          "duration" : 657
        }
      }, {
        "uid" : "395ced0ce7f6b62d",
        "reportUrl" : "https://lambotik.github.io/Oblache/475//#testresult/395ced0ce7f6b62d",
        "status" : "passed",
        "time" : {
          "start" : 1755482790378,
          "stop" : 1755482791100,
          "duration" : 722
        }
      }, {
        "uid" : "b0d87a8c67c2ec0d",
        "reportUrl" : "https://lambotik.github.io/Oblache/474//#testresult/b0d87a8c67c2ec0d",
        "status" : "passed",
        "time" : {
          "start" : 1755396376240,
          "stop" : 1755396377116,
          "duration" : 876
        }
      }, {
        "uid" : "ece64d0948e90aee",
        "reportUrl" : "https://lambotik.github.io/Oblache/473//#testresult/ece64d0948e90aee",
        "status" : "passed",
        "time" : {
          "start" : 1755309278829,
          "stop" : 1755309279678,
          "duration" : 849
        }
      }, {
        "uid" : "710150ac096dd824",
        "reportUrl" : "https://lambotik.github.io/Oblache/472//#testresult/710150ac096dd824",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1755223211094,
          "stop" : 1755223211378,
          "duration" : 284
        }
      }, {
        "uid" : "905477210297406b",
        "reportUrl" : "https://lambotik.github.io/Oblache/471//#testresult/905477210297406b",
        "status" : "passed",
        "time" : {
          "start" : 1755136778638,
          "stop" : 1755136779453,
          "duration" : 815
        }
      }, {
        "uid" : "8cb5f307f12c3d6d",
        "reportUrl" : "https://lambotik.github.io/Oblache/470//#testresult/8cb5f307f12c3d6d",
        "status" : "passed",
        "time" : {
          "start" : 1755050349525,
          "stop" : 1755050350279,
          "duration" : 754
        }
      }, {
        "uid" : "8084ff69882c1e02",
        "reportUrl" : "https://lambotik.github.io/Oblache/469//#testresult/8084ff69882c1e02",
        "status" : "passed",
        "time" : {
          "start" : 1754963823940,
          "stop" : 1754963824598,
          "duration" : 658
        }
      }, {
        "uid" : "af353beeeb662f9",
        "reportUrl" : "https://lambotik.github.io/Oblache/468//#testresult/af353beeeb662f9",
        "status" : "passed",
        "time" : {
          "start" : 1754878170369,
          "stop" : 1754878171244,
          "duration" : 875
        }
      }, {
        "uid" : "f6f62d07105854e8",
        "reportUrl" : "https://lambotik.github.io/Oblache/467//#testresult/f6f62d07105854e8",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1754791988522,
          "stop" : 1754791988990,
          "duration" : 468
        }
      }, {
        "uid" : "45b3dd57e9ca5777",
        "reportUrl" : "https://lambotik.github.io/Oblache/466//#testresult/45b3dd57e9ca5777",
        "status" : "passed",
        "time" : {
          "start" : 1754704683469,
          "stop" : 1754704684205,
          "duration" : 736
        }
      }, {
        "uid" : "aa8e49b161726d56",
        "reportUrl" : "https://lambotik.github.io/Oblache/465//#testresult/aa8e49b161726d56",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1754618947085,
          "stop" : 1754618947580,
          "duration" : 495
        }
      }, {
        "uid" : "d2293aebb123cdc1",
        "reportUrl" : "https://lambotik.github.io/Oblache/464//#testresult/d2293aebb123cdc1",
        "status" : "passed",
        "time" : {
          "start" : 1754532583688,
          "stop" : 1754532584544,
          "duration" : 856
        }
      }, {
        "uid" : "759f53bcc53763e",
        "reportUrl" : "https://lambotik.github.io/Oblache/463//#testresult/759f53bcc53763e",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1754446162595,
          "stop" : 1754446163078,
          "duration" : 483
        }
      }, {
        "uid" : "cfd5dfa9aeaecf0e",
        "reportUrl" : "https://lambotik.github.io/Oblache/462//#testresult/cfd5dfa9aeaecf0e",
        "status" : "passed",
        "time" : {
          "start" : 1754359857223,
          "stop" : 1754359857963,
          "duration" : 740
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "78106417b543cf31.json",
  "parameterValues" : [ ]
}