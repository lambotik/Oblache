{
  "uid" : "dc57a4897d333ee4",
  "name" : "POST checking ports_len negative symbols",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_checking_ports_len_negative_symbols",
  "historyId" : "381cac88cc6f55198cae5b20cb94989e",
  "time" : {
    "start" : 1756086963999,
    "stop" : 1756086964362,
    "duration" : 363
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Result is not equal expected value",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7fe96b298800>\n\n    @allure.title('POST checking ports_len negative symbols')\n    def test_post_checking_ports_len_negative_symbols(self):\n        result = API.post_create_docker_container_checking_ports(\n            token=TestPOST.token,\n            port_len=\"qwert\")\n        Checking.check_status_code(result, 400)\n>       Checking.check_json_value(result, 'msg', \"msg[]: ports range isn't accepted\")\n\ntests_api/test_bd.py:399: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [400]>, field_name = 'msg'\nexpected_value = \"msg[]: ports range isn't accepted\"\n\n    @staticmethod\n    def check_json_value(response: requests.models.Response, field_name: str, expected_value):\n        \"\"\"\n        :param response: requests.models.Response\n        :param field_name:\n        :param expected_value:\n        \"\"\"\n        check = response.json()\n        check_info = check.get(field_name)\n        with allure.step(\n                f'Compare result request with expected value:'\n                f'\\nResponse: {response}\\nField name: {field_name}\\nValue: {expected_value}'):\n>           assert check_info == expected_value, 'Result is not equal expected value'\nE           AssertionError: Result is not equal expected value\n\ntests_api/utils/checking.py:57: AssertionError",
  "flaky" : true,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Result is not equal expected value",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7fe96b298800>\n\n    @allure.title('POST checking ports_len negative symbols')\n    def test_post_checking_ports_len_negative_symbols(self):\n        result = API.post_create_docker_container_checking_ports(\n            token=TestPOST.token,\n            port_len=\"qwert\")\n        Checking.check_status_code(result, 400)\n>       Checking.check_json_value(result, 'msg', \"msg[]: ports range isn't accepted\")\n\ntests_api/test_bd.py:399: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [400]>, field_name = 'msg'\nexpected_value = \"msg[]: ports range isn't accepted\"\n\n    @staticmethod\n    def check_json_value(response: requests.models.Response, field_name: str, expected_value):\n        \"\"\"\n        :param response: requests.models.Response\n        :param field_name:\n        :param expected_value:\n        \"\"\"\n        check = response.json()\n        check_info = check.get(field_name)\n        with allure.step(\n                f'Compare result request with expected value:'\n                f'\\nResponse: {response}\\nField name: {field_name}\\nValue: {expected_value}'):\n>           assert check_info == expected_value, 'Result is not equal expected value'\nE           AssertionError: Result is not equal expected value\n\ntests_api/utils/checking.py:57: AssertionError",
    "steps" : [ {
      "name" : "post_create_docker_container",
      "time" : {
        "start" : 1756086964000,
        "stop" : 1756086964362,
        "duration" : 362
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /container_create",
        "time" : {
          "start" : 1756086964361,
          "stop" : 1756086964361,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1756086964362,
          "stop" : 1756086964362,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': {'93959b33-05ab-441c-aa0a-3cb7814d64ed'}}",
          "time" : {
            "start" : 1756086964362,
            "stop" : 1756086964362,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: {\"docker_image\": \"nginx\", \"int_ports\": f\"qwert\", \"env\": 3, \"region\": 3}",
          "time" : {
            "start" : 1756086964362,
            "stop" : 1756086964362,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1756086964362,
          "stop" : 1756086964362,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 400",
          "time" : {
            "start" : 1756086964362,
            "stop" : 1756086964362,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: {\n    \"msg_code\": 52,\n    \"msg\": \"endpoint is disabled\"\n}\n",
          "time" : {
            "start" : 1756086964362,
            "stop" : 1756086964362,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 7,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 400 == Response status code: 400",
      "time" : {
        "start" : 1756086964362,
        "stop" : 1756086964362,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Compare result request with expected value:\nResponse: <Response [400]>\nField name: msg\nValue: msg[]: ports range isn't accepted",
      "time" : {
        "start" : 1756086964362,
        "stop" : 1756086964362,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Result is not equal expected value\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 57, in check_json_value\n    assert check_info == expected_value, 'Result is not equal expected value'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 10,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "pkrvmqc4gcfdwos"
  }, {
    "name" : "thread",
    "value" : "2576-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 207,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 60,
        "unknown" : 0,
        "total" : 267
      },
      "items" : [ {
        "uid" : "e040b955fdfbd856",
        "reportUrl" : "https://lambotik.github.io/Oblache/481//#testresult/e040b955fdfbd856",
        "status" : "passed",
        "time" : {
          "start" : 1756000929052,
          "stop" : 1756000929544,
          "duration" : 492
        }
      }, {
        "uid" : "af2a14460178d715",
        "reportUrl" : "https://lambotik.github.io/Oblache/480//#testresult/af2a14460178d715",
        "status" : "passed",
        "time" : {
          "start" : 1755913632697,
          "stop" : 1755913632997,
          "duration" : 300
        }
      }, {
        "uid" : "89d17fbeecd6563c",
        "reportUrl" : "https://lambotik.github.io/Oblache/479//#testresult/89d17fbeecd6563c",
        "status" : "passed",
        "time" : {
          "start" : 1755827472750,
          "stop" : 1755827473090,
          "duration" : 340
        }
      }, {
        "uid" : "280398bd70f294f0",
        "reportUrl" : "https://lambotik.github.io/Oblache/478//#testresult/280398bd70f294f0",
        "status" : "passed",
        "time" : {
          "start" : 1755741019528,
          "stop" : 1755741019887,
          "duration" : 359
        }
      }, {
        "uid" : "b5877bd97f2c83a5",
        "reportUrl" : "https://lambotik.github.io/Oblache/477//#testresult/b5877bd97f2c83a5",
        "status" : "passed",
        "time" : {
          "start" : 1755654710182,
          "stop" : 1755654710486,
          "duration" : 304
        }
      }, {
        "uid" : "1f9ca90d1a7854d5",
        "reportUrl" : "https://lambotik.github.io/Oblache/476//#testresult/1f9ca90d1a7854d5",
        "status" : "passed",
        "time" : {
          "start" : 1755568429580,
          "stop" : 1755568429890,
          "duration" : 310
        }
      }, {
        "uid" : "7f9bb97510ac3071",
        "reportUrl" : "https://lambotik.github.io/Oblache/475//#testresult/7f9bb97510ac3071",
        "status" : "passed",
        "time" : {
          "start" : 1755482789657,
          "stop" : 1755482790017,
          "duration" : 360
        }
      }, {
        "uid" : "2a33a2dab3d524cb",
        "reportUrl" : "https://lambotik.github.io/Oblache/474//#testresult/2a33a2dab3d524cb",
        "status" : "passed",
        "time" : {
          "start" : 1755396375212,
          "stop" : 1755396375726,
          "duration" : 514
        }
      }, {
        "uid" : "ca215dbbafb8bdc7",
        "reportUrl" : "https://lambotik.github.io/Oblache/473//#testresult/ca215dbbafb8bdc7",
        "status" : "passed",
        "time" : {
          "start" : 1755309277824,
          "stop" : 1755309278336,
          "duration" : 512
        }
      }, {
        "uid" : "f7dbd6205b0858eb",
        "reportUrl" : "https://lambotik.github.io/Oblache/472//#testresult/f7dbd6205b0858eb",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1755223210510,
          "stop" : 1755223210789,
          "duration" : 279
        }
      }, {
        "uid" : "e31803576db45b92",
        "reportUrl" : "https://lambotik.github.io/Oblache/471//#testresult/e31803576db45b92",
        "status" : "passed",
        "time" : {
          "start" : 1755136777904,
          "stop" : 1755136778268,
          "duration" : 364
        }
      }, {
        "uid" : "71703adc13432159",
        "reportUrl" : "https://lambotik.github.io/Oblache/470//#testresult/71703adc13432159",
        "status" : "passed",
        "time" : {
          "start" : 1755050348806,
          "stop" : 1755050349156,
          "duration" : 350
        }
      }, {
        "uid" : "cb647b925c41457f",
        "reportUrl" : "https://lambotik.github.io/Oblache/469//#testresult/cb647b925c41457f",
        "status" : "passed",
        "time" : {
          "start" : 1754963823321,
          "stop" : 1754963823629,
          "duration" : 308
        }
      }, {
        "uid" : "be3d55810aa2b781",
        "reportUrl" : "https://lambotik.github.io/Oblache/468//#testresult/be3d55810aa2b781",
        "status" : "passed",
        "time" : {
          "start" : 1754878169392,
          "stop" : 1754878169878,
          "duration" : 486
        }
      }, {
        "uid" : "9fcb2445ad96a2d6",
        "reportUrl" : "https://lambotik.github.io/Oblache/467//#testresult/9fcb2445ad96a2d6",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1754791987522,
          "stop" : 1754791988003,
          "duration" : 481
        }
      }, {
        "uid" : "e96506d6bff2eaa0",
        "reportUrl" : "https://lambotik.github.io/Oblache/466//#testresult/e96506d6bff2eaa0",
        "status" : "passed",
        "time" : {
          "start" : 1754704682855,
          "stop" : 1754704683160,
          "duration" : 305
        }
      }, {
        "uid" : "206c34bd9a5add09",
        "reportUrl" : "https://lambotik.github.io/Oblache/465//#testresult/206c34bd9a5add09",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1754618946085,
          "stop" : 1754618946578,
          "duration" : 493
        }
      }, {
        "uid" : "c153d3be7bf3e81f",
        "reportUrl" : "https://lambotik.github.io/Oblache/464//#testresult/c153d3be7bf3e81f",
        "status" : "passed",
        "time" : {
          "start" : 1754532582674,
          "stop" : 1754532583189,
          "duration" : 515
        }
      }, {
        "uid" : "99dcc96ac122bd7f",
        "reportUrl" : "https://lambotik.github.io/Oblache/463//#testresult/99dcc96ac122bd7f",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1754446161623,
          "stop" : 1754446162089,
          "duration" : 466
        }
      }, {
        "uid" : "596fae2214add283",
        "reportUrl" : "https://lambotik.github.io/Oblache/462//#testresult/596fae2214add283",
        "status" : "passed",
        "time" : {
          "start" : 1754359856514,
          "stop" : 1754359856860,
          "duration" : 346
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "dc57a4897d333ee4.json",
  "parameterValues" : [ ]
}