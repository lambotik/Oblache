{
  "uid" : "2719015a338726ba",
  "name" : "POST create_docker_container_without_token",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_create_docker_container_without_token",
  "historyId" : "f833256fb8ca072b26357ead25c8b408",
  "time" : {
    "start" : 1756086964375,
    "stop" : 1756086964739,
    "duration" : 364
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 400",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7fe96b298920>\n\n    @allure.title('POST create_docker_container_without_token')\n    def test_post_create_docker_container_without_token(self):\n        result = API.post_create_docker_container(token='incorrect_token')\n>       Checking.check_status_code(result, 401)\n\ntests_api/test_bd.py:404: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 401\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 400\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : true,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 400",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7fe96b298920>\n\n    @allure.title('POST create_docker_container_without_token')\n    def test_post_create_docker_container_without_token(self):\n        result = API.post_create_docker_container(token='incorrect_token')\n>       Checking.check_status_code(result, 401)\n\ntests_api/test_bd.py:404: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 401\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 400\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "post_create_docker_container",
      "time" : {
        "start" : 1756086964375,
        "stop" : 1756086964738,
        "duration" : 363
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /container_create",
        "time" : {
          "start" : 1756086964738,
          "stop" : 1756086964738,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1756086964738,
          "stop" : 1756086964738,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': {'incorrect_token'}}",
          "time" : {
            "start" : 1756086964738,
            "stop" : 1756086964738,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: {\"docker_image\": \"nginx\", \"int_ports\": \"80\", \"env\": 3, \"region\": 3}",
          "time" : {
            "start" : 1756086964738,
            "stop" : 1756086964738,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1756086964738,
          "stop" : 1756086964738,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 400",
          "time" : {
            "start" : 1756086964738,
            "stop" : 1756086964738,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: {\n    \"msg_code\": 52,\n    \"msg\": \"endpoint is disabled\"\n}\n",
          "time" : {
            "start" : 1756086964738,
            "stop" : 1756086964738,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 7,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 401 == Response status code: 400",
      "time" : {
        "start" : 1756086964738,
        "stop" : 1756086964738,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 400\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 9,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "pkrvmqc4gcfdwos"
  }, {
    "name" : "thread",
    "value" : "2576-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 207,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 60,
        "unknown" : 0,
        "total" : 267
      },
      "items" : [ {
        "uid" : "ed54d87b01251e3c",
        "reportUrl" : "https://lambotik.github.io/Oblache/481//#testresult/ed54d87b01251e3c",
        "status" : "passed",
        "time" : {
          "start" : 1756000929546,
          "stop" : 1756000930030,
          "duration" : 484
        }
      }, {
        "uid" : "6a38f9f288078268",
        "reportUrl" : "https://lambotik.github.io/Oblache/480//#testresult/6a38f9f288078268",
        "status" : "passed",
        "time" : {
          "start" : 1755913632998,
          "stop" : 1755913633333,
          "duration" : 335
        }
      }, {
        "uid" : "46149d6ce41f4d46",
        "reportUrl" : "https://lambotik.github.io/Oblache/479//#testresult/46149d6ce41f4d46",
        "status" : "passed",
        "time" : {
          "start" : 1755827473092,
          "stop" : 1755827473396,
          "duration" : 304
        }
      }, {
        "uid" : "727979d7e12c4a52",
        "reportUrl" : "https://lambotik.github.io/Oblache/478//#testresult/727979d7e12c4a52",
        "status" : "passed",
        "time" : {
          "start" : 1755741019888,
          "stop" : 1755741020257,
          "duration" : 369
        }
      }, {
        "uid" : "1b5b07623033b7ff",
        "reportUrl" : "https://lambotik.github.io/Oblache/477//#testresult/1b5b07623033b7ff",
        "status" : "passed",
        "time" : {
          "start" : 1755654710488,
          "stop" : 1755654710794,
          "duration" : 306
        }
      }, {
        "uid" : "9bd6ad628037cb5",
        "reportUrl" : "https://lambotik.github.io/Oblache/476//#testresult/9bd6ad628037cb5",
        "status" : "passed",
        "time" : {
          "start" : 1755568429891,
          "stop" : 1755568430193,
          "duration" : 302
        }
      }, {
        "uid" : "2d90abd4c1a3a458",
        "reportUrl" : "https://lambotik.github.io/Oblache/475//#testresult/2d90abd4c1a3a458",
        "status" : "passed",
        "time" : {
          "start" : 1755482790018,
          "stop" : 1755482790377,
          "duration" : 359
        }
      }, {
        "uid" : "aa2759bd781de4a5",
        "reportUrl" : "https://lambotik.github.io/Oblache/474//#testresult/aa2759bd781de4a5",
        "status" : "passed",
        "time" : {
          "start" : 1755396375728,
          "stop" : 1755396376239,
          "duration" : 511
        }
      }, {
        "uid" : "e30e9fb2752e8b82",
        "reportUrl" : "https://lambotik.github.io/Oblache/473//#testresult/e30e9fb2752e8b82",
        "status" : "passed",
        "time" : {
          "start" : 1755309278337,
          "stop" : 1755309278828,
          "duration" : 491
        }
      }, {
        "uid" : "9ea7daf254c5717c",
        "reportUrl" : "https://lambotik.github.io/Oblache/472//#testresult/9ea7daf254c5717c",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1755223210801,
          "stop" : 1755223211082,
          "duration" : 281
        }
      }, {
        "uid" : "9e4d5a6c5edc2919",
        "reportUrl" : "https://lambotik.github.io/Oblache/471//#testresult/9e4d5a6c5edc2919",
        "status" : "passed",
        "time" : {
          "start" : 1755136778269,
          "stop" : 1755136778637,
          "duration" : 368
        }
      }, {
        "uid" : "c59bd24597c2da9a",
        "reportUrl" : "https://lambotik.github.io/Oblache/470//#testresult/c59bd24597c2da9a",
        "status" : "passed",
        "time" : {
          "start" : 1755050349158,
          "stop" : 1755050349523,
          "duration" : 365
        }
      }, {
        "uid" : "1b394655ea40a762",
        "reportUrl" : "https://lambotik.github.io/Oblache/469//#testresult/1b394655ea40a762",
        "status" : "passed",
        "time" : {
          "start" : 1754963823630,
          "stop" : 1754963823938,
          "duration" : 308
        }
      }, {
        "uid" : "e3a3e3d4f81f56a0",
        "reportUrl" : "https://lambotik.github.io/Oblache/468//#testresult/e3a3e3d4f81f56a0",
        "status" : "passed",
        "time" : {
          "start" : 1754878169879,
          "stop" : 1754878170367,
          "duration" : 488
        }
      }, {
        "uid" : "24fc9f40da56ffad",
        "reportUrl" : "https://lambotik.github.io/Oblache/467//#testresult/24fc9f40da56ffad",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1754791988015,
          "stop" : 1754791988511,
          "duration" : 496
        }
      }, {
        "uid" : "c6232f67c02d5b9",
        "reportUrl" : "https://lambotik.github.io/Oblache/466//#testresult/c6232f67c02d5b9",
        "status" : "passed",
        "time" : {
          "start" : 1754704683162,
          "stop" : 1754704683468,
          "duration" : 306
        }
      }, {
        "uid" : "736a60057a078aa6",
        "reportUrl" : "https://lambotik.github.io/Oblache/465//#testresult/736a60057a078aa6",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1754618946589,
          "stop" : 1754618947073,
          "duration" : 484
        }
      }, {
        "uid" : "e521cde44b27b7aa",
        "reportUrl" : "https://lambotik.github.io/Oblache/464//#testresult/e521cde44b27b7aa",
        "status" : "passed",
        "time" : {
          "start" : 1754532583190,
          "stop" : 1754532583686,
          "duration" : 496
        }
      }, {
        "uid" : "15d33abb66ac4d74",
        "reportUrl" : "https://lambotik.github.io/Oblache/463//#testresult/15d33abb66ac4d74",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1754446162101,
          "stop" : 1754446162583,
          "duration" : 482
        }
      }, {
        "uid" : "7b05b6a6dcbccaf4",
        "reportUrl" : "https://lambotik.github.io/Oblache/462//#testresult/7b05b6a6dcbccaf4",
        "status" : "passed",
        "time" : {
          "start" : 1754359856862,
          "stop" : 1754359857222,
          "duration" : 360
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "2719015a338726ba.json",
  "parameterValues" : [ ]
}