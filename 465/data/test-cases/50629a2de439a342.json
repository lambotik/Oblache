{
  "uid" : "50629a2de439a342",
  "name" : "POST registration for English language.",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_registration_for_english_language",
  "historyId" : "cf347c584436aa019858a6c679c01454",
  "time" : {
    "start" : 1754618929753,
    "stop" : 1754618930224,
    "duration" : 471
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 502",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f87e92497f0>\n\n    @allure.title('POST registration for English language.')\n    def test_post_registration_for_english_language(self):\n        response = API.post_registration_variety_email(\n            mail=random.choice(['gmail', 'mail', 'yandex']),\n            old_password=TestPOST.old_password,\n            prefix=random.choice(['com', 'ru', 'by']),\n            language=\"en-us\",\n            tos_agree=True)\n>       Checking.check_status_code(response, 201)\n\ntests_api/test_bd.py:127: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 201\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : true,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 502",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f87e92497f0>\n\n    @allure.title('POST registration for English language.')\n    def test_post_registration_for_english_language(self):\n        response = API.post_registration_variety_email(\n            mail=random.choice(['gmail', 'mail', 'yandex']),\n            old_password=TestPOST.old_password,\n            prefix=random.choice(['com', 'ru', 'by']),\n            language=\"en-us\",\n            tos_agree=True)\n>       Checking.check_status_code(response, 201)\n\ntests_api/test_bd.py:127: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 201\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "post_registration_variety_email",
      "time" : {
        "start" : 1754618929753,
        "stop" : 1754618930223,
        "duration" : 470
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /register",
        "time" : {
          "start" : 1754618930223,
          "stop" : 1754618930223,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "hasContent" : false,
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1754618930223,
          "stop" : 1754618930223,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': ''}",
          "time" : {
            "start" : 1754618930223,
            "stop" : 1754618930223,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "hasContent" : false,
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false
        }, {
          "name" : "Body: \n                                {\n                                \"email\": f'aqa2025_08_08_02_08_40@yandex.com',\n                                \"password\": password,\n                                \"tos_agree\": True,\n                                \"language\": en-us\n                               }",
          "time" : {
            "start" : 1754618930223,
            "stop" : 1754618930223,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "hasContent" : false,
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "hasContent" : true,
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1754618930223,
          "stop" : 1754618930223,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 502",
          "time" : {
            "start" : 1754618930223,
            "stop" : 1754618930223,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "hasContent" : false,
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false
        }, {
          "name" : "JSON: <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
          "time" : {
            "start" : 1754618930223,
            "stop" : 1754618930223,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "hasContent" : false,
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "hasContent" : true,
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : true,
      "stepsCount" : 7,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "Assert status code: 201 == Response status code: 502",
      "time" : {
        "start" : 1754618930223,
        "stop" : 1754618930224,
        "duration" : 1
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 502\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : true,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 9,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "pkrvmjbmru5nbw0"
  }, {
    "name" : "thread",
    "value" : "2667-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 23,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 227,
        "unknown" : 0,
        "total" : 250
      },
      "items" : [ {
        "uid" : "31fa673493a4c35f",
        "reportUrl" : "https://lambotik.github.io/Oblache/464//#testresult/31fa673493a4c35f",
        "status" : "passed",
        "time" : {
          "start" : 1754532559129,
          "stop" : 1754532559640,
          "duration" : 511
        }
      }, {
        "uid" : "acf5e938cd78a784",
        "reportUrl" : "https://lambotik.github.io/Oblache/463//#testresult/acf5e938cd78a784",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1754446145094,
          "stop" : 1754446145588,
          "duration" : 494
        }
      }, {
        "uid" : "c4e12e5ccb4f7e92",
        "reportUrl" : "https://lambotik.github.io/Oblache/462//#testresult/c4e12e5ccb4f7e92",
        "status" : "passed",
        "time" : {
          "start" : 1754359839661,
          "stop" : 1754359840084,
          "duration" : 423
        }
      }, {
        "uid" : "6c39f666dc06115a",
        "reportUrl" : "https://lambotik.github.io/Oblache/461//#testresult/6c39f666dc06115a",
        "status" : "passed",
        "time" : {
          "start" : 1754274165412,
          "stop" : 1754274165786,
          "duration" : 374
        }
      }, {
        "uid" : "7e7486e3b6784147",
        "reportUrl" : "https://lambotik.github.io/Oblache/460//#testresult/7e7486e3b6784147",
        "status" : "passed",
        "time" : {
          "start" : 1754187789265,
          "stop" : 1754187789882,
          "duration" : 617
        }
      }, {
        "uid" : "b6becaf0deed053e",
        "reportUrl" : "https://lambotik.github.io/Oblache/459//#testresult/b6becaf0deed053e",
        "status" : "passed",
        "time" : {
          "start" : 1754100138175,
          "stop" : 1754100138539,
          "duration" : 364
        }
      }, {
        "uid" : "8a56e987c9918d95",
        "reportUrl" : "https://lambotik.github.io/Oblache/458//#testresult/8a56e987c9918d95",
        "status" : "passed",
        "time" : {
          "start" : 1754015063289,
          "stop" : 1754015063614,
          "duration" : 325
        }
      }, {
        "uid" : "14c4cd76d03b0e10",
        "reportUrl" : "https://lambotik.github.io/Oblache/457//#testresult/14c4cd76d03b0e10",
        "status" : "passed",
        "time" : {
          "start" : 1753927660575,
          "stop" : 1753927661032,
          "duration" : 457
        }
      }, {
        "uid" : "55abf2852a6702b9",
        "reportUrl" : "https://lambotik.github.io/Oblache/456//#testresult/55abf2852a6702b9",
        "status" : "passed",
        "time" : {
          "start" : 1753841286022,
          "stop" : 1753841286399,
          "duration" : 377
        }
      }, {
        "uid" : "4c39bda87e65ad7d",
        "reportUrl" : "https://lambotik.github.io/Oblache/455//#testresult/4c39bda87e65ad7d",
        "status" : "passed",
        "time" : {
          "start" : 1753755797157,
          "stop" : 1753755797791,
          "duration" : 634
        }
      }, {
        "uid" : "b7e474378250f6a",
        "reportUrl" : "https://lambotik.github.io/Oblache/454//#testresult/b7e474378250f6a",
        "status" : "passed",
        "time" : {
          "start" : 1753668725423,
          "stop" : 1753668725921,
          "duration" : 498
        }
      }, {
        "uid" : "3872f019132d94c",
        "reportUrl" : "https://lambotik.github.io/Oblache/453//#testresult/3872f019132d94c",
        "status" : "passed",
        "time" : {
          "start" : 1753582861593,
          "stop" : 1753582862135,
          "duration" : 542
        }
      }, {
        "uid" : "d46c28e6c07be79",
        "reportUrl" : "https://lambotik.github.io/Oblache/452//#testresult/d46c28e6c07be79",
        "status" : "passed",
        "time" : {
          "start" : 1753495269460,
          "stop" : 1753495269775,
          "duration" : 315
        }
      }, {
        "uid" : "f9b427666ba8971a",
        "reportUrl" : "https://lambotik.github.io/Oblache/451//#testresult/f9b427666ba8971a",
        "status" : "passed",
        "time" : {
          "start" : 1753409105669,
          "stop" : 1753409106048,
          "duration" : 379
        }
      }, {
        "uid" : "1ed414ee461f3c",
        "reportUrl" : "https://lambotik.github.io/Oblache/450//#testresult/1ed414ee461f3c",
        "status" : "passed",
        "time" : {
          "start" : 1751332907236,
          "stop" : 1751332907623,
          "duration" : 387
        }
      }, {
        "uid" : "c5e9f69ba8a8aa85",
        "reportUrl" : "https://lambotik.github.io/Oblache/449//#testresult/c5e9f69ba8a8aa85",
        "status" : "passed",
        "time" : {
          "start" : 1751246307747,
          "stop" : 1751246308068,
          "duration" : 321
        }
      }, {
        "uid" : "e1b46382b6fcd0ef",
        "reportUrl" : "https://lambotik.github.io/Oblache/448//#testresult/e1b46382b6fcd0ef",
        "status" : "passed",
        "time" : {
          "start" : 1751160102549,
          "stop" : 1751160102972,
          "duration" : 423
        }
      }, {
        "uid" : "69bded3e1aa2f985",
        "reportUrl" : "https://lambotik.github.io/Oblache/447//#testresult/69bded3e1aa2f985",
        "status" : "passed",
        "time" : {
          "start" : 1751073101868,
          "stop" : 1751073102196,
          "duration" : 328
        }
      }, {
        "uid" : "39ea2a98483be292",
        "reportUrl" : "https://lambotik.github.io/Oblache/446//#testresult/39ea2a98483be292",
        "status" : "passed",
        "time" : {
          "start" : 1750986865953,
          "stop" : 1750986866469,
          "duration" : 516
        }
      }, {
        "uid" : "3d3ef4a3a42ab81f",
        "reportUrl" : "https://lambotik.github.io/Oblache/445//#testresult/3d3ef4a3a42ab81f",
        "status" : "passed",
        "time" : {
          "start" : 1750900405283,
          "stop" : 1750900405657,
          "duration" : 374
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "50629a2de439a342.json",
  "parameterValues" : [ ]
}