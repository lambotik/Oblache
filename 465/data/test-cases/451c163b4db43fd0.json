{
  "uid" : "451c163b4db43fd0",
  "name" : "POST registration Bulgaria language.",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_registration_for_bulgaria_language",
  "historyId" : "9770496b60bb3f26dd42c11f178217a0",
  "time" : {
    "start" : 1754618930712,
    "stop" : 1754618931178,
    "duration" : 466
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 502",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f87e8f9c5f0>\n\n    @allure.title('POST registration Bulgaria language.')\n    def test_post_registration_for_bulgaria_language(self):\n        response = API.post_registration_variety_email(\n            mail=random.choice(['gmail', 'mail', 'yandex']),\n            old_password=TestPOST.old_password,\n            prefix='bg',\n            language='bg-bg',\n            tos_agree=True)\n>       Checking.check_status_code(response, 201)\n\ntests_api/test_bd.py:151: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 201\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : true,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 502",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f87e8f9c5f0>\n\n    @allure.title('POST registration Bulgaria language.')\n    def test_post_registration_for_bulgaria_language(self):\n        response = API.post_registration_variety_email(\n            mail=random.choice(['gmail', 'mail', 'yandex']),\n            old_password=TestPOST.old_password,\n            prefix='bg',\n            language='bg-bg',\n            tos_agree=True)\n>       Checking.check_status_code(response, 201)\n\ntests_api/test_bd.py:151: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 201\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "post_registration_variety_email",
      "time" : {
        "start" : 1754618930712,
        "stop" : 1754618931178,
        "duration" : 466
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /register",
        "time" : {
          "start" : 1754618931177,
          "stop" : 1754618931177,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "hasContent" : false,
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1754618931177,
          "stop" : 1754618931177,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': ''}",
          "time" : {
            "start" : 1754618931177,
            "stop" : 1754618931177,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "hasContent" : false,
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false
        }, {
          "name" : "Body: \n                                {\n                                \"email\": f'aqa2025_08_08_02_08_40@yandex.bg',\n                                \"password\": password,\n                                \"tos_agree\": True,\n                                \"language\": bg-bg\n                               }",
          "time" : {
            "start" : 1754618931177,
            "stop" : 1754618931177,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "hasContent" : false,
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "hasContent" : true,
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1754618931177,
          "stop" : 1754618931178,
          "duration" : 1
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 502",
          "time" : {
            "start" : 1754618931177,
            "stop" : 1754618931177,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "hasContent" : false,
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false
        }, {
          "name" : "JSON: <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
          "time" : {
            "start" : 1754618931177,
            "stop" : 1754618931178,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "hasContent" : false,
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "hasContent" : true,
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : true,
      "stepsCount" : 7,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "Assert status code: 201 == Response status code: 502",
      "time" : {
        "start" : 1754618931178,
        "stop" : 1754618931178,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 502\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : true,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 9,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "pkrvmjbmru5nbw0"
  }, {
    "name" : "thread",
    "value" : "2667-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 23,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 227,
        "unknown" : 0,
        "total" : 250
      },
      "items" : [ {
        "uid" : "5760c5078d6d8238",
        "reportUrl" : "https://lambotik.github.io/Oblache/464//#testresult/5760c5078d6d8238",
        "status" : "passed",
        "time" : {
          "start" : 1754532560168,
          "stop" : 1754532560672,
          "duration" : 504
        }
      }, {
        "uid" : "1739ea5390877584",
        "reportUrl" : "https://lambotik.github.io/Oblache/463//#testresult/1739ea5390877584",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1754446146078,
          "stop" : 1754446146544,
          "duration" : 466
        }
      }, {
        "uid" : "ac2b972d9b95cecf",
        "reportUrl" : "https://lambotik.github.io/Oblache/462//#testresult/ac2b972d9b95cecf",
        "status" : "passed",
        "time" : {
          "start" : 1754359840446,
          "stop" : 1754359840811,
          "duration" : 365
        }
      }, {
        "uid" : "4a83f441cf86edca",
        "reportUrl" : "https://lambotik.github.io/Oblache/461//#testresult/4a83f441cf86edca",
        "status" : "passed",
        "time" : {
          "start" : 1754274166152,
          "stop" : 1754274166527,
          "duration" : 375
        }
      }, {
        "uid" : "8cee4b167c130bd",
        "reportUrl" : "https://lambotik.github.io/Oblache/460//#testresult/8cee4b167c130bd",
        "status" : "passed",
        "time" : {
          "start" : 1754187790386,
          "stop" : 1754187790900,
          "duration" : 514
        }
      }, {
        "uid" : "7ffff28aa698ed9d",
        "reportUrl" : "https://lambotik.github.io/Oblache/459//#testresult/7ffff28aa698ed9d",
        "status" : "passed",
        "time" : {
          "start" : 1754100138891,
          "stop" : 1754100139287,
          "duration" : 396
        }
      }, {
        "uid" : "dd1200fbaf2a05f8",
        "reportUrl" : "https://lambotik.github.io/Oblache/458//#testresult/dd1200fbaf2a05f8",
        "status" : "passed",
        "time" : {
          "start" : 1754015063924,
          "stop" : 1754015064233,
          "duration" : 309
        }
      }, {
        "uid" : "a267e1e599530e5b",
        "reportUrl" : "https://lambotik.github.io/Oblache/457//#testresult/a267e1e599530e5b",
        "status" : "passed",
        "time" : {
          "start" : 1753927661472,
          "stop" : 1753927661968,
          "duration" : 496
        }
      }, {
        "uid" : "bdf7c1c42fb78d4a",
        "reportUrl" : "https://lambotik.github.io/Oblache/456//#testresult/bdf7c1c42fb78d4a",
        "status" : "passed",
        "time" : {
          "start" : 1753841286789,
          "stop" : 1753841287150,
          "duration" : 361
        }
      }, {
        "uid" : "da505831e3a3a03f",
        "reportUrl" : "https://lambotik.github.io/Oblache/455//#testresult/da505831e3a3a03f",
        "status" : "passed",
        "time" : {
          "start" : 1753755798292,
          "stop" : 1753755798823,
          "duration" : 531
        }
      }, {
        "uid" : "af07cbb2012d8563",
        "reportUrl" : "https://lambotik.github.io/Oblache/454//#testresult/af07cbb2012d8563",
        "status" : "passed",
        "time" : {
          "start" : 1753668726550,
          "stop" : 1753668727025,
          "duration" : 475
        }
      }, {
        "uid" : "13a47981d541f4f0",
        "reportUrl" : "https://lambotik.github.io/Oblache/453//#testresult/13a47981d541f4f0",
        "status" : "passed",
        "time" : {
          "start" : 1753582862652,
          "stop" : 1753582863170,
          "duration" : 518
        }
      }, {
        "uid" : "b58b9559b931d5be",
        "reportUrl" : "https://lambotik.github.io/Oblache/452//#testresult/b58b9559b931d5be",
        "status" : "passed",
        "time" : {
          "start" : 1753495270081,
          "stop" : 1753495270392,
          "duration" : 311
        }
      }, {
        "uid" : "5b6861f5bb7f9c47",
        "reportUrl" : "https://lambotik.github.io/Oblache/451//#testresult/5b6861f5bb7f9c47",
        "status" : "passed",
        "time" : {
          "start" : 1753409106419,
          "stop" : 1753409106778,
          "duration" : 359
        }
      }, {
        "uid" : "1afe424ff0d42e64",
        "reportUrl" : "https://lambotik.github.io/Oblache/450//#testresult/1afe424ff0d42e64",
        "status" : "passed",
        "time" : {
          "start" : 1751332907932,
          "stop" : 1751332908258,
          "duration" : 326
        }
      }, {
        "uid" : "30c05052daf7f586",
        "reportUrl" : "https://lambotik.github.io/Oblache/449//#testresult/30c05052daf7f586",
        "status" : "passed",
        "time" : {
          "start" : 1751246308391,
          "stop" : 1751246308729,
          "duration" : 338
        }
      }, {
        "uid" : "f8b7ff44da9e6289",
        "reportUrl" : "https://lambotik.github.io/Oblache/448//#testresult/f8b7ff44da9e6289",
        "status" : "passed",
        "time" : {
          "start" : 1751160103385,
          "stop" : 1751160103811,
          "duration" : 426
        }
      }, {
        "uid" : "f5d965510b65bc7e",
        "reportUrl" : "https://lambotik.github.io/Oblache/447//#testresult/f5d965510b65bc7e",
        "status" : "passed",
        "time" : {
          "start" : 1751073102509,
          "stop" : 1751073102831,
          "duration" : 322
        }
      }, {
        "uid" : "7dab5e6e074ee760",
        "reportUrl" : "https://lambotik.github.io/Oblache/446//#testresult/7dab5e6e074ee760",
        "status" : "passed",
        "time" : {
          "start" : 1750986867024,
          "stop" : 1750986867539,
          "duration" : 515
        }
      }, {
        "uid" : "72832fa6c2f36fd",
        "reportUrl" : "https://lambotik.github.io/Oblache/445//#testresult/72832fa6c2f36fd",
        "status" : "passed",
        "time" : {
          "start" : 1750900406025,
          "stop" : 1750900406414,
          "duration" : 389
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "451c163b4db43fd0.json",
  "parameterValues" : [ ]
}