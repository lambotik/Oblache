{
  "uid" : "fdf6920d3a6c328c",
  "name" : "POST create_docker_container",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_create_docker_container",
  "historyId" : "d8acef40d4af2e53d7aa621a0c700e4c",
  "time" : {
    "start" : 1754618943042,
    "stop" : 1754618944626,
    "duration" : 1584
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 502",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f87e8f9d3a0>\n\n    @allure.title('POST create_docker_container')\n    def test_post_create_docker_container(self):\n        amount_before = API.post_container_list(token=TestPOST.token)\n        result = API.post_create_docker_container(token=TestPOST.token)\n        amount_after = API.post_container_list(token=TestPOST.token)\n>       Checking.check_status_code(result, 201)\n\ntests_api/test_bd.py:364: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 201\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : true,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 502",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f87e8f9d3a0>\n\n    @allure.title('POST create_docker_container')\n    def test_post_create_docker_container(self):\n        amount_before = API.post_container_list(token=TestPOST.token)\n        result = API.post_create_docker_container(token=TestPOST.token)\n        amount_after = API.post_container_list(token=TestPOST.token)\n>       Checking.check_status_code(result, 201)\n\ntests_api/test_bd.py:364: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 201\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "post_container_list",
      "time" : {
        "start" : 1754618943043,
        "stop" : 1754618943523,
        "duration" : 480
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /container_list",
        "time" : {
          "start" : 1754618943522,
          "stop" : 1754618943522,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "hasContent" : false,
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1754618943522,
          "stop" : 1754618943522,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': {None}}",
          "time" : {
            "start" : 1754618943522,
            "stop" : 1754618943522,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "hasContent" : false,
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false
        }, {
          "name" : "Body: None",
          "time" : {
            "start" : 1754618943522,
            "stop" : 1754618943522,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "hasContent" : false,
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "hasContent" : true,
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1754618943522,
          "stop" : 1754618943523,
          "duration" : 1
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 502",
          "time" : {
            "start" : 1754618943523,
            "stop" : 1754618943523,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "hasContent" : false,
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false
        }, {
          "name" : "JSON: <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
          "time" : {
            "start" : 1754618943523,
            "stop" : 1754618943523,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "hasContent" : false,
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "hasContent" : true,
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : true,
      "stepsCount" : 7,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "post_create_docker_container",
      "time" : {
        "start" : 1754618943523,
        "stop" : 1754618943991,
        "duration" : 468
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /container_create",
        "time" : {
          "start" : 1754618943991,
          "stop" : 1754618943991,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "hasContent" : false,
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1754618943991,
          "stop" : 1754618943991,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': {None}}",
          "time" : {
            "start" : 1754618943991,
            "stop" : 1754618943991,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "hasContent" : false,
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false
        }, {
          "name" : "Body: {\"docker_image\": \"nginx\", \"int_ports\": \"80\", \"env\": 3, \"region\": 3}",
          "time" : {
            "start" : 1754618943991,
            "stop" : 1754618943991,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "hasContent" : false,
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "hasContent" : true,
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1754618943991,
          "stop" : 1754618943991,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 502",
          "time" : {
            "start" : 1754618943991,
            "stop" : 1754618943991,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "hasContent" : false,
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false
        }, {
          "name" : "JSON: <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
          "time" : {
            "start" : 1754618943991,
            "stop" : 1754618943991,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "hasContent" : false,
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "hasContent" : true,
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : true,
      "stepsCount" : 7,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "post_container_list",
      "time" : {
        "start" : 1754618943991,
        "stop" : 1754618944626,
        "duration" : 635
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /container_list",
        "time" : {
          "start" : 1754618944625,
          "stop" : 1754618944625,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "hasContent" : false,
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1754618944625,
          "stop" : 1754618944625,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': {None}}",
          "time" : {
            "start" : 1754618944625,
            "stop" : 1754618944625,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "hasContent" : false,
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false
        }, {
          "name" : "Body: None",
          "time" : {
            "start" : 1754618944625,
            "stop" : 1754618944625,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "hasContent" : false,
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "hasContent" : true,
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1754618944625,
          "stop" : 1754618944626,
          "duration" : 1
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 502",
          "time" : {
            "start" : 1754618944625,
            "stop" : 1754618944625,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "hasContent" : false,
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false
        }, {
          "name" : "JSON: <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
          "time" : {
            "start" : 1754618944626,
            "stop" : 1754618944626,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "hasContent" : false,
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "hasContent" : true,
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : true,
      "stepsCount" : 7,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "Assert status code: 201 == Response status code: 502",
      "time" : {
        "start" : 1754618944626,
        "stop" : 1754618944626,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 502\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : true,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 25,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "pkrvmjbmru5nbw0"
  }, {
    "name" : "thread",
    "value" : "2667-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 204,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 46,
        "unknown" : 0,
        "total" : 250
      },
      "items" : [ {
        "uid" : "31dd50a15e5951fc",
        "reportUrl" : "https://lambotik.github.io/Oblache/464//#testresult/31dd50a15e5951fc",
        "status" : "passed",
        "time" : {
          "start" : 1754532577495,
          "stop" : 1754532580635,
          "duration" : 3140
        }
      }, {
        "uid" : "81e43ed56c64ccd7",
        "reportUrl" : "https://lambotik.github.io/Oblache/463//#testresult/81e43ed56c64ccd7",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1754446158712,
          "stop" : 1754446160145,
          "duration" : 1433
        }
      }, {
        "uid" : "3a24d67ff7f14f52",
        "reportUrl" : "https://lambotik.github.io/Oblache/462//#testresult/3a24d67ff7f14f52",
        "status" : "passed",
        "time" : {
          "start" : 1754359852736,
          "stop" : 1754359854981,
          "duration" : 2245
        }
      }, {
        "uid" : "60b282c1d1ecdc44",
        "reportUrl" : "https://lambotik.github.io/Oblache/461//#testresult/60b282c1d1ecdc44",
        "status" : "passed",
        "time" : {
          "start" : 1754274178645,
          "stop" : 1754274185241,
          "duration" : 6596
        }
      }, {
        "uid" : "d5fcf64edbd112cb",
        "reportUrl" : "https://lambotik.github.io/Oblache/460//#testresult/d5fcf64edbd112cb",
        "status" : "passed",
        "time" : {
          "start" : 1754187808230,
          "stop" : 1754187815010,
          "duration" : 6780
        }
      }, {
        "uid" : "e089a6cc949d2a2",
        "reportUrl" : "https://lambotik.github.io/Oblache/459//#testresult/e089a6cc949d2a2",
        "status" : "passed",
        "time" : {
          "start" : 1754100151484,
          "stop" : 1754100157523,
          "duration" : 6039
        }
      }, {
        "uid" : "af4fd0f3da802589",
        "reportUrl" : "https://lambotik.github.io/Oblache/458//#testresult/af4fd0f3da802589",
        "status" : "passed",
        "time" : {
          "start" : 1754015074648,
          "stop" : 1754015081644,
          "duration" : 6996
        }
      }, {
        "uid" : "620d2c8d6faed7b5",
        "reportUrl" : "https://lambotik.github.io/Oblache/457//#testresult/620d2c8d6faed7b5",
        "status" : "passed",
        "time" : {
          "start" : 1753927676321,
          "stop" : 1753927679022,
          "duration" : 2701
        }
      }, {
        "uid" : "d5435c6802b67d42",
        "reportUrl" : "https://lambotik.github.io/Oblache/456//#testresult/d5435c6802b67d42",
        "status" : "passed",
        "time" : {
          "start" : 1753841299291,
          "stop" : 1753841301607,
          "duration" : 2316
        }
      }, {
        "uid" : "bc33c27d6378357b",
        "reportUrl" : "https://lambotik.github.io/Oblache/455//#testresult/bc33c27d6378357b",
        "status" : "passed",
        "time" : {
          "start" : 1753755815863,
          "stop" : 1753755818904,
          "duration" : 3041
        }
      }, {
        "uid" : "5cf3e3ba5aeef3a6",
        "reportUrl" : "https://lambotik.github.io/Oblache/454//#testresult/5cf3e3ba5aeef3a6",
        "status" : "passed",
        "time" : {
          "start" : 1753668742900,
          "stop" : 1753668745890,
          "duration" : 2990
        }
      }, {
        "uid" : "2dac6cb8ca467c85",
        "reportUrl" : "https://lambotik.github.io/Oblache/453//#testresult/2dac6cb8ca467c85",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1753582880409,
          "stop" : 1753582882897,
          "duration" : 2488
        }
      }, {
        "uid" : "903a8d9b3796fc06",
        "reportUrl" : "https://lambotik.github.io/Oblache/452//#testresult/903a8d9b3796fc06",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1753495280897,
          "stop" : 1753495282363,
          "duration" : 1466
        }
      }, {
        "uid" : "6f74c541106e279a",
        "reportUrl" : "https://lambotik.github.io/Oblache/451//#testresult/6f74c541106e279a",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1753409119011,
          "stop" : 1753409120822,
          "duration" : 1811
        }
      }, {
        "uid" : "f94b5e08a27b9256",
        "reportUrl" : "https://lambotik.github.io/Oblache/450//#testresult/f94b5e08a27b9256",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1751332918723,
          "stop" : 1751332920202,
          "duration" : 1479
        }
      }, {
        "uid" : "a20661eae5f1f4e7",
        "reportUrl" : "https://lambotik.github.io/Oblache/449//#testresult/a20661eae5f1f4e7",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1751246319172,
          "stop" : 1751246320693,
          "duration" : 1521
        }
      }, {
        "uid" : "31da25c906c361ee",
        "reportUrl" : "https://lambotik.github.io/Oblache/448//#testresult/31da25c906c361ee",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1751160118140,
          "stop" : 1751160120175,
          "duration" : 2035
        }
      }, {
        "uid" : "591f54847a6fac77",
        "reportUrl" : "https://lambotik.github.io/Oblache/447//#testresult/591f54847a6fac77",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1751073113740,
          "stop" : 1751073115299,
          "duration" : 1559
        }
      }, {
        "uid" : "6729a1377189ea8e",
        "reportUrl" : "https://lambotik.github.io/Oblache/446//#testresult/6729a1377189ea8e",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1750986884915,
          "stop" : 1750986887417,
          "duration" : 2502
        }
      }, {
        "uid" : "4b9010ce4b37dd6f",
        "reportUrl" : "https://lambotik.github.io/Oblache/445//#testresult/4b9010ce4b37dd6f",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1750900420657,
          "stop" : 1750900422461,
          "duration" : 1804
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "fdf6920d3a6c328c.json",
  "parameterValues" : [ ]
}