{
  "uid" : "2d6183564227a4c3",
  "name" : "GET list db_versions.",
  "fullName" : "tests_api.test_get.TestGET#test_get_list_db_versions",
  "historyId" : "4b519987cccbfe51b99da602fbefd42e",
  "time" : {
    "start" : 1754618955900,
    "stop" : 1754618956394,
    "duration" : 494
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 502",
  "statusTrace" : "self = <tests_api.test_get.TestGET object at 0x7f87e8f9c6e0>\n\n    @allure.title('GET list db_versions.')\n    def test_get_list_db_versions(self):\n        response = API.get_list_dbversions()\n>       Checking.check_status_code(response, 200)\n\ntests_api/test_get.py:48: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : true,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 502",
    "statusTrace" : "self = <tests_api.test_get.TestGET object at 0x7f87e8f9c6e0>\n\n    @allure.title('GET list db_versions.')\n    def test_get_list_db_versions(self):\n        response = API.get_list_dbversions()\n>       Checking.check_status_code(response, 200)\n\ntests_api/test_get.py:48: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "Endpoint: /list_dbversions",
      "time" : {
        "start" : 1754618956394,
        "stop" : 1754618956394,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : false,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "Request:",
      "time" : {
        "start" : 1754618956394,
        "stop" : 1754618956394,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': ''}",
        "time" : {
          "start" : 1754618956394,
          "stop" : 1754618956394,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "hasContent" : false,
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false
      }, {
        "name" : "Body: None",
        "time" : {
          "start" : 1754618956394,
          "stop" : 1754618956394,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "hasContent" : false,
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : true,
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "Response:",
      "time" : {
        "start" : 1754618956394,
        "stop" : 1754618956394,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Status code: 502",
        "time" : {
          "start" : 1754618956394,
          "stop" : 1754618956394,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "hasContent" : false,
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false
      }, {
        "name" : "JSON: <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
        "time" : {
          "start" : 1754618956394,
          "stop" : 1754618956394,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "hasContent" : false,
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : true,
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "Assert status code: 200 == Response status code: 502",
      "time" : {
        "start" : 1754618956394,
        "stop" : 1754618956394,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 502\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : true,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 8,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "GET"
  }, {
    "name" : "severity",
    "value" : "critical"
  }, {
    "name" : "epic",
    "value" : "Connection DB"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestGET"
  }, {
    "name" : "host",
    "value" : "pkrvmjbmru5nbw0"
  }, {
    "name" : "thread",
    "value" : "2667-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_get"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "critical",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 2,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 13,
        "unknown" : 0,
        "total" : 15
      },
      "items" : [ {
        "uid" : "dab79a49fb458dad",
        "reportUrl" : "https://lambotik.github.io/Oblache/464//#testresult/dab79a49fb458dad",
        "status" : "passed",
        "time" : {
          "start" : 1754532707394,
          "stop" : 1754532707903,
          "duration" : 509
        }
      }, {
        "uid" : "6a1fcf3371a953be",
        "reportUrl" : "https://lambotik.github.io/Oblache/463//#testresult/6a1fcf3371a953be",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1754446171429,
          "stop" : 1754446171912,
          "duration" : 483
        }
      }, {
        "uid" : "3b260218708b9b78",
        "reportUrl" : "https://lambotik.github.io/Oblache/462//#testresult/3b260218708b9b78",
        "status" : "passed",
        "time" : {
          "start" : 1754359962562,
          "stop" : 1754359962920,
          "duration" : 358
        }
      }, {
        "uid" : "37dd87b2cfae52e0",
        "reportUrl" : "https://lambotik.github.io/Oblache/461//#testresult/37dd87b2cfae52e0",
        "status" : "passed",
        "time" : {
          "start" : 1754274286569,
          "stop" : 1754274286925,
          "duration" : 356
        }
      }, {
        "uid" : "f410d39a5591aecf",
        "reportUrl" : "https://lambotik.github.io/Oblache/460//#testresult/f410d39a5591aecf",
        "status" : "passed",
        "time" : {
          "start" : 1754187949564,
          "stop" : 1754187950065,
          "duration" : 501
        }
      }, {
        "uid" : "fe7a0aa04b2d0c7c",
        "reportUrl" : "https://lambotik.github.io/Oblache/459//#testresult/fe7a0aa04b2d0c7c",
        "status" : "passed",
        "time" : {
          "start" : 1754100282765,
          "stop" : 1754100283119,
          "duration" : 354
        }
      }, {
        "uid" : "25a770a558b17692",
        "reportUrl" : "https://lambotik.github.io/Oblache/458//#testresult/25a770a558b17692",
        "status" : "passed",
        "time" : {
          "start" : 1754015204785,
          "stop" : 1754015205092,
          "duration" : 307
        }
      }, {
        "uid" : "42da2649ea438507",
        "reportUrl" : "https://lambotik.github.io/Oblache/457//#testresult/42da2649ea438507",
        "status" : "passed",
        "time" : {
          "start" : 1753927784201,
          "stop" : 1753927784597,
          "duration" : 396
        }
      }, {
        "uid" : "9729cb8805e1b4be",
        "reportUrl" : "https://lambotik.github.io/Oblache/456//#testresult/9729cb8805e1b4be",
        "status" : "passed",
        "time" : {
          "start" : 1753841386756,
          "stop" : 1753841387123,
          "duration" : 367
        }
      }, {
        "uid" : "8028efd9f5480744",
        "reportUrl" : "https://lambotik.github.io/Oblache/455//#testresult/8028efd9f5480744",
        "status" : "passed",
        "time" : {
          "start" : 1753755945590,
          "stop" : 1753755946086,
          "duration" : 496
        }
      }, {
        "uid" : "faf538e537888cc9",
        "reportUrl" : "https://lambotik.github.io/Oblache/454//#testresult/faf538e537888cc9",
        "status" : "passed",
        "time" : {
          "start" : 1753668829933,
          "stop" : 1753668830422,
          "duration" : 489
        }
      }, {
        "uid" : "fb9d251d5dd4f079",
        "reportUrl" : "https://lambotik.github.io/Oblache/453//#testresult/fb9d251d5dd4f079",
        "status" : "passed",
        "time" : {
          "start" : 1753582967256,
          "stop" : 1753582967782,
          "duration" : 526
        }
      }, {
        "uid" : "d31443c0433bf920",
        "reportUrl" : "https://lambotik.github.io/Oblache/452//#testresult/d31443c0433bf920",
        "status" : "passed",
        "time" : {
          "start" : 1753495364853,
          "stop" : 1753495365157,
          "duration" : 304
        }
      }, {
        "uid" : "858e5bc220db33f4",
        "reportUrl" : "https://lambotik.github.io/Oblache/451//#testresult/858e5bc220db33f4",
        "status" : "passed",
        "time" : {
          "start" : 1753409205483,
          "stop" : 1753409205857,
          "duration" : 374
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "2d6183564227a4c3.json",
  "parameterValues" : [ ]
}