{
  "uid" : "cc7e6001e7fab0e3",
  "name" : "POST create_docker_container",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_create_docker_container",
  "historyId" : "d8acef40d4af2e53d7aa621a0c700e4c",
  "time" : {
    "start" : 1755482786552,
    "stop" : 1755482788111,
    "duration" : 1559
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 403",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f30057082c0>\n\n    @allure.title('POST create_docker_container')\n    def test_post_create_docker_container(self):\n        amount_before = API.post_container_list(token=TestPOST.token)\n        result = API.post_create_docker_container(token=TestPOST.token)\n        amount_after = API.post_container_list(token=TestPOST.token)\n>       Checking.check_status_code(result, 201)\n\ntests_api/test_bd.py:364: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [403]>, status_code = 201\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 403\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : true,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 403",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f30057082c0>\n\n    @allure.title('POST create_docker_container')\n    def test_post_create_docker_container(self):\n        amount_before = API.post_container_list(token=TestPOST.token)\n        result = API.post_create_docker_container(token=TestPOST.token)\n        amount_after = API.post_container_list(token=TestPOST.token)\n>       Checking.check_status_code(result, 201)\n\ntests_api/test_bd.py:364: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [403]>, status_code = 201\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 403\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "post_container_list",
      "time" : {
        "start" : 1755482786552,
        "stop" : 1755482786913,
        "duration" : 361
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /container_list",
        "time" : {
          "start" : 1755482786912,
          "stop" : 1755482786913,
          "duration" : 1
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1755482786913,
          "stop" : 1755482786913,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': {'7bf86a7d-12e0-4398-af7f-3f6d74219bb1'}}",
          "time" : {
            "start" : 1755482786913,
            "stop" : 1755482786913,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: None",
          "time" : {
            "start" : 1755482786913,
            "stop" : 1755482786913,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1755482786913,
          "stop" : 1755482786913,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 200",
          "time" : {
            "start" : 1755482786913,
            "stop" : 1755482786913,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: {\n  \"data\": {},\n  \"headers\": {\n    \"Access-Control-Allow-Methods\": [\n      \"POST\",\n      \"OPTIONS\"\n    ],\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Access-Control-Expose-Headers\": \"*\",\n    \"Content-Type\": \"application/json; charset=utf-8\"\n  },\n  \"status\": 200\n}\n",
          "time" : {
            "start" : 1755482786913,
            "stop" : 1755482786913,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 7,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "post_create_docker_container",
      "time" : {
        "start" : 1755482786913,
        "stop" : 1755482787752,
        "duration" : 839
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /container_create",
        "time" : {
          "start" : 1755482787752,
          "stop" : 1755482787752,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1755482787752,
          "stop" : 1755482787752,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': {'7bf86a7d-12e0-4398-af7f-3f6d74219bb1'}}",
          "time" : {
            "start" : 1755482787752,
            "stop" : 1755482787752,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: {\"docker_image\": \"nginx\", \"int_ports\": \"80\", \"env\": 3, \"region\": 3}",
          "time" : {
            "start" : 1755482787752,
            "stop" : 1755482787752,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1755482787752,
          "stop" : 1755482787752,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 403",
          "time" : {
            "start" : 1755482787752,
            "stop" : 1755482787752,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: {\n    \"msg\": \"you are not allowed to create new container\"\n}\n",
          "time" : {
            "start" : 1755482787752,
            "stop" : 1755482787752,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 7,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "post_container_list",
      "time" : {
        "start" : 1755482787752,
        "stop" : 1755482788111,
        "duration" : 359
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /container_list",
        "time" : {
          "start" : 1755482788111,
          "stop" : 1755482788111,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1755482788111,
          "stop" : 1755482788111,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': {'7bf86a7d-12e0-4398-af7f-3f6d74219bb1'}}",
          "time" : {
            "start" : 1755482788111,
            "stop" : 1755482788111,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: None",
          "time" : {
            "start" : 1755482788111,
            "stop" : 1755482788111,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1755482788111,
          "stop" : 1755482788111,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 200",
          "time" : {
            "start" : 1755482788111,
            "stop" : 1755482788111,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: {\n  \"data\": {},\n  \"headers\": {\n    \"Access-Control-Allow-Methods\": [\n      \"POST\",\n      \"OPTIONS\"\n    ],\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Access-Control-Expose-Headers\": \"*\",\n    \"Content-Type\": \"application/json; charset=utf-8\"\n  },\n  \"status\": 200\n}\n",
          "time" : {
            "start" : 1755482788111,
            "stop" : 1755482788111,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 7,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 201 == Response status code: 403",
      "time" : {
        "start" : 1755482788111,
        "stop" : 1755482788111,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 403\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 25,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "pkrvmubgrv54qmi"
  }, {
    "name" : "thread",
    "value" : "2580-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 207,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 52,
        "unknown" : 0,
        "total" : 260
      },
      "items" : [ {
        "uid" : "63493c219f5674a3",
        "reportUrl" : "https://lambotik.github.io/Oblache/474//#testresult/63493c219f5674a3",
        "status" : "passed",
        "time" : {
          "start" : 1755396370968,
          "stop" : 1755396373094,
          "duration" : 2126
        }
      }, {
        "uid" : "4999d6439e7037e7",
        "reportUrl" : "https://lambotik.github.io/Oblache/473//#testresult/4999d6439e7037e7",
        "status" : "passed",
        "time" : {
          "start" : 1755309272844,
          "stop" : 1755309275806,
          "duration" : 2962
        }
      }, {
        "uid" : "bb2848e51d7a09b1",
        "reportUrl" : "https://lambotik.github.io/Oblache/472//#testresult/bb2848e51d7a09b1",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1755223208749,
          "stop" : 1755223209609,
          "duration" : 860
        }
      }, {
        "uid" : "1c02eba2cad9d745",
        "reportUrl" : "https://lambotik.github.io/Oblache/471//#testresult/1c02eba2cad9d745",
        "status" : "passed",
        "time" : {
          "start" : 1755136773880,
          "stop" : 1755136776315,
          "duration" : 2435
        }
      }, {
        "uid" : "fb9db3006f504db0",
        "reportUrl" : "https://lambotik.github.io/Oblache/470//#testresult/fb9db3006f504db0",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
        "time" : {
          "start" : 1755050345288,
          "stop" : 1755050347244,
          "duration" : 1956
        }
      }, {
        "uid" : "4978afc11cae8f69",
        "reportUrl" : "https://lambotik.github.io/Oblache/469//#testresult/4978afc11cae8f69",
        "status" : "passed",
        "time" : {
          "start" : 1754963819982,
          "stop" : 1754963821938,
          "duration" : 1956
        }
      }, {
        "uid" : "c7511802a71e7447",
        "reportUrl" : "https://lambotik.github.io/Oblache/468//#testresult/c7511802a71e7447",
        "status" : "passed",
        "time" : {
          "start" : 1754878164575,
          "stop" : 1754878167479,
          "duration" : 2904
        }
      }, {
        "uid" : "9737f7663f02fd3f",
        "reportUrl" : "https://lambotik.github.io/Oblache/467//#testresult/9737f7663f02fd3f",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1754791984497,
          "stop" : 1754791985953,
          "duration" : 1456
        }
      }, {
        "uid" : "93db78ccbee39f1b",
        "reportUrl" : "https://lambotik.github.io/Oblache/466//#testresult/93db78ccbee39f1b",
        "status" : "passed",
        "time" : {
          "start" : 1754704679211,
          "stop" : 1754704681325,
          "duration" : 2114
        }
      }, {
        "uid" : "fdf6920d3a6c328c",
        "reportUrl" : "https://lambotik.github.io/Oblache/465//#testresult/fdf6920d3a6c328c",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1754618943042,
          "stop" : 1754618944626,
          "duration" : 1584
        }
      }, {
        "uid" : "31dd50a15e5951fc",
        "reportUrl" : "https://lambotik.github.io/Oblache/464//#testresult/31dd50a15e5951fc",
        "status" : "passed",
        "time" : {
          "start" : 1754532577495,
          "stop" : 1754532580635,
          "duration" : 3140
        }
      }, {
        "uid" : "81e43ed56c64ccd7",
        "reportUrl" : "https://lambotik.github.io/Oblache/463//#testresult/81e43ed56c64ccd7",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1754446158712,
          "stop" : 1754446160145,
          "duration" : 1433
        }
      }, {
        "uid" : "3a24d67ff7f14f52",
        "reportUrl" : "https://lambotik.github.io/Oblache/462//#testresult/3a24d67ff7f14f52",
        "status" : "passed",
        "time" : {
          "start" : 1754359852736,
          "stop" : 1754359854981,
          "duration" : 2245
        }
      }, {
        "uid" : "60b282c1d1ecdc44",
        "reportUrl" : "https://lambotik.github.io/Oblache/461//#testresult/60b282c1d1ecdc44",
        "status" : "passed",
        "time" : {
          "start" : 1754274178645,
          "stop" : 1754274185241,
          "duration" : 6596
        }
      }, {
        "uid" : "d5fcf64edbd112cb",
        "reportUrl" : "https://lambotik.github.io/Oblache/460//#testresult/d5fcf64edbd112cb",
        "status" : "passed",
        "time" : {
          "start" : 1754187808230,
          "stop" : 1754187815010,
          "duration" : 6780
        }
      }, {
        "uid" : "e089a6cc949d2a2",
        "reportUrl" : "https://lambotik.github.io/Oblache/459//#testresult/e089a6cc949d2a2",
        "status" : "passed",
        "time" : {
          "start" : 1754100151484,
          "stop" : 1754100157523,
          "duration" : 6039
        }
      }, {
        "uid" : "af4fd0f3da802589",
        "reportUrl" : "https://lambotik.github.io/Oblache/458//#testresult/af4fd0f3da802589",
        "status" : "passed",
        "time" : {
          "start" : 1754015074648,
          "stop" : 1754015081644,
          "duration" : 6996
        }
      }, {
        "uid" : "620d2c8d6faed7b5",
        "reportUrl" : "https://lambotik.github.io/Oblache/457//#testresult/620d2c8d6faed7b5",
        "status" : "passed",
        "time" : {
          "start" : 1753927676321,
          "stop" : 1753927679022,
          "duration" : 2701
        }
      }, {
        "uid" : "d5435c6802b67d42",
        "reportUrl" : "https://lambotik.github.io/Oblache/456//#testresult/d5435c6802b67d42",
        "status" : "passed",
        "time" : {
          "start" : 1753841299291,
          "stop" : 1753841301607,
          "duration" : 2316
        }
      }, {
        "uid" : "bc33c27d6378357b",
        "reportUrl" : "https://lambotik.github.io/Oblache/455//#testresult/bc33c27d6378357b",
        "status" : "passed",
        "time" : {
          "start" : 1753755815863,
          "stop" : 1753755818904,
          "duration" : 3041
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "cc7e6001e7fab0e3.json",
  "parameterValues" : [ ]
}