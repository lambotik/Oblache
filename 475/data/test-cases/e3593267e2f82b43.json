{
  "uid" : "e3593267e2f82b43",
  "name" : "POST db_create",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_db_create",
  "historyId" : "0b53e71177b12ce964a75d76d7986dbc",
  "time" : {
    "start" : 1755482781688,
    "stop" : 1755482782458,
    "duration" : 770
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 400",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f30054340b0>\nget_token = ('7bf86a7d-12e0-4398-af7f-3f6d74219bb1', {'email': 'test4@mail.com', 'password': 'testpassword'}, 'testpassword', '123456789', 'test4@mail.com')\n\n    @allure.title('POST db_create')\n    def test_post_db_create(self, get_token):\n        TestPOST.token, TestPOST.body = get_token[0], get_token[1]\n        response_login = API.post_login(body=TestPOST.body)\n        Checking.check_status_code(response_login, 200)\n        response = API.post_db_create(token=TestPOST.token)\n        print(response.text)\n>       Checking.check_status_code(response, 201)\n\ntests_api/test_bd.py:257: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 201\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 400\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : true,
  "newFailed" : true,
  "beforeStages" : [ {
    "name" : "get_token",
    "time" : {
      "start" : 1755482781307,
      "stop" : 1755482781687,
      "duration" : 380
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Assert status code: 200 == Response status code: 200",
      "time" : {
        "start" : 1755482781687,
        "stop" : 1755482781687,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 400",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f30054340b0>\nget_token = ('7bf86a7d-12e0-4398-af7f-3f6d74219bb1', {'email': 'test4@mail.com', 'password': 'testpassword'}, 'testpassword', '123456789', 'test4@mail.com')\n\n    @allure.title('POST db_create')\n    def test_post_db_create(self, get_token):\n        TestPOST.token, TestPOST.body = get_token[0], get_token[1]\n        response_login = API.post_login(body=TestPOST.body)\n        Checking.check_status_code(response_login, 200)\n        response = API.post_db_create(token=TestPOST.token)\n        print(response.text)\n>       Checking.check_status_code(response, 201)\n\ntests_api/test_bd.py:257: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 201\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 400\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "post_login",
      "time" : {
        "start" : 1755482781688,
        "stop" : 1755482782082,
        "duration" : 394
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /login",
        "time" : {
          "start" : 1755482782081,
          "stop" : 1755482782081,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1755482782081,
          "stop" : 1755482782082,
          "duration" : 1
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': ''}",
          "time" : {
            "start" : 1755482782082,
            "stop" : 1755482782082,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: {\"email\": email, \"password\": password}",
          "time" : {
            "start" : 1755482782082,
            "stop" : 1755482782082,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1755482782082,
          "stop" : 1755482782082,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 200",
          "time" : {
            "start" : 1755482782082,
            "stop" : 1755482782082,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: {\n    \"token\": \"c5ba17b4-9799-4976-b535-a7fe1b57cf00\",\n    \"msg\": \"msg[6]: login successful\"\n}\n",
          "time" : {
            "start" : 1755482782082,
            "stop" : 1755482782082,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 7,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 200 == Response status code: 200",
      "time" : {
        "start" : 1755482782082,
        "stop" : 1755482782082,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "post_db_create",
      "time" : {
        "start" : 1755482782082,
        "stop" : 1755482782457,
        "duration" : 375
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /db_create",
        "time" : {
          "start" : 1755482782457,
          "stop" : 1755482782457,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1755482782457,
          "stop" : 1755482782457,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': {'7bf86a7d-12e0-4398-af7f-3f6d74219bb1'}}",
          "time" : {
            "start" : 1755482782457,
            "stop" : 1755482782457,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: {\"dbtype\": 3, \"dbversion\": 5, \"env\": 3, \"region\": 3}",
          "time" : {
            "start" : 1755482782457,
            "stop" : 1755482782457,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1755482782457,
          "stop" : 1755482782457,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 400",
          "time" : {
            "start" : 1755482782457,
            "stop" : 1755482782457,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: {\n    \"msg\": \"no hosts available in the region at this time\"\n}\n",
          "time" : {
            "start" : 1755482782457,
            "stop" : 1755482782457,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 7,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 201 == Response status code: 400",
      "time" : {
        "start" : 1755482782457,
        "stop" : 1755482782457,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 400\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 18,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "pkrvmubgrv54qmi"
  }, {
    "name" : "thread",
    "value" : "2580-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 229,
        "broken" : 26,
        "skipped" : 0,
        "passed" : 5,
        "unknown" : 0,
        "total" : 260
      },
      "items" : [ {
        "uid" : "4c923be0feac7c33",
        "reportUrl" : "https://lambotik.github.io/Oblache/474//#testresult/4c923be0feac7c33",
        "status" : "passed",
        "time" : {
          "start" : 1755396363700,
          "stop" : 1755396364770,
          "duration" : 1070
        }
      }, {
        "uid" : "72888a4219ef1efa",
        "reportUrl" : "https://lambotik.github.io/Oblache/473//#testresult/72888a4219ef1efa",
        "status" : "passed",
        "time" : {
          "start" : 1755309265302,
          "stop" : 1755309266293,
          "duration" : 991
        }
      }, {
        "uid" : "9988ef65309a5899",
        "reportUrl" : "https://lambotik.github.io/Oblache/472//#testresult/9988ef65309a5899",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
        "time" : {
          "start" : 1755223205216,
          "stop" : 1755223205216,
          "duration" : 0
        }
      }, {
        "uid" : "292a14094ab2927e",
        "reportUrl" : "https://lambotik.github.io/Oblache/471//#testresult/292a14094ab2927e",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 403",
        "time" : {
          "start" : 1755136768286,
          "stop" : 1755136769031,
          "duration" : 745
        }
      }, {
        "uid" : "94626c629055288",
        "reportUrl" : "https://lambotik.github.io/Oblache/470//#testresult/94626c629055288",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 403",
        "time" : {
          "start" : 1755050339812,
          "stop" : 1755050340519,
          "duration" : 707
        }
      }, {
        "uid" : "f43afc8e3bda2beb",
        "reportUrl" : "https://lambotik.github.io/Oblache/469//#testresult/f43afc8e3bda2beb",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 403",
        "time" : {
          "start" : 1754963815324,
          "stop" : 1754963815935,
          "duration" : 611
        }
      }, {
        "uid" : "f6e43583776c1de",
        "reportUrl" : "https://lambotik.github.io/Oblache/468//#testresult/f6e43583776c1de",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 403",
        "time" : {
          "start" : 1754878157129,
          "stop" : 1754878158209,
          "duration" : 1080
        }
      }, {
        "uid" : "7110c9b71fc87915",
        "reportUrl" : "https://lambotik.github.io/Oblache/467//#testresult/7110c9b71fc87915",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
        "time" : {
          "start" : 1754791978598,
          "stop" : 1754791978598,
          "duration" : 0
        }
      }, {
        "uid" : "979d5d0b7ed186b",
        "reportUrl" : "https://lambotik.github.io/Oblache/466//#testresult/979d5d0b7ed186b",
        "status" : "passed",
        "time" : {
          "start" : 1754704674414,
          "stop" : 1754704675083,
          "duration" : 669
        }
      }, {
        "uid" : "52e7bccadd72c33b",
        "reportUrl" : "https://lambotik.github.io/Oblache/465//#testresult/52e7bccadd72c33b",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
        "time" : {
          "start" : 1754618937171,
          "stop" : 1754618937171,
          "duration" : 0
        }
      }, {
        "uid" : "4ada730a8bf4b56f",
        "reportUrl" : "https://lambotik.github.io/Oblache/464//#testresult/4ada730a8bf4b56f",
        "status" : "passed",
        "time" : {
          "start" : 1754532569906,
          "stop" : 1754532570948,
          "duration" : 1042
        }
      }, {
        "uid" : "f405691b74207ec9",
        "reportUrl" : "https://lambotik.github.io/Oblache/463//#testresult/f405691b74207ec9",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
        "time" : {
          "start" : 1754446152768,
          "stop" : 1754446152768,
          "duration" : 0
        }
      }, {
        "uid" : "dea512780da4419d",
        "reportUrl" : "https://lambotik.github.io/Oblache/462//#testresult/dea512780da4419d",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 403",
        "time" : {
          "start" : 1754359847377,
          "stop" : 1754359848065,
          "duration" : 688
        }
      }, {
        "uid" : "c07fdd56c223a75",
        "reportUrl" : "https://lambotik.github.io/Oblache/461//#testresult/c07fdd56c223a75",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 403",
        "time" : {
          "start" : 1754274173117,
          "stop" : 1754274173855,
          "duration" : 738
        }
      }, {
        "uid" : "e36d006ac2833220",
        "reportUrl" : "https://lambotik.github.io/Oblache/460//#testresult/e36d006ac2833220",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 403",
        "time" : {
          "start" : 1754187800571,
          "stop" : 1754187801611,
          "duration" : 1040
        }
      }, {
        "uid" : "a07646ebf0ee41ce",
        "reportUrl" : "https://lambotik.github.io/Oblache/459//#testresult/a07646ebf0ee41ce",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 403",
        "time" : {
          "start" : 1754100145913,
          "stop" : 1754100146701,
          "duration" : 788
        }
      }, {
        "uid" : "c66df273f6196931",
        "reportUrl" : "https://lambotik.github.io/Oblache/458//#testresult/c66df273f6196931",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 403",
        "time" : {
          "start" : 1754015069855,
          "stop" : 1754015070551,
          "duration" : 696
        }
      }, {
        "uid" : "ddeb3fb3925460ef",
        "reportUrl" : "https://lambotik.github.io/Oblache/457//#testresult/ddeb3fb3925460ef",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 403",
        "time" : {
          "start" : 1753927670077,
          "stop" : 1753927670950,
          "duration" : 873
        }
      }, {
        "uid" : "7e888ba107ecc059",
        "reportUrl" : "https://lambotik.github.io/Oblache/456//#testresult/7e888ba107ecc059",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 403",
        "time" : {
          "start" : 1753841293795,
          "stop" : 1753841294512,
          "duration" : 717
        }
      }, {
        "uid" : "5260c79238e9d550",
        "reportUrl" : "https://lambotik.github.io/Oblache/455//#testresult/5260c79238e9d550",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 403",
        "time" : {
          "start" : 1753755808177,
          "stop" : 1753755809228,
          "duration" : 1051
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "e3593267e2f82b43.json",
  "parameterValues" : [ ]
}