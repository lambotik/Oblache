{
  "uid" : "81ba07a260d4957c",
  "name" : "POST login/is_logged/logout",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_login_is_logged_logout",
  "historyId" : "5acbe9eedbdaaded55cefbf9042fc1fd",
  "time" : {
    "start" : 1728522038757,
    "stop" : 1728522039077,
    "duration" : 320
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 500",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f49695a42f0>\nget_token = ('8da5b41d-c124-463a-8875-c9daae78000d', {'email': 'test4@mail.com', 'password': 'testpassword'}, 'testpassword', '123456789', 'test4@mail.com')\n\n    @allure.title('POST login/is_logged/logout')\n    def test_post_login_is_logged_logout(self, get_token):\n        TestPOST.token = get_token[0]\n        response_login = API.post_login(body=TestPOST.body)\n>       Checking.check_status_code(response_login, 200)\n\ntests_api/test_bd.py:230: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [500]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 500\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ {
    "name" : "get_token",
    "time" : {
      "start" : 1728522038286,
      "stop" : 1728522038756,
      "duration" : 470
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Assert status code: 200 == Response status code: 200",
      "time" : {
        "start" : 1728522038756,
        "stop" : 1728522038756,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 500",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f49695a42f0>\nget_token = ('8da5b41d-c124-463a-8875-c9daae78000d', {'email': 'test4@mail.com', 'password': 'testpassword'}, 'testpassword', '123456789', 'test4@mail.com')\n\n    @allure.title('POST login/is_logged/logout')\n    def test_post_login_is_logged_logout(self, get_token):\n        TestPOST.token = get_token[0]\n        response_login = API.post_login(body=TestPOST.body)\n>       Checking.check_status_code(response_login, 200)\n\ntests_api/test_bd.py:230: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [500]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 500\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "post_login",
      "time" : {
        "start" : 1728522038757,
        "stop" : 1728522039077,
        "duration" : 320
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /login",
        "time" : {
          "start" : 1728522039077,
          "stop" : 1728522039077,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1728522039077,
          "stop" : 1728522039077,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Url: https://dbend.areso.pro/login",
          "time" : {
            "start" : 1728522039077,
            "stop" : 1728522039077,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': 'None'}",
          "time" : {
            "start" : 1728522039077,
            "stop" : 1728522039077,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: {\"email\": email, \"password\": password}",
          "time" : {
            "start" : 1728522039077,
            "stop" : 1728522039077,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 3,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1728522039077,
          "stop" : 1728522039077,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 500",
          "time" : {
            "start" : 1728522039077,
            "stop" : 1728522039077,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: Some general exception",
          "time" : {
            "start" : 1728522039077,
            "stop" : 1728522039077,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 8,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 200 == Response status code: 500",
      "time" : {
        "start" : 1728522039077,
        "stop" : 1728522039077,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 500\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 10,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "fv-az1117-459"
  }, {
    "name" : "thread",
    "value" : "2302-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 22,
        "unknown" : 0,
        "total" : 23
      },
      "items" : [ {
        "uid" : "40849bf4ba970094",
        "reportUrl" : "https://lambotik.github.io/Oblache/185//#testresult/40849bf4ba970094",
        "status" : "passed",
        "time" : {
          "start" : 1728435645341,
          "stop" : 1728435646421,
          "duration" : 1080
        }
      }, {
        "uid" : "5f2c0f4cf20140bb",
        "reportUrl" : "https://lambotik.github.io/Oblache/184//#testresult/5f2c0f4cf20140bb",
        "status" : "passed",
        "time" : {
          "start" : 1728349257168,
          "stop" : 1728349258298,
          "duration" : 1130
        }
      }, {
        "uid" : "39523b6887833a30",
        "reportUrl" : "https://lambotik.github.io/Oblache/183//#testresult/39523b6887833a30",
        "status" : "passed",
        "time" : {
          "start" : 1728262998244,
          "stop" : 1728262999180,
          "duration" : 936
        }
      }, {
        "uid" : "f7fd485c0f55aa77",
        "reportUrl" : "https://lambotik.github.io/Oblache/182//#testresult/f7fd485c0f55aa77",
        "status" : "passed",
        "time" : {
          "start" : 1728176749561,
          "stop" : 1728176750633,
          "duration" : 1072
        }
      }, {
        "uid" : "e9659233bd4c6a62",
        "reportUrl" : "https://lambotik.github.io/Oblache/181//#testresult/e9659233bd4c6a62",
        "status" : "passed",
        "time" : {
          "start" : 1728090024371,
          "stop" : 1728090025318,
          "duration" : 947
        }
      }, {
        "uid" : "97a16c12cc47efdc",
        "reportUrl" : "https://lambotik.github.io/Oblache/180//#testresult/97a16c12cc47efdc",
        "status" : "passed",
        "time" : {
          "start" : 1728003667504,
          "stop" : 1728003668441,
          "duration" : 937
        }
      }, {
        "uid" : "989e7cc22210207f",
        "reportUrl" : "https://lambotik.github.io/Oblache/179//#testresult/989e7cc22210207f",
        "status" : "passed",
        "time" : {
          "start" : 1727917277058,
          "stop" : 1727917278573,
          "duration" : 1515
        }
      }, {
        "uid" : "9cb783e8b86bcb60",
        "reportUrl" : "https://lambotik.github.io/Oblache/178//#testresult/9cb783e8b86bcb60",
        "status" : "passed",
        "time" : {
          "start" : 1727830870213,
          "stop" : 1727830871280,
          "duration" : 1067
        }
      }, {
        "uid" : "1bbf158c956655ca",
        "reportUrl" : "https://lambotik.github.io/Oblache/177//#testresult/1bbf158c956655ca",
        "status" : "passed",
        "time" : {
          "start" : 1727744818921,
          "stop" : 1727744819878,
          "duration" : 957
        }
      }, {
        "uid" : "8463b4eb0de90869",
        "reportUrl" : "https://lambotik.github.io/Oblache/176//#testresult/8463b4eb0de90869",
        "status" : "passed",
        "time" : {
          "start" : 1727658215123,
          "stop" : 1727658216653,
          "duration" : 1530
        }
      }, {
        "uid" : "42c5793fcd097fe",
        "reportUrl" : "https://lambotik.github.io/Oblache/18//#testresult/42c5793fcd097fe",
        "status" : "passed",
        "time" : {
          "start" : 1727640803938,
          "stop" : 1727640805013,
          "duration" : 1075
        }
      }, {
        "uid" : "c93d122964b20446",
        "reportUrl" : "https://lambotik.github.io/Oblache/17//#testresult/c93d122964b20446",
        "status" : "passed",
        "time" : {
          "start" : 1727640537309,
          "stop" : 1727640538822,
          "duration" : 1513
        }
      }, {
        "uid" : "3613e2c9d98a13f",
        "reportUrl" : "https://lambotik.github.io/Oblache/175//#testresult/3613e2c9d98a13f",
        "status" : "passed",
        "time" : {
          "start" : 1727571986536,
          "stop" : 1727571988200,
          "duration" : 1664
        }
      }, {
        "uid" : "52a3a361233990e3",
        "reportUrl" : "https://lambotik.github.io/Oblache/174//#testresult/52a3a361233990e3",
        "status" : "passed",
        "time" : {
          "start" : 1727485230771,
          "stop" : 1727485231680,
          "duration" : 909
        }
      }, {
        "uid" : "6d8f971a648e5a2a",
        "reportUrl" : "https://lambotik.github.io/Oblache/173//#testresult/6d8f971a648e5a2a",
        "status" : "passed",
        "time" : {
          "start" : 1727398865052,
          "stop" : 1727398866549,
          "duration" : 1497
        }
      }, {
        "uid" : "56db686ebc79a9b0",
        "reportUrl" : "https://lambotik.github.io/Oblache/172//#testresult/56db686ebc79a9b0",
        "status" : "passed",
        "time" : {
          "start" : 1727312441608,
          "stop" : 1727312443160,
          "duration" : 1552
        }
      }, {
        "uid" : "da8dcb3e02551aba",
        "reportUrl" : "https://lambotik.github.io/Oblache/171//#testresult/da8dcb3e02551aba",
        "status" : "passed",
        "time" : {
          "start" : 1727226123397,
          "stop" : 1727226124316,
          "duration" : 919
        }
      }, {
        "uid" : "8fd506a6d2f7b6c6",
        "reportUrl" : "https://lambotik.github.io/Oblache/170//#testresult/8fd506a6d2f7b6c6",
        "status" : "passed",
        "time" : {
          "start" : 1727139684403,
          "stop" : 1727139685386,
          "duration" : 983
        }
      }, {
        "uid" : "ca3357b729ff504",
        "reportUrl" : "https://lambotik.github.io/Oblache/169//#testresult/ca3357b729ff504",
        "status" : "passed",
        "time" : {
          "start" : 1727053278651,
          "stop" : 1727053279589,
          "duration" : 938
        }
      }, {
        "uid" : "8adec8f49ab8902b",
        "reportUrl" : "https://lambotik.github.io/Oblache/168//#testresult/8adec8f49ab8902b",
        "status" : "passed",
        "time" : {
          "start" : 1726967111791,
          "stop" : 1726967112878,
          "duration" : 1087
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "81ba07a260d4957c.json",
  "parameterValues" : [ ]
}