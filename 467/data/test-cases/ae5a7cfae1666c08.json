{
  "uid" : "ae5a7cfae1666c08",
  "name" : "POST checking ports_len positive",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_checking_ports_len_positive",
  "historyId" : "c6f631852f230d7f46e21d1143ab0d56",
  "time" : {
    "start" : 1754791985966,
    "stop" : 1754791986547,
    "duration" : 581
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 502",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f6446f84800>\n\n    @allure.title('POST checking ports_len positive')\n    def test_post_checking_ports_len_positive(self):\n        result = API.post_create_docker_container_checking_ports(\n            token=TestPOST.token,\n            port_len=\"80-89\")\n>       Checking.check_status_code(result, 201)\n\ntests_api/test_bd.py:374: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 201\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : true,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 502",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7f6446f84800>\n\n    @allure.title('POST checking ports_len positive')\n    def test_post_checking_ports_len_positive(self):\n        result = API.post_create_docker_container_checking_ports(\n            token=TestPOST.token,\n            port_len=\"80-89\")\n>       Checking.check_status_code(result, 201)\n\ntests_api/test_bd.py:374: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 201\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "post_create_docker_container",
      "time" : {
        "start" : 1754791985966,
        "stop" : 1754791986546,
        "duration" : 580
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /container_create",
        "time" : {
          "start" : 1754791986546,
          "stop" : 1754791986546,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1754791986546,
          "stop" : 1754791986546,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': {None}}",
          "time" : {
            "start" : 1754791986546,
            "stop" : 1754791986546,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: {\"docker_image\": \"nginx\", \"int_ports\": f\"80-89\", \"env\": 3, \"region\": 3}",
          "time" : {
            "start" : 1754791986546,
            "stop" : 1754791986546,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1754791986546,
          "stop" : 1754791986546,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 502",
          "time" : {
            "start" : 1754791986546,
            "stop" : 1754791986546,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
          "time" : {
            "start" : 1754791986546,
            "stop" : 1754791986546,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 7,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 201 == Response status code: 502",
      "time" : {
        "start" : 1754791986546,
        "stop" : 1754791986546,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 502\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 9,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "pkrvmsl9tci6h6u"
  }, {
    "name" : "thread",
    "value" : "2576-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 205,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 47,
        "unknown" : 0,
        "total" : 252
      },
      "items" : [ {
        "uid" : "9459b90bea2dcd88",
        "reportUrl" : "https://lambotik.github.io/Oblache/466//#testresult/9459b90bea2dcd88",
        "status" : "passed",
        "time" : {
          "start" : 1754704681328,
          "stop" : 1754704682220,
          "duration" : 892
        }
      }, {
        "uid" : "150e1dbed973a08f",
        "reportUrl" : "https://lambotik.github.io/Oblache/465//#testresult/150e1dbed973a08f",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1754618944637,
          "stop" : 1754618945104,
          "duration" : 467
        }
      }, {
        "uid" : "841ea05939d697d9",
        "reportUrl" : "https://lambotik.github.io/Oblache/464//#testresult/841ea05939d697d9",
        "status" : "passed",
        "time" : {
          "start" : 1754532580639,
          "stop" : 1754532581639,
          "duration" : 1000
        }
      }, {
        "uid" : "682c9a0d1de231fc",
        "reportUrl" : "https://lambotik.github.io/Oblache/463//#testresult/682c9a0d1de231fc",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1754446160158,
          "stop" : 1754446160625,
          "duration" : 467
        }
      }, {
        "uid" : "72d88a23f759771c",
        "reportUrl" : "https://lambotik.github.io/Oblache/462//#testresult/72d88a23f759771c",
        "status" : "passed",
        "time" : {
          "start" : 1754359854985,
          "stop" : 1754359855802,
          "duration" : 817
        }
      }, {
        "uid" : "e36d2a001dddaec9",
        "reportUrl" : "https://lambotik.github.io/Oblache/461//#testresult/e36d2a001dddaec9",
        "status" : "passed",
        "time" : {
          "start" : 1754274185245,
          "stop" : 1754274190587,
          "duration" : 5342
        }
      }, {
        "uid" : "7eb9c1b89075a52d",
        "reportUrl" : "https://lambotik.github.io/Oblache/460//#testresult/7eb9c1b89075a52d",
        "status" : "passed",
        "time" : {
          "start" : 1754187815014,
          "stop" : 1754187817515,
          "duration" : 2501
        }
      }, {
        "uid" : "376fabf3d651be8b",
        "reportUrl" : "https://lambotik.github.io/Oblache/459//#testresult/376fabf3d651be8b",
        "status" : "passed",
        "time" : {
          "start" : 1754100157526,
          "stop" : 1754100158420,
          "duration" : 894
        }
      }, {
        "uid" : "bce7ebfcfdbc04d2",
        "reportUrl" : "https://lambotik.github.io/Oblache/458//#testresult/bce7ebfcfdbc04d2",
        "status" : "passed",
        "time" : {
          "start" : 1754015081647,
          "stop" : 1754015088898,
          "duration" : 7251
        }
      }, {
        "uid" : "84fefdb229bafdb",
        "reportUrl" : "https://lambotik.github.io/Oblache/457//#testresult/84fefdb229bafdb",
        "status" : "passed",
        "time" : {
          "start" : 1753927679025,
          "stop" : 1753927680157,
          "duration" : 1132
        }
      }, {
        "uid" : "2451261ef8920615",
        "reportUrl" : "https://lambotik.github.io/Oblache/456//#testresult/2451261ef8920615",
        "status" : "passed",
        "time" : {
          "start" : 1753841301610,
          "stop" : 1753841302425,
          "duration" : 815
        }
      }, {
        "uid" : "ced876e723a49d5c",
        "reportUrl" : "https://lambotik.github.io/Oblache/455//#testresult/ced876e723a49d5c",
        "status" : "passed",
        "time" : {
          "start" : 1753755818907,
          "stop" : 1753755819887,
          "duration" : 980
        }
      }, {
        "uid" : "8853f2ccaf7fdf15",
        "reportUrl" : "https://lambotik.github.io/Oblache/454//#testresult/8853f2ccaf7fdf15",
        "status" : "passed",
        "time" : {
          "start" : 1753668745893,
          "stop" : 1753668746871,
          "duration" : 978
        }
      }, {
        "uid" : "759176494e93b5f7",
        "reportUrl" : "https://lambotik.github.io/Oblache/453//#testresult/759176494e93b5f7",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1753582882912,
          "stop" : 1753582883421,
          "duration" : 509
        }
      }, {
        "uid" : "d3784eac79496395",
        "reportUrl" : "https://lambotik.github.io/Oblache/452//#testresult/d3784eac79496395",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1753495282379,
          "stop" : 1753495282683,
          "duration" : 304
        }
      }, {
        "uid" : "5561275929a5ef8b",
        "reportUrl" : "https://lambotik.github.io/Oblache/451//#testresult/5561275929a5ef8b",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1753409120837,
          "stop" : 1753409121205,
          "duration" : 368
        }
      }, {
        "uid" : "7e9c8ffb7e3b5056",
        "reportUrl" : "https://lambotik.github.io/Oblache/450//#testresult/7e9c8ffb7e3b5056",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1751332920216,
          "stop" : 1751332920517,
          "duration" : 301
        }
      }, {
        "uid" : "3d7d8d731de1c445",
        "reportUrl" : "https://lambotik.github.io/Oblache/449//#testresult/3d7d8d731de1c445",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1751246320709,
          "stop" : 1751246321018,
          "duration" : 309
        }
      }, {
        "uid" : "29ba72160cf2c106",
        "reportUrl" : "https://lambotik.github.io/Oblache/448//#testresult/29ba72160cf2c106",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1751160120190,
          "stop" : 1751160120628,
          "duration" : 438
        }
      }, {
        "uid" : "b18bbebb001fdb23",
        "reportUrl" : "https://lambotik.github.io/Oblache/447//#testresult/b18bbebb001fdb23",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1751073115318,
          "stop" : 1751073115625,
          "duration" : 307
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "ae5a7cfae1666c08.json",
  "parameterValues" : [ ]
}