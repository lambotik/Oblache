{
  "uid" : "9fcae45fcfb3f857",
  "name" : "GET bad_request.",
  "fullName" : "tests_api.test_get.TestGET#test_get_with_bad_request",
  "historyId" : "eafadd9095be5b42147534496e0b0455",
  "time" : {
    "start" : 1754791998823,
    "stop" : 1754791999289,
    "duration" : 466
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 502",
  "statusTrace" : "self = <tests_api.test_get.TestGET object at 0x7f6446f85910>\n\n    @allure.title('GET bad_request.')\n    def test_get_with_bad_request(self):\n        response = API.get_bad_request()\n>       Checking.check_status_code(response, 404)\n\ntests_api/test_get.py:63: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 404\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : true,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 502",
    "statusTrace" : "self = <tests_api.test_get.TestGET object at 0x7f6446f85910>\n\n    @allure.title('GET bad_request.')\n    def test_get_with_bad_request(self):\n        response = API.get_bad_request()\n>       Checking.check_status_code(response, 404)\n\ntests_api/test_get.py:63: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 404\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "Endpoint: /bad_request",
      "time" : {
        "start" : 1754791999289,
        "stop" : 1754791999289,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request:",
      "time" : {
        "start" : 1754791999289,
        "stop" : 1754791999289,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': ''}",
        "time" : {
          "start" : 1754791999289,
          "stop" : 1754791999289,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Body: None",
        "time" : {
          "start" : 1754791999289,
          "stop" : 1754791999289,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Response:",
      "time" : {
        "start" : 1754791999289,
        "stop" : 1754791999289,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Status code: 502",
        "time" : {
          "start" : 1754791999289,
          "stop" : 1754791999289,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "JSON: <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
        "time" : {
          "start" : 1754791999289,
          "stop" : 1754791999289,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 404 == Response status code: 502",
      "time" : {
        "start" : 1754791999289,
        "stop" : 1754791999289,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 502\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 8,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "severity",
    "value" : "critical"
  }, {
    "name" : "epic",
    "value" : "Connection DB"
  }, {
    "name" : "suite",
    "value" : "GET"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestGET"
  }, {
    "name" : "host",
    "value" : "pkrvmsl9tci6h6u"
  }, {
    "name" : "thread",
    "value" : "2576-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_get"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "critical",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 3,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 14,
        "unknown" : 0,
        "total" : 17
      },
      "items" : [ {
        "uid" : "4b276a9e97ea72fe",
        "reportUrl" : "https://lambotik.github.io/Oblache/466//#testresult/4b276a9e97ea72fe",
        "status" : "passed",
        "time" : {
          "start" : 1754704782709,
          "stop" : 1754704783001,
          "duration" : 292
        }
      }, {
        "uid" : "19288e579096fb1",
        "reportUrl" : "https://lambotik.github.io/Oblache/465//#testresult/19288e579096fb1",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1754618957343,
          "stop" : 1754618957823,
          "duration" : 480
        }
      }, {
        "uid" : "b02ebf474dfb9f90",
        "reportUrl" : "https://lambotik.github.io/Oblache/464//#testresult/b02ebf474dfb9f90",
        "status" : "passed",
        "time" : {
          "start" : 1754532708912,
          "stop" : 1754532709386,
          "duration" : 474
        }
      }, {
        "uid" : "ee319a474480bc7c",
        "reportUrl" : "https://lambotik.github.io/Oblache/463//#testresult/ee319a474480bc7c",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 502",
        "time" : {
          "start" : 1754446172878,
          "stop" : 1754446173344,
          "duration" : 466
        }
      }, {
        "uid" : "68c457814d61b333",
        "reportUrl" : "https://lambotik.github.io/Oblache/462//#testresult/68c457814d61b333",
        "status" : "passed",
        "time" : {
          "start" : 1754359963626,
          "stop" : 1754359963960,
          "duration" : 334
        }
      }, {
        "uid" : "19197b9da3d2cc52",
        "reportUrl" : "https://lambotik.github.io/Oblache/461//#testresult/19197b9da3d2cc52",
        "status" : "passed",
        "time" : {
          "start" : 1754274287654,
          "stop" : 1754274287997,
          "duration" : 343
        }
      }, {
        "uid" : "b072f795816d238a",
        "reportUrl" : "https://lambotik.github.io/Oblache/460//#testresult/b072f795816d238a",
        "status" : "passed",
        "time" : {
          "start" : 1754187951076,
          "stop" : 1754187951564,
          "duration" : 488
        }
      }, {
        "uid" : "4616755a5311255f",
        "reportUrl" : "https://lambotik.github.io/Oblache/459//#testresult/4616755a5311255f",
        "status" : "passed",
        "time" : {
          "start" : 1754100283854,
          "stop" : 1754100284197,
          "duration" : 343
        }
      }, {
        "uid" : "166c9f38530c338a",
        "reportUrl" : "https://lambotik.github.io/Oblache/458//#testresult/166c9f38530c338a",
        "status" : "passed",
        "time" : {
          "start" : 1754015205705,
          "stop" : 1754015205985,
          "duration" : 280
        }
      }, {
        "uid" : "e6d172d1a115edbb",
        "reportUrl" : "https://lambotik.github.io/Oblache/457//#testresult/e6d172d1a115edbb",
        "status" : "passed",
        "time" : {
          "start" : 1753927785475,
          "stop" : 1753927785847,
          "duration" : 372
        }
      }, {
        "uid" : "8b3afb9e664d3bd0",
        "reportUrl" : "https://lambotik.github.io/Oblache/456//#testresult/8b3afb9e664d3bd0",
        "status" : "passed",
        "time" : {
          "start" : 1753841387841,
          "stop" : 1753841388174,
          "duration" : 333
        }
      }, {
        "uid" : "5de4de35af982261",
        "reportUrl" : "https://lambotik.github.io/Oblache/455//#testresult/5de4de35af982261",
        "status" : "passed",
        "time" : {
          "start" : 1753755947079,
          "stop" : 1753755947567,
          "duration" : 488
        }
      }, {
        "uid" : "fd7568e58b8f1019",
        "reportUrl" : "https://lambotik.github.io/Oblache/454//#testresult/fd7568e58b8f1019",
        "status" : "passed",
        "time" : {
          "start" : 1753668831401,
          "stop" : 1753668831862,
          "duration" : 461
        }
      }, {
        "uid" : "bb10fd481a041108",
        "reportUrl" : "https://lambotik.github.io/Oblache/453//#testresult/bb10fd481a041108",
        "status" : "passed",
        "time" : {
          "start" : 1753582968822,
          "stop" : 1753582969302,
          "duration" : 480
        }
      }, {
        "uid" : "80be7164e9f92684",
        "reportUrl" : "https://lambotik.github.io/Oblache/452//#testresult/80be7164e9f92684",
        "status" : "passed",
        "time" : {
          "start" : 1753495365777,
          "stop" : 1753495366056,
          "duration" : 279
        }
      }, {
        "uid" : "c07b6433a8421a30",
        "reportUrl" : "https://lambotik.github.io/Oblache/451//#testresult/c07b6433a8421a30",
        "status" : "passed",
        "time" : {
          "start" : 1753409206608,
          "stop" : 1753409206951,
          "duration" : 343
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "9fcae45fcfb3f857.json",
  "parameterValues" : [ ]
}