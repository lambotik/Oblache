{
  "uid" : "5fa6a62b7f3455ef",
  "name" : "POST registration email is taken for en-us",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_registration_email_is_taken_for_en_en",
  "historyId" : "01089481a801c3ca1d24c8f43d47f1d3",
  "time" : {
    "start" : 1743901863010,
    "stop" : 1743901863468,
    "duration" : 458
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 502",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7fe6451df4a0>\n\n    @allure.title('POST registration email is taken for en-us')\n    def test_post_registration_email_is_taken_for_en_en(self):\n        response = API.post_registration(\n            email=TestPOST.email,\n            old_password=TestPOST.old_password,\n            language=\"en-us\",\n            tos_agree=True)\n>       Checking.check_status_code(response, 400)\n\ntests_api/test_bd.py:174: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 400\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 502",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7fe6451df4a0>\n\n    @allure.title('POST registration email is taken for en-us')\n    def test_post_registration_email_is_taken_for_en_en(self):\n        response = API.post_registration(\n            email=TestPOST.email,\n            old_password=TestPOST.old_password,\n            language=\"en-us\",\n            tos_agree=True)\n>       Checking.check_status_code(response, 400)\n\ntests_api/test_bd.py:174: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 400\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "Endpoint: /register",
      "time" : {
        "start" : 1743901863467,
        "stop" : 1743901863467,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request:",
      "time" : {
        "start" : 1743901863467,
        "stop" : 1743901863468,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': 'None'}",
        "time" : {
          "start" : 1743901863468,
          "stop" : 1743901863468,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Body: \n                            {\n                            \"email\": email,\n                            \"password\": password,\n                            \"tos_agree\": True,\n                            \"language\": en-us\n                           }",
        "time" : {
          "start" : 1743901863468,
          "stop" : 1743901863468,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Response:",
      "time" : {
        "start" : 1743901863468,
        "stop" : 1743901863468,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Status code: 502",
        "time" : {
          "start" : 1743901863468,
          "stop" : 1743901863468,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "JSON: <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
        "time" : {
          "start" : 1743901863468,
          "stop" : 1743901863468,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 400 == Response status code: 502",
      "time" : {
        "start" : 1743901863468,
        "stop" : 1743901863468,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 502\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 8,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "fv-az1341-331"
  }, {
    "name" : "thread",
    "value" : "2519-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 11,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 141,
        "unknown" : 0,
        "total" : 152
      },
      "items" : [ {
        "uid" : "a67397a9d36a9e57",
        "reportUrl" : "https://lambotik.github.io/Oblache/363//#testresult/a67397a9d36a9e57",
        "status" : "passed",
        "time" : {
          "start" : 1743815133957,
          "stop" : 1743815134446,
          "duration" : 489
        }
      }, {
        "uid" : "85e96d54df246209",
        "reportUrl" : "https://lambotik.github.io/Oblache/362//#testresult/85e96d54df246209",
        "status" : "passed",
        "time" : {
          "start" : 1743728787756,
          "stop" : 1743728788388,
          "duration" : 632
        }
      }, {
        "uid" : "2765139a7e060736",
        "reportUrl" : "https://lambotik.github.io/Oblache/361//#testresult/2765139a7e060736",
        "status" : "passed",
        "time" : {
          "start" : 1743642404216,
          "stop" : 1743642404597,
          "duration" : 381
        }
      }, {
        "uid" : "1faf87c6fb5238d",
        "reportUrl" : "https://lambotik.github.io/Oblache/360//#testresult/1faf87c6fb5238d",
        "status" : "passed",
        "time" : {
          "start" : 1743556060657,
          "stop" : 1743556061030,
          "duration" : 373
        }
      }, {
        "uid" : "ab2f5d6fada7be36",
        "reportUrl" : "https://lambotik.github.io/Oblache/359//#testresult/ab2f5d6fada7be36",
        "status" : "passed",
        "time" : {
          "start" : 1743470095099,
          "stop" : 1743470095395,
          "duration" : 296
        }
      }, {
        "uid" : "ee0e1739b5f4be78",
        "reportUrl" : "https://lambotik.github.io/Oblache/358//#testresult/ee0e1739b5f4be78",
        "status" : "passed",
        "time" : {
          "start" : 1743383426618,
          "stop" : 1743383427120,
          "duration" : 502
        }
      }, {
        "uid" : "4acb513239c59706",
        "reportUrl" : "https://lambotik.github.io/Oblache/357//#testresult/4acb513239c59706",
        "status" : "passed",
        "time" : {
          "start" : 1743297096771,
          "stop" : 1743297097091,
          "duration" : 320
        }
      }, {
        "uid" : "649c9f0627c2793d",
        "reportUrl" : "https://lambotik.github.io/Oblache/356//#testresult/649c9f0627c2793d",
        "status" : "passed",
        "time" : {
          "start" : 1743210321185,
          "stop" : 1743210321505,
          "duration" : 320
        }
      }, {
        "uid" : "93df954af69c275a",
        "reportUrl" : "https://lambotik.github.io/Oblache/355//#testresult/93df954af69c275a",
        "status" : "passed",
        "time" : {
          "start" : 1743123954828,
          "stop" : 1743123955208,
          "duration" : 380
        }
      }, {
        "uid" : "8608aed4dcb3f2ac",
        "reportUrl" : "https://lambotik.github.io/Oblache/354//#testresult/8608aed4dcb3f2ac",
        "status" : "passed",
        "time" : {
          "start" : 1743037562426,
          "stop" : 1743037562806,
          "duration" : 380
        }
      }, {
        "uid" : "3521a64f23e06c14",
        "reportUrl" : "https://lambotik.github.io/Oblache/353//#testresult/3521a64f23e06c14",
        "status" : "passed",
        "time" : {
          "start" : 1742951172941,
          "stop" : 1742951173244,
          "duration" : 303
        }
      }, {
        "uid" : "32297694e4219af8",
        "reportUrl" : "https://lambotik.github.io/Oblache/352//#testresult/32297694e4219af8",
        "status" : "passed",
        "time" : {
          "start" : 1742864787926,
          "stop" : 1742864788230,
          "duration" : 304
        }
      }, {
        "uid" : "ef5474d19292576a",
        "reportUrl" : "https://lambotik.github.io/Oblache/351//#testresult/ef5474d19292576a",
        "status" : "passed",
        "time" : {
          "start" : 1742778484489,
          "stop" : 1742778485036,
          "duration" : 547
        }
      }, {
        "uid" : "f8ab76084f4368da",
        "reportUrl" : "https://lambotik.github.io/Oblache/350//#testresult/f8ab76084f4368da",
        "status" : "passed",
        "time" : {
          "start" : 1742692234971,
          "stop" : 1742692235349,
          "duration" : 378
        }
      }, {
        "uid" : "927838a5a5f50e34",
        "reportUrl" : "https://lambotik.github.io/Oblache/349//#testresult/927838a5a5f50e34",
        "status" : "passed",
        "time" : {
          "start" : 1742605473672,
          "stop" : 1742605473985,
          "duration" : 313
        }
      }, {
        "uid" : "2af735746571ce2",
        "reportUrl" : "https://lambotik.github.io/Oblache/348//#testresult/2af735746571ce2",
        "status" : "passed",
        "time" : {
          "start" : 1742519166765,
          "stop" : 1742519167285,
          "duration" : 520
        }
      }, {
        "uid" : "7f1c0e104adcaad9",
        "reportUrl" : "https://lambotik.github.io/Oblache/347//#testresult/7f1c0e104adcaad9",
        "status" : "passed",
        "time" : {
          "start" : 1742432675089,
          "stop" : 1742432675448,
          "duration" : 359
        }
      }, {
        "uid" : "c95233e58afd3c3b",
        "reportUrl" : "https://lambotik.github.io/Oblache/346//#testresult/c95233e58afd3c3b",
        "status" : "passed",
        "time" : {
          "start" : 1742346363880,
          "stop" : 1742346364186,
          "duration" : 306
        }
      }, {
        "uid" : "8efef6e2083aff7f",
        "reportUrl" : "https://lambotik.github.io/Oblache/345//#testresult/8efef6e2083aff7f",
        "status" : "passed",
        "time" : {
          "start" : 1742259914510,
          "stop" : 1742259915012,
          "duration" : 502
        }
      }, {
        "uid" : "ebea7c6c85386298",
        "reportUrl" : "https://lambotik.github.io/Oblache/344//#testresult/ebea7c6c85386298",
        "status" : "passed",
        "time" : {
          "start" : 1742173640398,
          "stop" : 1742173640705,
          "duration" : 307
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "5fa6a62b7f3455ef.json",
  "parameterValues" : [ ]
}