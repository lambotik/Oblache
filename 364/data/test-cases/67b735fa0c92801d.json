{
  "uid" : "67b735fa0c92801d",
  "name" : "POST registration email is taken for bg-bg",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_registration_email_is_taken_for_bg_bg",
  "historyId" : "c7811bd494d11b8399f0b3c44a1e89fb",
  "time" : {
    "start" : 1743901863479,
    "stop" : 1743901863754,
    "duration" : 275
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 502",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7fe6451df5c0>\n\n    @allure.title('POST registration email is taken for bg-bg')\n    def test_post_registration_email_is_taken_for_bg_bg(self):\n        response = API.post_registration(\n            email=TestPOST.email,\n            old_password=TestPOST.old_password,\n            language=\"bg-bg\",\n            tos_agree=True)\n>       Checking.check_status_code(response, 400)\n\ntests_api/test_bd.py:185: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 400\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 502",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7fe6451df5c0>\n\n    @allure.title('POST registration email is taken for bg-bg')\n    def test_post_registration_email_is_taken_for_bg_bg(self):\n        response = API.post_registration(\n            email=TestPOST.email,\n            old_password=TestPOST.old_password,\n            language=\"bg-bg\",\n            tos_agree=True)\n>       Checking.check_status_code(response, 400)\n\ntests_api/test_bd.py:185: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 400\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "Endpoint: /register",
      "time" : {
        "start" : 1743901863753,
        "stop" : 1743901863753,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request:",
      "time" : {
        "start" : 1743901863753,
        "stop" : 1743901863753,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': 'None'}",
        "time" : {
          "start" : 1743901863753,
          "stop" : 1743901863753,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Body: \n                            {\n                            \"email\": email,\n                            \"password\": password,\n                            \"tos_agree\": True,\n                            \"language\": bg-bg\n                           }",
        "time" : {
          "start" : 1743901863753,
          "stop" : 1743901863753,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Response:",
      "time" : {
        "start" : 1743901863753,
        "stop" : 1743901863754,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Status code: 502",
        "time" : {
          "start" : 1743901863754,
          "stop" : 1743901863754,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "JSON: <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
        "time" : {
          "start" : 1743901863754,
          "stop" : 1743901863754,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 400 == Response status code: 502",
      "time" : {
        "start" : 1743901863754,
        "stop" : 1743901863754,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 502\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 8,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "fv-az1341-331"
  }, {
    "name" : "thread",
    "value" : "2519-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 11,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 141,
        "unknown" : 0,
        "total" : 152
      },
      "items" : [ {
        "uid" : "e3c829817f4485aa",
        "reportUrl" : "https://lambotik.github.io/Oblache/363//#testresult/e3c829817f4485aa",
        "status" : "passed",
        "time" : {
          "start" : 1743815134448,
          "stop" : 1743815134769,
          "duration" : 321
        }
      }, {
        "uid" : "5555151c33053089",
        "reportUrl" : "https://lambotik.github.io/Oblache/362//#testresult/5555151c33053089",
        "status" : "passed",
        "time" : {
          "start" : 1743728788390,
          "stop" : 1743728788902,
          "duration" : 512
        }
      }, {
        "uid" : "44ae6ad6785ae560",
        "reportUrl" : "https://lambotik.github.io/Oblache/361//#testresult/44ae6ad6785ae560",
        "status" : "passed",
        "time" : {
          "start" : 1743642404599,
          "stop" : 1743642404968,
          "duration" : 369
        }
      }, {
        "uid" : "154af08cdf8675dc",
        "reportUrl" : "https://lambotik.github.io/Oblache/360//#testresult/154af08cdf8675dc",
        "status" : "passed",
        "time" : {
          "start" : 1743556061032,
          "stop" : 1743556061401,
          "duration" : 369
        }
      }, {
        "uid" : "d4bf5a629cef2d8c",
        "reportUrl" : "https://lambotik.github.io/Oblache/359//#testresult/d4bf5a629cef2d8c",
        "status" : "passed",
        "time" : {
          "start" : 1743470095396,
          "stop" : 1743470095718,
          "duration" : 322
        }
      }, {
        "uid" : "37e5bd8117eb776e",
        "reportUrl" : "https://lambotik.github.io/Oblache/358//#testresult/37e5bd8117eb776e",
        "status" : "passed",
        "time" : {
          "start" : 1743383427122,
          "stop" : 1743383427629,
          "duration" : 507
        }
      }, {
        "uid" : "20674d3cdb1e64f0",
        "reportUrl" : "https://lambotik.github.io/Oblache/357//#testresult/20674d3cdb1e64f0",
        "status" : "passed",
        "time" : {
          "start" : 1743297097092,
          "stop" : 1743297097463,
          "duration" : 371
        }
      }, {
        "uid" : "7c50bf7b2c451a1f",
        "reportUrl" : "https://lambotik.github.io/Oblache/356//#testresult/7c50bf7b2c451a1f",
        "status" : "passed",
        "time" : {
          "start" : 1743210321506,
          "stop" : 1743210321875,
          "duration" : 369
        }
      }, {
        "uid" : "9a4277c94fcf72fc",
        "reportUrl" : "https://lambotik.github.io/Oblache/355//#testresult/9a4277c94fcf72fc",
        "status" : "passed",
        "time" : {
          "start" : 1743123955210,
          "stop" : 1743123955573,
          "duration" : 363
        }
      }, {
        "uid" : "2325d78505001593",
        "reportUrl" : "https://lambotik.github.io/Oblache/354//#testresult/2325d78505001593",
        "status" : "passed",
        "time" : {
          "start" : 1743037562807,
          "stop" : 1743037563179,
          "duration" : 372
        }
      }, {
        "uid" : "f3ff346cc04a64",
        "reportUrl" : "https://lambotik.github.io/Oblache/353//#testresult/f3ff346cc04a64",
        "status" : "passed",
        "time" : {
          "start" : 1742951173245,
          "stop" : 1742951173551,
          "duration" : 306
        }
      }, {
        "uid" : "f2600f25d1853911",
        "reportUrl" : "https://lambotik.github.io/Oblache/352//#testresult/f2600f25d1853911",
        "status" : "passed",
        "time" : {
          "start" : 1742864788232,
          "stop" : 1742864788538,
          "duration" : 306
        }
      }, {
        "uid" : "e65eeef24d1716f9",
        "reportUrl" : "https://lambotik.github.io/Oblache/351//#testresult/e65eeef24d1716f9",
        "status" : "passed",
        "time" : {
          "start" : 1742778485038,
          "stop" : 1742778485542,
          "duration" : 504
        }
      }, {
        "uid" : "1f62176dea7fff4f",
        "reportUrl" : "https://lambotik.github.io/Oblache/350//#testresult/1f62176dea7fff4f",
        "status" : "passed",
        "time" : {
          "start" : 1742692235350,
          "stop" : 1742692235747,
          "duration" : 397
        }
      }, {
        "uid" : "8064959ee1724d42",
        "reportUrl" : "https://lambotik.github.io/Oblache/349//#testresult/8064959ee1724d42",
        "status" : "passed",
        "time" : {
          "start" : 1742605473987,
          "stop" : 1742605474376,
          "duration" : 389
        }
      }, {
        "uid" : "7d85a5699a5aa2f",
        "reportUrl" : "https://lambotik.github.io/Oblache/348//#testresult/7d85a5699a5aa2f",
        "status" : "passed",
        "time" : {
          "start" : 1742519167287,
          "stop" : 1742519167789,
          "duration" : 502
        }
      }, {
        "uid" : "3175c681421d89c0",
        "reportUrl" : "https://lambotik.github.io/Oblache/347//#testresult/3175c681421d89c0",
        "status" : "passed",
        "time" : {
          "start" : 1742432675450,
          "stop" : 1742432675809,
          "duration" : 359
        }
      }, {
        "uid" : "6a5f1718d9f2a9c",
        "reportUrl" : "https://lambotik.github.io/Oblache/346//#testresult/6a5f1718d9f2a9c",
        "status" : "passed",
        "time" : {
          "start" : 1742346364188,
          "stop" : 1742346364668,
          "duration" : 480
        }
      }, {
        "uid" : "6c15b02c1294588a",
        "reportUrl" : "https://lambotik.github.io/Oblache/345//#testresult/6c15b02c1294588a",
        "status" : "passed",
        "time" : {
          "start" : 1742259915013,
          "stop" : 1742259915525,
          "duration" : 512
        }
      }, {
        "uid" : "e4f1545062aeab07",
        "reportUrl" : "https://lambotik.github.io/Oblache/344//#testresult/e4f1545062aeab07",
        "status" : "passed",
        "time" : {
          "start" : 1742173640707,
          "stop" : 1742173641019,
          "duration" : 312
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "67b735fa0c92801d.json",
  "parameterValues" : [ ]
}