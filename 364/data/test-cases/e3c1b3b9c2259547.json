{
  "uid" : "e3c1b3b9c2259547",
  "name" : "POST is logged",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_is_logged",
  "historyId" : "0bc19031fd70da12edd5e058e257bd16",
  "time" : {
    "start" : 1743901864676,
    "stop" : 1743901865038,
    "duration" : 362
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 502",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7fe6451df920>\n\n    @allure.title('POST is logged')\n    def test_post_is_logged(self):\n        response = API.post_is_logged(token=TestPOST.token)\n>       Checking.check_status_code(response, 200)\n\ntests_api/test_bd.py:210: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 502",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7fe6451df920>\n\n    @allure.title('POST is logged')\n    def test_post_is_logged(self):\n        response = API.post_is_logged(token=TestPOST.token)\n>       Checking.check_status_code(response, 200)\n\ntests_api/test_bd.py:210: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "post_is_logged",
      "time" : {
        "start" : 1743901864676,
        "stop" : 1743901865037,
        "duration" : 361
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /is_logged",
        "time" : {
          "start" : 1743901865037,
          "stop" : 1743901865037,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1743901865037,
          "stop" : 1743901865037,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': 'None'}",
          "time" : {
            "start" : 1743901865037,
            "stop" : 1743901865037,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: None",
          "time" : {
            "start" : 1743901865037,
            "stop" : 1743901865037,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1743901865037,
          "stop" : 1743901865037,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 502",
          "time" : {
            "start" : 1743901865037,
            "stop" : 1743901865037,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
          "time" : {
            "start" : 1743901865037,
            "stop" : 1743901865037,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 7,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 200 == Response status code: 502",
      "time" : {
        "start" : 1743901865037,
        "stop" : 1743901865038,
        "duration" : 1
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 502\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 9,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "fv-az1341-331"
  }, {
    "name" : "thread",
    "value" : "2519-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 11,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 141,
        "unknown" : 0,
        "total" : 152
      },
      "items" : [ {
        "uid" : "4c48af4ba0658477",
        "reportUrl" : "https://lambotik.github.io/Oblache/363//#testresult/4c48af4ba0658477",
        "status" : "passed",
        "time" : {
          "start" : 1743815135413,
          "stop" : 1743815135728,
          "duration" : 315
        }
      }, {
        "uid" : "738cd16de5367d4a",
        "reportUrl" : "https://lambotik.github.io/Oblache/362//#testresult/738cd16de5367d4a",
        "status" : "passed",
        "time" : {
          "start" : 1743728789940,
          "stop" : 1743728790458,
          "duration" : 518
        }
      }, {
        "uid" : "5f07284898075e2",
        "reportUrl" : "https://lambotik.github.io/Oblache/361//#testresult/5f07284898075e2",
        "status" : "passed",
        "time" : {
          "start" : 1743642405710,
          "stop" : 1743642406071,
          "duration" : 361
        }
      }, {
        "uid" : "f2708c0f7983d596",
        "reportUrl" : "https://lambotik.github.io/Oblache/360//#testresult/f2708c0f7983d596",
        "status" : "passed",
        "time" : {
          "start" : 1743556062179,
          "stop" : 1743556062546,
          "duration" : 367
        }
      }, {
        "uid" : "41febadef9fe957a",
        "reportUrl" : "https://lambotik.github.io/Oblache/359//#testresult/41febadef9fe957a",
        "status" : "passed",
        "time" : {
          "start" : 1743470096336,
          "stop" : 1743470096643,
          "duration" : 307
        }
      }, {
        "uid" : "93e4301983d85f5e",
        "reportUrl" : "https://lambotik.github.io/Oblache/358//#testresult/93e4301983d85f5e",
        "status" : "passed",
        "time" : {
          "start" : 1743383428639,
          "stop" : 1743383429152,
          "duration" : 513
        }
      }, {
        "uid" : "2d5e0c52f428d870",
        "reportUrl" : "https://lambotik.github.io/Oblache/357//#testresult/2d5e0c52f428d870",
        "status" : "passed",
        "time" : {
          "start" : 1743297098116,
          "stop" : 1743297098430,
          "duration" : 314
        }
      }, {
        "uid" : "2dced9557259c629",
        "reportUrl" : "https://lambotik.github.io/Oblache/356//#testresult/2dced9557259c629",
        "status" : "passed",
        "time" : {
          "start" : 1743210322508,
          "stop" : 1743210322875,
          "duration" : 367
        }
      }, {
        "uid" : "5d5c3708befdc18a",
        "reportUrl" : "https://lambotik.github.io/Oblache/355//#testresult/5d5c3708befdc18a",
        "status" : "passed",
        "time" : {
          "start" : 1743123956324,
          "stop" : 1743123956691,
          "duration" : 367
        }
      }, {
        "uid" : "37056bf107f79bab",
        "reportUrl" : "https://lambotik.github.io/Oblache/354//#testresult/37056bf107f79bab",
        "status" : "passed",
        "time" : {
          "start" : 1743037563902,
          "stop" : 1743037564256,
          "duration" : 354
        }
      }, {
        "uid" : "44e71aa86f0a9ec2",
        "reportUrl" : "https://lambotik.github.io/Oblache/353//#testresult/44e71aa86f0a9ec2",
        "status" : "passed",
        "time" : {
          "start" : 1742951174226,
          "stop" : 1742951174583,
          "duration" : 357
        }
      }, {
        "uid" : "84d8569693b05cb",
        "reportUrl" : "https://lambotik.github.io/Oblache/352//#testresult/84d8569693b05cb",
        "status" : "passed",
        "time" : {
          "start" : 1742864789170,
          "stop" : 1742864789473,
          "duration" : 303
        }
      }, {
        "uid" : "6f823bc7b58cd4f0",
        "reportUrl" : "https://lambotik.github.io/Oblache/351//#testresult/6f823bc7b58cd4f0",
        "status" : "passed",
        "time" : {
          "start" : 1742778486569,
          "stop" : 1742778487074,
          "duration" : 505
        }
      }, {
        "uid" : "fea010f89483dc03",
        "reportUrl" : "https://lambotik.github.io/Oblache/350//#testresult/fea010f89483dc03",
        "status" : "passed",
        "time" : {
          "start" : 1742692236473,
          "stop" : 1742692236839,
          "duration" : 366
        }
      }, {
        "uid" : "2b60a8bffd30db8b",
        "reportUrl" : "https://lambotik.github.io/Oblache/349//#testresult/2b60a8bffd30db8b",
        "status" : "passed",
        "time" : {
          "start" : 1742605475021,
          "stop" : 1742605475405,
          "duration" : 384
        }
      }, {
        "uid" : "17edd87188fe3adc",
        "reportUrl" : "https://lambotik.github.io/Oblache/348//#testresult/17edd87188fe3adc",
        "status" : "passed",
        "time" : {
          "start" : 1742519168842,
          "stop" : 1742519169348,
          "duration" : 506
        }
      }, {
        "uid" : "2a0ff640a1959b4e",
        "reportUrl" : "https://lambotik.github.io/Oblache/347//#testresult/2a0ff640a1959b4e",
        "status" : "passed",
        "time" : {
          "start" : 1742432676543,
          "stop" : 1742432676896,
          "duration" : 353
        }
      }, {
        "uid" : "67dede9b452aa329",
        "reportUrl" : "https://lambotik.github.io/Oblache/346//#testresult/67dede9b452aa329",
        "status" : "passed",
        "time" : {
          "start" : 1742346365366,
          "stop" : 1742346365680,
          "duration" : 314
        }
      }, {
        "uid" : "3944b692eaf00c22",
        "reportUrl" : "https://lambotik.github.io/Oblache/345//#testresult/3944b692eaf00c22",
        "status" : "passed",
        "time" : {
          "start" : 1742259916544,
          "stop" : 1742259917048,
          "duration" : 504
        }
      }, {
        "uid" : "672f09797951d344",
        "reportUrl" : "https://lambotik.github.io/Oblache/344//#testresult/672f09797951d344",
        "status" : "passed",
        "time" : {
          "start" : 1742173641637,
          "stop" : 1742173641941,
          "duration" : 304
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "e3c1b3b9c2259547.json",
  "parameterValues" : [ ]
}