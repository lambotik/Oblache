{
  "uid" : "f8635e180d161121",
  "name" : "POST registration email is taken for unsupported languages",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_registration_email_is_taken_for_unsupported_languages",
  "historyId" : "0f497336a453dab6752b8ca2c68cb0db",
  "time" : {
    "start" : 1743901863765,
    "stop" : 1743901864208,
    "duration" : 443
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 502",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7fe6451df6e0>\n\n    @allure.title('POST registration email is taken for unsupported languages')\n    def test_post_registration_email_is_taken_for_unsupported_languages(self):\n        response = API.post_registration(\n            email=TestPOST.email,\n            old_password=TestPOST.old_password,\n            language=\"ru-ru\",\n            tos_agree=True)\n        status_code = response\n>       Checking.check_status_code(status_code, 400)\n\ntests_api/test_bd.py:197: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 400\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 502",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7fe6451df6e0>\n\n    @allure.title('POST registration email is taken for unsupported languages')\n    def test_post_registration_email_is_taken_for_unsupported_languages(self):\n        response = API.post_registration(\n            email=TestPOST.email,\n            old_password=TestPOST.old_password,\n            language=\"ru-ru\",\n            tos_agree=True)\n        status_code = response\n>       Checking.check_status_code(status_code, 400)\n\ntests_api/test_bd.py:197: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 400\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "Endpoint: /register",
      "time" : {
        "start" : 1743901864208,
        "stop" : 1743901864208,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request:",
      "time" : {
        "start" : 1743901864208,
        "stop" : 1743901864208,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': 'None'}",
        "time" : {
          "start" : 1743901864208,
          "stop" : 1743901864208,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Body: \n                            {\n                            \"email\": email,\n                            \"password\": password,\n                            \"tos_agree\": True,\n                            \"language\": ru-ru\n                           }",
        "time" : {
          "start" : 1743901864208,
          "stop" : 1743901864208,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Response:",
      "time" : {
        "start" : 1743901864208,
        "stop" : 1743901864208,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Status code: 502",
        "time" : {
          "start" : 1743901864208,
          "stop" : 1743901864208,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "JSON: <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
        "time" : {
          "start" : 1743901864208,
          "stop" : 1743901864208,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 400 == Response status code: 502",
      "time" : {
        "start" : 1743901864208,
        "stop" : 1743901864208,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 502\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 8,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "fv-az1341-331"
  }, {
    "name" : "thread",
    "value" : "2519-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 11,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 141,
        "unknown" : 0,
        "total" : 152
      },
      "items" : [ {
        "uid" : "281fcde316da9dfe",
        "reportUrl" : "https://lambotik.github.io/Oblache/363//#testresult/281fcde316da9dfe",
        "status" : "passed",
        "time" : {
          "start" : 1743815134770,
          "stop" : 1743815135088,
          "duration" : 318
        }
      }, {
        "uid" : "7e08f42c69885ded",
        "reportUrl" : "https://lambotik.github.io/Oblache/362//#testresult/7e08f42c69885ded",
        "status" : "passed",
        "time" : {
          "start" : 1743728788903,
          "stop" : 1743728789412,
          "duration" : 509
        }
      }, {
        "uid" : "b726c040b9c4b2cf",
        "reportUrl" : "https://lambotik.github.io/Oblache/361//#testresult/b726c040b9c4b2cf",
        "status" : "passed",
        "time" : {
          "start" : 1743642404970,
          "stop" : 1743642405339,
          "duration" : 369
        }
      }, {
        "uid" : "3501634197c1e4bc",
        "reportUrl" : "https://lambotik.github.io/Oblache/360//#testresult/3501634197c1e4bc",
        "status" : "passed",
        "time" : {
          "start" : 1743556061403,
          "stop" : 1743556061770,
          "duration" : 367
        }
      }, {
        "uid" : "5b7daebbdea0433",
        "reportUrl" : "https://lambotik.github.io/Oblache/359//#testresult/5b7daebbdea0433",
        "status" : "passed",
        "time" : {
          "start" : 1743470095720,
          "stop" : 1743470096029,
          "duration" : 309
        }
      }, {
        "uid" : "9c12114c7d2c12b5",
        "reportUrl" : "https://lambotik.github.io/Oblache/358//#testresult/9c12114c7d2c12b5",
        "status" : "passed",
        "time" : {
          "start" : 1743383427630,
          "stop" : 1743383428127,
          "duration" : 497
        }
      }, {
        "uid" : "e14eafd9fa03d1f4",
        "reportUrl" : "https://lambotik.github.io/Oblache/357//#testresult/e14eafd9fa03d1f4",
        "status" : "passed",
        "time" : {
          "start" : 1743297097464,
          "stop" : 1743297097791,
          "duration" : 327
        }
      }, {
        "uid" : "dad561093bf5ed2e",
        "reportUrl" : "https://lambotik.github.io/Oblache/356//#testresult/dad561093bf5ed2e",
        "status" : "passed",
        "time" : {
          "start" : 1743210321877,
          "stop" : 1743210322190,
          "duration" : 313
        }
      }, {
        "uid" : "f85a243af96a1be5",
        "reportUrl" : "https://lambotik.github.io/Oblache/355//#testresult/f85a243af96a1be5",
        "status" : "passed",
        "time" : {
          "start" : 1743123955574,
          "stop" : 1743123955952,
          "duration" : 378
        }
      }, {
        "uid" : "c7e398e963a284ce",
        "reportUrl" : "https://lambotik.github.io/Oblache/354//#testresult/c7e398e963a284ce",
        "status" : "passed",
        "time" : {
          "start" : 1743037563180,
          "stop" : 1743037563539,
          "duration" : 359
        }
      }, {
        "uid" : "41e448d2f726e439",
        "reportUrl" : "https://lambotik.github.io/Oblache/353//#testresult/41e448d2f726e439",
        "status" : "passed",
        "time" : {
          "start" : 1742951173553,
          "stop" : 1742951173858,
          "duration" : 305
        }
      }, {
        "uid" : "dabec5d969575765",
        "reportUrl" : "https://lambotik.github.io/Oblache/352//#testresult/dabec5d969575765",
        "status" : "passed",
        "time" : {
          "start" : 1742864788540,
          "stop" : 1742864788845,
          "duration" : 305
        }
      }, {
        "uid" : "1e306a25f2a5b6dd",
        "reportUrl" : "https://lambotik.github.io/Oblache/351//#testresult/1e306a25f2a5b6dd",
        "status" : "passed",
        "time" : {
          "start" : 1742778485544,
          "stop" : 1742778486050,
          "duration" : 506
        }
      }, {
        "uid" : "da0a634a94fe21e1",
        "reportUrl" : "https://lambotik.github.io/Oblache/350//#testresult/da0a634a94fe21e1",
        "status" : "passed",
        "time" : {
          "start" : 1742692235749,
          "stop" : 1742692236109,
          "duration" : 360
        }
      }, {
        "uid" : "7b1ac7aea08acc30",
        "reportUrl" : "https://lambotik.github.io/Oblache/349//#testresult/7b1ac7aea08acc30",
        "status" : "passed",
        "time" : {
          "start" : 1742605474378,
          "stop" : 1742605474697,
          "duration" : 319
        }
      }, {
        "uid" : "c1ae41d593aecf49",
        "reportUrl" : "https://lambotik.github.io/Oblache/348//#testresult/c1ae41d593aecf49",
        "status" : "passed",
        "time" : {
          "start" : 1742519167790,
          "stop" : 1742519168316,
          "duration" : 526
        }
      }, {
        "uid" : "9ba1da9c0c861bd5",
        "reportUrl" : "https://lambotik.github.io/Oblache/347//#testresult/9ba1da9c0c861bd5",
        "status" : "passed",
        "time" : {
          "start" : 1742432675811,
          "stop" : 1742432676180,
          "duration" : 369
        }
      }, {
        "uid" : "2117dc38d5204de4",
        "reportUrl" : "https://lambotik.github.io/Oblache/346//#testresult/2117dc38d5204de4",
        "status" : "passed",
        "time" : {
          "start" : 1742346364670,
          "stop" : 1742346365055,
          "duration" : 385
        }
      }, {
        "uid" : "de2ef932ac24f247",
        "reportUrl" : "https://lambotik.github.io/Oblache/345//#testresult/de2ef932ac24f247",
        "status" : "passed",
        "time" : {
          "start" : 1742259915527,
          "stop" : 1742259916028,
          "duration" : 501
        }
      }, {
        "uid" : "42347b919a886bc9",
        "reportUrl" : "https://lambotik.github.io/Oblache/344//#testresult/42347b919a886bc9",
        "status" : "passed",
        "time" : {
          "start" : 1742173641020,
          "stop" : 1742173641324,
          "duration" : 304
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "f8635e180d161121.json",
  "parameterValues" : [ ]
}