{
  "uid" : "4f0e4c16feba1ac1",
  "name" : "POST registration Bulgaria language not agree.",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_registration_for_bulgaria_language_not_agree",
  "historyId" : "537e92787106744f03e7bc213d25350a",
  "time" : {
    "start" : 1743901862724,
    "stop" : 1743901862999,
    "duration" : 275
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 502",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7fe6451deab0>\n\n    @allure.title('POST registration Bulgaria language not agree.')\n    def test_post_registration_for_bulgaria_language_not_agree(self):\n        response = API.post_registration_variety_email(\n            mail=random.choice(['gmail', 'mail', 'yandex']),\n            old_password=TestPOST.old_password,\n            prefix='bg',\n            language='bg-bg',\n            tos_agree=False)\n>       Checking.check_status_code(response, 400)\n\ntests_api/test_bd.py:163: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 400\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 502",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7fe6451deab0>\n\n    @allure.title('POST registration Bulgaria language not agree.')\n    def test_post_registration_for_bulgaria_language_not_agree(self):\n        response = API.post_registration_variety_email(\n            mail=random.choice(['gmail', 'mail', 'yandex']),\n            old_password=TestPOST.old_password,\n            prefix='bg',\n            language='bg-bg',\n            tos_agree=False)\n>       Checking.check_status_code(response, 400)\n\ntests_api/test_bd.py:163: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 400\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "post_registration_variety_email",
      "time" : {
        "start" : 1743901862724,
        "stop" : 1743901862999,
        "duration" : 275
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /register",
        "time" : {
          "start" : 1743901862999,
          "stop" : 1743901862999,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1743901862999,
          "stop" : 1743901862999,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': 'None'}",
          "time" : {
            "start" : 1743901862999,
            "stop" : 1743901862999,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: \n                                {\n                                \"email\": f'aqa2025_04_06_01_10_55@yandex.bg',\n                                \"password\": password,\n                                \"tos_agree\": False,\n                                \"language\": bg-bg\n                               }",
          "time" : {
            "start" : 1743901862999,
            "stop" : 1743901862999,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1743901862999,
          "stop" : 1743901862999,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 502",
          "time" : {
            "start" : 1743901862999,
            "stop" : 1743901862999,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
          "time" : {
            "start" : 1743901862999,
            "stop" : 1743901862999,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 7,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 400 == Response status code: 502",
      "time" : {
        "start" : 1743901862999,
        "stop" : 1743901862999,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 502\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 9,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "fv-az1341-331"
  }, {
    "name" : "thread",
    "value" : "2519-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 11,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 140,
        "unknown" : 0,
        "total" : 152
      },
      "items" : [ {
        "uid" : "cdf5752e9fc75dcb",
        "reportUrl" : "https://lambotik.github.io/Oblache/363//#testresult/cdf5752e9fc75dcb",
        "status" : "passed",
        "time" : {
          "start" : 1743815133638,
          "stop" : 1743815133955,
          "duration" : 317
        }
      }, {
        "uid" : "3bdc15633a2b7c33",
        "reportUrl" : "https://lambotik.github.io/Oblache/362//#testresult/3bdc15633a2b7c33",
        "status" : "passed",
        "time" : {
          "start" : 1743728787248,
          "stop" : 1743728787755,
          "duration" : 507
        }
      }, {
        "uid" : "7382460dd4aecdac",
        "reportUrl" : "https://lambotik.github.io/Oblache/361//#testresult/7382460dd4aecdac",
        "status" : "passed",
        "time" : {
          "start" : 1743642403848,
          "stop" : 1743642404214,
          "duration" : 366
        }
      }, {
        "uid" : "d26197d0e1a170d4",
        "reportUrl" : "https://lambotik.github.io/Oblache/360//#testresult/d26197d0e1a170d4",
        "status" : "passed",
        "time" : {
          "start" : 1743556060290,
          "stop" : 1743556060655,
          "duration" : 365
        }
      }, {
        "uid" : "74355caac2209d32",
        "reportUrl" : "https://lambotik.github.io/Oblache/359//#testresult/74355caac2209d32",
        "status" : "passed",
        "time" : {
          "start" : 1743470094800,
          "stop" : 1743470095097,
          "duration" : 297
        }
      }, {
        "uid" : "57ef4e737c15bf03",
        "reportUrl" : "https://lambotik.github.io/Oblache/358//#testresult/57ef4e737c15bf03",
        "status" : "passed",
        "time" : {
          "start" : 1743383426119,
          "stop" : 1743383426617,
          "duration" : 498
        }
      }, {
        "uid" : "359b9503d4c4fea6",
        "reportUrl" : "https://lambotik.github.io/Oblache/357//#testresult/359b9503d4c4fea6",
        "status" : "passed",
        "time" : {
          "start" : 1743297096397,
          "stop" : 1743297096770,
          "duration" : 373
        }
      }, {
        "uid" : "75aa7db049e5c860",
        "reportUrl" : "https://lambotik.github.io/Oblache/356//#testresult/75aa7db049e5c860",
        "status" : "passed",
        "time" : {
          "start" : 1743210320871,
          "stop" : 1743210321183,
          "duration" : 312
        }
      }, {
        "uid" : "16a7014899b98285",
        "reportUrl" : "https://lambotik.github.io/Oblache/355//#testresult/16a7014899b98285",
        "status" : "passed",
        "time" : {
          "start" : 1743123954454,
          "stop" : 1743123954827,
          "duration" : 373
        }
      }, {
        "uid" : "c194953b633de0d",
        "reportUrl" : "https://lambotik.github.io/Oblache/354//#testresult/c194953b633de0d",
        "status" : "passed",
        "time" : {
          "start" : 1743037562031,
          "stop" : 1743037562424,
          "duration" : 393
        }
      }, {
        "uid" : "8b5f7ee45886e692",
        "reportUrl" : "https://lambotik.github.io/Oblache/353//#testresult/8b5f7ee45886e692",
        "status" : "passed",
        "time" : {
          "start" : 1742951172634,
          "stop" : 1742951172939,
          "duration" : 305
        }
      }, {
        "uid" : "b10d6124b233d47",
        "reportUrl" : "https://lambotik.github.io/Oblache/352//#testresult/b10d6124b233d47",
        "status" : "passed",
        "time" : {
          "start" : 1742864787602,
          "stop" : 1742864787925,
          "duration" : 323
        }
      }, {
        "uid" : "b9fab313b144e833",
        "reportUrl" : "https://lambotik.github.io/Oblache/351//#testresult/b9fab313b144e833",
        "status" : "passed",
        "time" : {
          "start" : 1742778483990,
          "stop" : 1742778484488,
          "duration" : 498
        }
      }, {
        "uid" : "c455990922f6ddc8",
        "reportUrl" : "https://lambotik.github.io/Oblache/350//#testresult/c455990922f6ddc8",
        "status" : "passed",
        "time" : {
          "start" : 1742692234592,
          "stop" : 1742692234970,
          "duration" : 378
        }
      }, {
        "uid" : "9a1487b0f9db80d0",
        "reportUrl" : "https://lambotik.github.io/Oblache/349//#testresult/9a1487b0f9db80d0",
        "status" : "passed",
        "time" : {
          "start" : 1742605473340,
          "stop" : 1742605473670,
          "duration" : 330
        }
      }, {
        "uid" : "ee2cdb00ddb62d9b",
        "reportUrl" : "https://lambotik.github.io/Oblache/348//#testresult/ee2cdb00ddb62d9b",
        "status" : "passed",
        "time" : {
          "start" : 1742519166248,
          "stop" : 1742519166763,
          "duration" : 515
        }
      }, {
        "uid" : "b78b04d4fd4a6bef",
        "reportUrl" : "https://lambotik.github.io/Oblache/347//#testresult/b78b04d4fd4a6bef",
        "status" : "passed",
        "time" : {
          "start" : 1742432674722,
          "stop" : 1742432675087,
          "duration" : 365
        }
      }, {
        "uid" : "2cbc83cb875b2e39",
        "reportUrl" : "https://lambotik.github.io/Oblache/346//#testresult/2cbc83cb875b2e39",
        "status" : "passed",
        "time" : {
          "start" : 1742346363567,
          "stop" : 1742346363878,
          "duration" : 311
        }
      }, {
        "uid" : "90801c67448f0bec",
        "reportUrl" : "https://lambotik.github.io/Oblache/345//#testresult/90801c67448f0bec",
        "status" : "passed",
        "time" : {
          "start" : 1742259914008,
          "stop" : 1742259914509,
          "duration" : 501
        }
      }, {
        "uid" : "7600a644f0c63358",
        "reportUrl" : "https://lambotik.github.io/Oblache/344//#testresult/7600a644f0c63358",
        "status" : "passed",
        "time" : {
          "start" : 1742173640020,
          "stop" : 1742173640397,
          "duration" : 377
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "4f0e4c16feba1ac1.json",
  "parameterValues" : [ ]
}