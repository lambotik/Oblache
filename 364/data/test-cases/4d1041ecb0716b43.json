{
  "uid" : "4d1041ecb0716b43",
  "name" : "POST is logout",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_logout",
  "historyId" : "35f6304f7e8c9c65afd14b6308898845",
  "time" : {
    "start" : 1743901865338,
    "stop" : 1743901865617,
    "duration" : 279
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 502",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7fe6451dfb90>\n\n    @allure.title('POST is logout')\n    def test_post_logout(self):\n        response_login = API.post_login(body=TestPOST.body)\n>       Checking.check_status_code(response_login, 200)\n\ntests_api/test_bd.py:220: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 502",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7fe6451dfb90>\n\n    @allure.title('POST is logout')\n    def test_post_logout(self):\n        response_login = API.post_login(body=TestPOST.body)\n>       Checking.check_status_code(response_login, 200)\n\ntests_api/test_bd.py:220: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "post_login",
      "time" : {
        "start" : 1743901865338,
        "stop" : 1743901865617,
        "duration" : 279
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /login",
        "time" : {
          "start" : 1743901865617,
          "stop" : 1743901865617,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1743901865617,
          "stop" : 1743901865617,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': 'None'}",
          "time" : {
            "start" : 1743901865617,
            "stop" : 1743901865617,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: {\"email\": email, \"password\": password}",
          "time" : {
            "start" : 1743901865617,
            "stop" : 1743901865617,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1743901865617,
          "stop" : 1743901865617,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 502",
          "time" : {
            "start" : 1743901865617,
            "stop" : 1743901865617,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
          "time" : {
            "start" : 1743901865617,
            "stop" : 1743901865617,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 7,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 200 == Response status code: 502",
      "time" : {
        "start" : 1743901865617,
        "stop" : 1743901865617,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 502\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 9,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "fv-az1341-331"
  }, {
    "name" : "thread",
    "value" : "2519-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 11,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 140,
        "unknown" : 0,
        "total" : 152
      },
      "items" : [ {
        "uid" : "6ce541bb0c182511",
        "reportUrl" : "https://lambotik.github.io/Oblache/363//#testresult/6ce541bb0c182511",
        "status" : "passed",
        "time" : {
          "start" : 1743815136049,
          "stop" : 1743815136815,
          "duration" : 766
        }
      }, {
        "uid" : "dc61311c60341d7",
        "reportUrl" : "https://lambotik.github.io/Oblache/362//#testresult/dc61311c60341d7",
        "status" : "passed",
        "time" : {
          "start" : 1743728791092,
          "stop" : 1743728792131,
          "duration" : 1039
        }
      }, {
        "uid" : "b2aaacbcf31da211",
        "reportUrl" : "https://lambotik.github.io/Oblache/361//#testresult/b2aaacbcf31da211",
        "status" : "passed",
        "time" : {
          "start" : 1743642406457,
          "stop" : 1743642407198,
          "duration" : 741
        }
      }, {
        "uid" : "e32719f4a54c09fc",
        "reportUrl" : "https://lambotik.github.io/Oblache/360//#testresult/e32719f4a54c09fc",
        "status" : "passed",
        "time" : {
          "start" : 1743556062927,
          "stop" : 1743556063707,
          "duration" : 780
        }
      }, {
        "uid" : "d04fc28f5b61824a",
        "reportUrl" : "https://lambotik.github.io/Oblache/359//#testresult/d04fc28f5b61824a",
        "status" : "passed",
        "time" : {
          "start" : 1743470097023,
          "stop" : 1743470097685,
          "duration" : 662
        }
      }, {
        "uid" : "e142b0aba447fe97",
        "reportUrl" : "https://lambotik.github.io/Oblache/358//#testresult/e142b0aba447fe97",
        "status" : "passed",
        "time" : {
          "start" : 1743383429654,
          "stop" : 1743383430682,
          "duration" : 1028
        }
      }, {
        "uid" : "9abd738d922a62e7",
        "reportUrl" : "https://lambotik.github.io/Oblache/357//#testresult/9abd738d922a62e7",
        "status" : "passed",
        "time" : {
          "start" : 1743297098747,
          "stop" : 1743297099406,
          "duration" : 659
        }
      }, {
        "uid" : "2ddd3a6985809f2c",
        "reportUrl" : "https://lambotik.github.io/Oblache/356//#testresult/2ddd3a6985809f2c",
        "status" : "passed",
        "time" : {
          "start" : 1743210323251,
          "stop" : 1743210323906,
          "duration" : 655
        }
      }, {
        "uid" : "8ef96e45af3a1b80",
        "reportUrl" : "https://lambotik.github.io/Oblache/355//#testresult/8ef96e45af3a1b80",
        "status" : "passed",
        "time" : {
          "start" : 1743123957068,
          "stop" : 1743123957821,
          "duration" : 753
        }
      }, {
        "uid" : "ab2566e15b89b56e",
        "reportUrl" : "https://lambotik.github.io/Oblache/354//#testresult/ab2566e15b89b56e",
        "status" : "passed",
        "time" : {
          "start" : 1743037564636,
          "stop" : 1743037565383,
          "duration" : 747
        }
      }, {
        "uid" : "2528872845c937a3",
        "reportUrl" : "https://lambotik.github.io/Oblache/353//#testresult/2528872845c937a3",
        "status" : "passed",
        "time" : {
          "start" : 1742951174894,
          "stop" : 1742951175564,
          "duration" : 670
        }
      }, {
        "uid" : "124fda14eb92087d",
        "reportUrl" : "https://lambotik.github.io/Oblache/352//#testresult/124fda14eb92087d",
        "status" : "passed",
        "time" : {
          "start" : 1742864789780,
          "stop" : 1742864790443,
          "duration" : 663
        }
      }, {
        "uid" : "6bd314fdf6ff412d",
        "reportUrl" : "https://lambotik.github.io/Oblache/351//#testresult/6bd314fdf6ff412d",
        "status" : "passed",
        "time" : {
          "start" : 1742778487582,
          "stop" : 1742778488594,
          "duration" : 1012
        }
      }, {
        "uid" : "4f5b877470e5a68f",
        "reportUrl" : "https://lambotik.github.io/Oblache/350//#testresult/4f5b877470e5a68f",
        "status" : "passed",
        "time" : {
          "start" : 1742692237207,
          "stop" : 1742692237945,
          "duration" : 738
        }
      }, {
        "uid" : "5952a7aa33ee841f",
        "reportUrl" : "https://lambotik.github.io/Oblache/349//#testresult/5952a7aa33ee841f",
        "status" : "passed",
        "time" : {
          "start" : 1742605475744,
          "stop" : 1742605476377,
          "duration" : 633
        }
      }, {
        "uid" : "6a5e9fdb61471ce4",
        "reportUrl" : "https://lambotik.github.io/Oblache/348//#testresult/6a5e9fdb61471ce4",
        "status" : "passed",
        "time" : {
          "start" : 1742519169851,
          "stop" : 1742519170862,
          "duration" : 1011
        }
      }, {
        "uid" : "8497ac6f4cda5219",
        "reportUrl" : "https://lambotik.github.io/Oblache/347//#testresult/8497ac6f4cda5219",
        "status" : "passed",
        "time" : {
          "start" : 1742432677267,
          "stop" : 1742432678015,
          "duration" : 748
        }
      }, {
        "uid" : "6c3aed341c7f56ac",
        "reportUrl" : "https://lambotik.github.io/Oblache/346//#testresult/6c3aed341c7f56ac",
        "status" : "passed",
        "time" : {
          "start" : 1742346365993,
          "stop" : 1742346366779,
          "duration" : 786
        }
      }, {
        "uid" : "cc8f3dcc16ff708f",
        "reportUrl" : "https://lambotik.github.io/Oblache/345//#testresult/cc8f3dcc16ff708f",
        "status" : "passed",
        "time" : {
          "start" : 1742259917556,
          "stop" : 1742259918570,
          "duration" : 1014
        }
      }, {
        "uid" : "417c2db40c522eb2",
        "reportUrl" : "https://lambotik.github.io/Oblache/344//#testresult/417c2db40c522eb2",
        "status" : "passed",
        "time" : {
          "start" : 1742173642244,
          "stop" : 1742173642845,
          "duration" : 601
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "4d1041ecb0716b43.json",
  "parameterValues" : [ ]
}