{
  "uid" : "fc0de3784b6f5598",
  "name" : "POST change_password_with_wrong_data",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_change_password_with_wrong_data",
  "historyId" : "c8dcf68e64482196ee23ebcfdd062055",
  "time" : {
    "start" : 1743901869697,
    "stop" : 1743901869973,
    "duration" : 276
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 502",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7fe6451dfe60>\n\n    @allure.title('POST change_password_with_wrong_data')\n    def test_post_change_password_with_wrong_data(self):\n        result = API.post_change_password(\n            token=TestPOST.token,\n            old_password='123456',\n            new_password='123456')\n>       Checking.check_status_code(result, 400)\n\ntests_api/test_bd.py:340: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 400\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 502",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7fe6451dfe60>\n\n    @allure.title('POST change_password_with_wrong_data')\n    def test_post_change_password_with_wrong_data(self):\n        result = API.post_change_password(\n            token=TestPOST.token,\n            old_password='123456',\n            new_password='123456')\n>       Checking.check_status_code(result, 400)\n\ntests_api/test_bd.py:340: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 400\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "post_change_password",
      "time" : {
        "start" : 1743901869698,
        "stop" : 1743901869973,
        "duration" : 275
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /password_update",
        "time" : {
          "start" : 1743901869973,
          "stop" : 1743901869973,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1743901869973,
          "stop" : 1743901869973,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': 'None'}",
          "time" : {
            "start" : 1743901869973,
            "stop" : 1743901869973,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: {\"current_password\": old_password, \"new_password\": new_password}",
          "time" : {
            "start" : 1743901869973,
            "stop" : 1743901869973,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1743901869973,
          "stop" : 1743901869973,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 502",
          "time" : {
            "start" : 1743901869973,
            "stop" : 1743901869973,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
          "time" : {
            "start" : 1743901869973,
            "stop" : 1743901869973,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 7,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 400 == Response status code: 502",
      "time" : {
        "start" : 1743901869973,
        "stop" : 1743901869973,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 502\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 9,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "fv-az1341-331"
  }, {
    "name" : "thread",
    "value" : "2519-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 12,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 140,
        "unknown" : 0,
        "total" : 152
      },
      "items" : [ {
        "uid" : "1dd1fbb72ac7108",
        "reportUrl" : "https://lambotik.github.io/Oblache/363//#testresult/1dd1fbb72ac7108",
        "status" : "passed",
        "time" : {
          "start" : 1743815144347,
          "stop" : 1743815144666,
          "duration" : 319
        }
      }, {
        "uid" : "f777ae1c42e05984",
        "reportUrl" : "https://lambotik.github.io/Oblache/362//#testresult/f777ae1c42e05984",
        "status" : "passed",
        "time" : {
          "start" : 1743728803504,
          "stop" : 1743728804026,
          "duration" : 522
        }
      }, {
        "uid" : "35bdeefa670931e3",
        "reportUrl" : "https://lambotik.github.io/Oblache/361//#testresult/35bdeefa670931e3",
        "status" : "passed",
        "time" : {
          "start" : 1743642415420,
          "stop" : 1743642415802,
          "duration" : 382
        }
      }, {
        "uid" : "723be867d861068d",
        "reportUrl" : "https://lambotik.github.io/Oblache/360//#testresult/723be867d861068d",
        "status" : "passed",
        "time" : {
          "start" : 1743556071948,
          "stop" : 1743556072326,
          "duration" : 378
        }
      }, {
        "uid" : "dac8ad95e1ce405c",
        "reportUrl" : "https://lambotik.github.io/Oblache/359//#testresult/dac8ad95e1ce405c",
        "status" : "passed",
        "time" : {
          "start" : 1743470104720,
          "stop" : 1743470105024,
          "duration" : 304
        }
      }, {
        "uid" : "7939b20b3b902727",
        "reportUrl" : "https://lambotik.github.io/Oblache/358//#testresult/7939b20b3b902727",
        "status" : "passed",
        "time" : {
          "start" : 1743383441816,
          "stop" : 1743383442321,
          "duration" : 505
        }
      }, {
        "uid" : "7abb50707c427f1c",
        "reportUrl" : "https://lambotik.github.io/Oblache/357//#testresult/7abb50707c427f1c",
        "status" : "passed",
        "time" : {
          "start" : 1743297106692,
          "stop" : 1743297107004,
          "duration" : 312
        }
      }, {
        "uid" : "f9a38c8a316e4dab",
        "reportUrl" : "https://lambotik.github.io/Oblache/356//#testresult/f9a38c8a316e4dab",
        "status" : "passed",
        "time" : {
          "start" : 1743210331115,
          "stop" : 1743210331425,
          "duration" : 310
        }
      }, {
        "uid" : "57605ef5bc028eca",
        "reportUrl" : "https://lambotik.github.io/Oblache/355//#testresult/57605ef5bc028eca",
        "status" : "passed",
        "time" : {
          "start" : 1743123966080,
          "stop" : 1743123966448,
          "duration" : 368
        }
      }, {
        "uid" : "a7e10d7d4e57eeb",
        "reportUrl" : "https://lambotik.github.io/Oblache/354//#testresult/a7e10d7d4e57eeb",
        "status" : "passed",
        "time" : {
          "start" : 1743037573626,
          "stop" : 1743037573985,
          "duration" : 359
        }
      }, {
        "uid" : "5668ebd4734851c1",
        "reportUrl" : "https://lambotik.github.io/Oblache/353//#testresult/5668ebd4734851c1",
        "status" : "passed",
        "time" : {
          "start" : 1742951182613,
          "stop" : 1742951182974,
          "duration" : 361
        }
      }, {
        "uid" : "e39db3b537b35e73",
        "reportUrl" : "https://lambotik.github.io/Oblache/352//#testresult/e39db3b537b35e73",
        "status" : "passed",
        "time" : {
          "start" : 1742864797457,
          "stop" : 1742864797758,
          "duration" : 301
        }
      }, {
        "uid" : "38cccca2ab729f8a",
        "reportUrl" : "https://lambotik.github.io/Oblache/351//#testresult/38cccca2ab729f8a",
        "status" : "passed",
        "time" : {
          "start" : 1742778499810,
          "stop" : 1742778500325,
          "duration" : 515
        }
      }, {
        "uid" : "b3a6a30401309e93",
        "reportUrl" : "https://lambotik.github.io/Oblache/350//#testresult/b3a6a30401309e93",
        "status" : "passed",
        "time" : {
          "start" : 1742692246112,
          "stop" : 1742692246476,
          "duration" : 364
        }
      }, {
        "uid" : "d10810f37295ea8b",
        "reportUrl" : "https://lambotik.github.io/Oblache/349//#testresult/d10810f37295ea8b",
        "status" : "passed",
        "time" : {
          "start" : 1742605483389,
          "stop" : 1742605483701,
          "duration" : 312
        }
      }, {
        "uid" : "4c63177109fef867",
        "reportUrl" : "https://lambotik.github.io/Oblache/348//#testresult/4c63177109fef867",
        "status" : "passed",
        "time" : {
          "start" : 1742519182138,
          "stop" : 1742519182657,
          "duration" : 519
        }
      }, {
        "uid" : "1018ec72c590a1a7",
        "reportUrl" : "https://lambotik.github.io/Oblache/347//#testresult/1018ec72c590a1a7",
        "status" : "passed",
        "time" : {
          "start" : 1742432686179,
          "stop" : 1742432686557,
          "duration" : 378
        }
      }, {
        "uid" : "7adbc393e3a4db2c",
        "reportUrl" : "https://lambotik.github.io/Oblache/346//#testresult/7adbc393e3a4db2c",
        "status" : "passed",
        "time" : {
          "start" : 1742346374003,
          "stop" : 1742346374307,
          "duration" : 304
        }
      }, {
        "uid" : "4dc61c8ce6e84e1e",
        "reportUrl" : "https://lambotik.github.io/Oblache/345//#testresult/4dc61c8ce6e84e1e",
        "status" : "passed",
        "time" : {
          "start" : 1742259929723,
          "stop" : 1742259930225,
          "duration" : 502
        }
      }, {
        "uid" : "d964f0baab870b49",
        "reportUrl" : "https://lambotik.github.io/Oblache/344//#testresult/d964f0baab870b49",
        "status" : "passed",
        "time" : {
          "start" : 1742173649850,
          "stop" : 1742173650152,
          "duration" : 302
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "fc0de3784b6f5598.json",
  "parameterValues" : [ ]
}