{
  "uid" : "2b85d8d3cfff12fc",
  "name" : "POST db_list_with_filter",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_db_list_with_filter",
  "historyId" : "1404cf75602dc5c195df0f6e9ffb5ba3",
  "time" : {
    "start" : 1743901869107,
    "stop" : 1743901869385,
    "duration" : 278
  },
  "status" : "skipped",
  "statusMessage" : "XFAIL There are databases that need to be deleted manually.\n\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7fe644f58740>\n\n    @allure.title('POST db_list_with_filter')\n    @pytest.mark.xfail(reason='There are databases that need to be deleted manually.')\n    def test_post_db_list_with_filter(self):\n        list_db = API.post_db_list(token=TestPOST.token)\n>       json_list_db = json.loads(list_db.text)\n\ntests_api/test_bd.py:305: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/json/decoder.py:338: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fe6463f6ea0>\ns = '<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body>\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/json/decoder.py:356: JSONDecodeError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "skipped",
    "statusMessage" : "XFAIL There are databases that need to be deleted manually.\n\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7fe644f58740>\n\n    @allure.title('POST db_list_with_filter')\n    @pytest.mark.xfail(reason='There are databases that need to be deleted manually.')\n    def test_post_db_list_with_filter(self):\n        list_db = API.post_db_list(token=TestPOST.token)\n>       json_list_db = json.loads(list_db.text)\n\ntests_api/test_bd.py:305: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/json/decoder.py:338: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fe6463f6ea0>\ns = '<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body>\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/json/decoder.py:356: JSONDecodeError",
    "steps" : [ {
      "name" : "post_db_list",
      "time" : {
        "start" : 1743901869107,
        "stop" : 1743901869385,
        "duration" : 278
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /db_list",
        "time" : {
          "start" : 1743901869385,
          "stop" : 1743901869385,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1743901869385,
          "stop" : 1743901869385,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': 'None'}",
          "time" : {
            "start" : 1743901869385,
            "stop" : 1743901869385,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: None",
          "time" : {
            "start" : 1743901869385,
            "stop" : 1743901869385,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1743901869385,
          "stop" : 1743901869385,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 502",
          "time" : {
            "start" : 1743901869385,
            "stop" : 1743901869385,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
          "time" : {
            "start" : 1743901869385,
            "stop" : 1743901869385,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 7,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 8,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.xfail(reason='There are databases that need to be deleted manually.')"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "fv-az1341-331"
  }, {
    "name" : "thread",
    "value" : "2519-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 151,
        "passed" : 1,
        "unknown" : 0,
        "total" : 152
      },
      "items" : [ {
        "uid" : "a9d2e12ce2f057d4",
        "reportUrl" : "https://lambotik.github.io/Oblache/363//#testresult/a9d2e12ce2f057d4",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1743815143070,
          "stop" : 1743815143697,
          "duration" : 627
        }
      }, {
        "uid" : "d3692aaca526e366",
        "reportUrl" : "https://lambotik.github.io/Oblache/362//#testresult/d3692aaca526e366",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1743728801475,
          "stop" : 1743728802471,
          "duration" : 996
        }
      }, {
        "uid" : "c1c4b609c9b4e013",
        "reportUrl" : "https://lambotik.github.io/Oblache/361//#testresult/c1c4b609c9b4e013",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1743642413934,
          "stop" : 1743642414648,
          "duration" : 714
        }
      }, {
        "uid" : "3e1ebd5960d44814",
        "reportUrl" : "https://lambotik.github.io/Oblache/360//#testresult/3e1ebd5960d44814",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1743556070464,
          "stop" : 1743556071188,
          "duration" : 724
        }
      }, {
        "uid" : "71818ebf76d62d51",
        "reportUrl" : "https://lambotik.github.io/Oblache/359//#testresult/71818ebf76d62d51",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1743470103499,
          "stop" : 1743470104098,
          "duration" : 599
        }
      }, {
        "uid" : "91004593c26878ec",
        "reportUrl" : "https://lambotik.github.io/Oblache/358//#testresult/91004593c26878ec",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1743383439820,
          "stop" : 1743383440803,
          "duration" : 983
        }
      }, {
        "uid" : "ccfa938ea2f168c8",
        "reportUrl" : "https://lambotik.github.io/Oblache/357//#testresult/ccfa938ea2f168c8",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1743297105347,
          "stop" : 1743297106044,
          "duration" : 697
        }
      }, {
        "uid" : "f429bbd403c24e78",
        "reportUrl" : "https://lambotik.github.io/Oblache/356//#testresult/f429bbd403c24e78",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1743210329865,
          "stop" : 1743210330477,
          "duration" : 612
        }
      }, {
        "uid" : "eca176d5884f2de2",
        "reportUrl" : "https://lambotik.github.io/Oblache/355//#testresult/eca176d5884f2de2",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1743123964588,
          "stop" : 1743123965330,
          "duration" : 742
        }
      }, {
        "uid" : "ba43c48c969eba5d",
        "reportUrl" : "https://lambotik.github.io/Oblache/354//#testresult/ba43c48c969eba5d",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1743037572157,
          "stop" : 1743037572880,
          "duration" : 723
        }
      }, {
        "uid" : "7d967e1df5cef195",
        "reportUrl" : "https://lambotik.github.io/Oblache/353//#testresult/7d967e1df5cef195",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1742951181343,
          "stop" : 1742951181929,
          "duration" : 586
        }
      }, {
        "uid" : "9747d8e947eba97",
        "reportUrl" : "https://lambotik.github.io/Oblache/352//#testresult/9747d8e947eba97",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1742864796166,
          "stop" : 1742864796755,
          "duration" : 589
        }
      }, {
        "uid" : "ad7a1aebaca786bb",
        "reportUrl" : "https://lambotik.github.io/Oblache/351//#testresult/ad7a1aebaca786bb",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1742778497752,
          "stop" : 1742778498736,
          "duration" : 984
        }
      }, {
        "uid" : "f166c54961c526e9",
        "reportUrl" : "https://lambotik.github.io/Oblache/350//#testresult/f166c54961c526e9",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1742692244626,
          "stop" : 1742692245349,
          "duration" : 723
        }
      }, {
        "uid" : "ca8e3f2a9cf30791",
        "reportUrl" : "https://lambotik.github.io/Oblache/349//#testresult/ca8e3f2a9cf30791",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1742605482129,
          "stop" : 1742605482730,
          "duration" : 601
        }
      }, {
        "uid" : "a33b81dd8484d06f",
        "reportUrl" : "https://lambotik.github.io/Oblache/348//#testresult/a33b81dd8484d06f",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1742519180114,
          "stop" : 1742519181110,
          "duration" : 996
        }
      }, {
        "uid" : "c7d8f84e51cb18a0",
        "reportUrl" : "https://lambotik.github.io/Oblache/347//#testresult/c7d8f84e51cb18a0",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1742432684691,
          "stop" : 1742432685413,
          "duration" : 722
        }
      }, {
        "uid" : "aaa82e7f9eb4472b",
        "reportUrl" : "https://lambotik.github.io/Oblache/346//#testresult/aaa82e7f9eb4472b",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1742346372700,
          "stop" : 1742346373287,
          "duration" : 587
        }
      }, {
        "uid" : "6e0a95401476877a",
        "reportUrl" : "https://lambotik.github.io/Oblache/345//#testresult/6e0a95401476877a",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1742259927700,
          "stop" : 1742259928692,
          "duration" : 992
        }
      }, {
        "uid" : "59410c0d3ccd7e92",
        "reportUrl" : "https://lambotik.github.io/Oblache/344//#testresult/59410c0d3ccd7e92",
        "status" : "skipped",
        "statusDetails" : "XFAIL There are databases that need to be deleted manually.\n\nAssertionError: Incorrect status code: 500",
        "time" : {
          "start" : 1742173648621,
          "stop" : 1742173649215,
          "duration" : 594
        }
      } ]
    },
    "tags" : [ "@pytest.mark.xfail(reason='There are databases that need to be deleted manually.')" ]
  },
  "source" : "2b85d8d3cfff12fc.json",
  "parameterValues" : [ ]
}