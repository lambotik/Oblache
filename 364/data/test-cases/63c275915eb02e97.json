{
  "uid" : "63c275915eb02e97",
  "name" : "POST registration for English language.",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_registration_for_english_language",
  "historyId" : "cf347c584436aa019858a6c679c01454",
  "time" : {
    "start" : 1743901861777,
    "stop" : 1743901862055,
    "duration" : 278
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 502",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7fe645225610>\n\n    @allure.title('POST registration for English language.')\n    def test_post_registration_for_english_language(self):\n        response = API.post_registration_variety_email(\n            mail=random.choice(['gmail', 'mail', 'yandex']),\n            old_password=TestPOST.old_password,\n            prefix=random.choice(['com', 'ru', 'by']),\n            language=\"en-us\",\n            tos_agree=True)\n>       Checking.check_status_code(response, 201)\n\ntests_api/test_bd.py:127: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 201\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 502",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7fe645225610>\n\n    @allure.title('POST registration for English language.')\n    def test_post_registration_for_english_language(self):\n        response = API.post_registration_variety_email(\n            mail=random.choice(['gmail', 'mail', 'yandex']),\n            old_password=TestPOST.old_password,\n            prefix=random.choice(['com', 'ru', 'by']),\n            language=\"en-us\",\n            tos_agree=True)\n>       Checking.check_status_code(response, 201)\n\ntests_api/test_bd.py:127: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 201\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "post_registration_variety_email",
      "time" : {
        "start" : 1743901861777,
        "stop" : 1743901862055,
        "duration" : 278
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /register",
        "time" : {
          "start" : 1743901862055,
          "stop" : 1743901862055,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1743901862055,
          "stop" : 1743901862055,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': 'None'}",
          "time" : {
            "start" : 1743901862055,
            "stop" : 1743901862055,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Body: \n                                {\n                                \"email\": f'aqa2025_04_06_01_10_55@mail.ru',\n                                \"password\": password,\n                                \"tos_agree\": True,\n                                \"language\": en-us\n                               }",
          "time" : {
            "start" : 1743901862055,
            "stop" : 1743901862055,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1743901862055,
          "stop" : 1743901862055,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 502",
          "time" : {
            "start" : 1743901862055,
            "stop" : 1743901862055,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "JSON: <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
          "time" : {
            "start" : 1743901862055,
            "stop" : 1743901862055,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 7,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 201 == Response status code: 502",
      "time" : {
        "start" : 1743901862055,
        "stop" : 1743901862055,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 502\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 9,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "fv-az1341-331"
  }, {
    "name" : "thread",
    "value" : "2519-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 11,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 141,
        "unknown" : 0,
        "total" : 152
      },
      "items" : [ {
        "uid" : "93585c0c09e9c2",
        "reportUrl" : "https://lambotik.github.io/Oblache/363//#testresult/93585c0c09e9c2",
        "status" : "passed",
        "time" : {
          "start" : 1743815132575,
          "stop" : 1743815132975,
          "duration" : 400
        }
      }, {
        "uid" : "db798730e1c078f3",
        "reportUrl" : "https://lambotik.github.io/Oblache/362//#testresult/db798730e1c078f3",
        "status" : "passed",
        "time" : {
          "start" : 1743728785682,
          "stop" : 1743728786197,
          "duration" : 515
        }
      }, {
        "uid" : "e9b545053c3a082c",
        "reportUrl" : "https://lambotik.github.io/Oblache/361//#testresult/e9b545053c3a082c",
        "status" : "passed",
        "time" : {
          "start" : 1743642402697,
          "stop" : 1743642403066,
          "duration" : 369
        }
      }, {
        "uid" : "200f7904204b9469",
        "reportUrl" : "https://lambotik.github.io/Oblache/360//#testresult/200f7904204b9469",
        "status" : "passed",
        "time" : {
          "start" : 1743556059168,
          "stop" : 1743556059540,
          "duration" : 372
        }
      }, {
        "uid" : "746f887cded68ac4",
        "reportUrl" : "https://lambotik.github.io/Oblache/359//#testresult/746f887cded68ac4",
        "status" : "passed",
        "time" : {
          "start" : 1743470093763,
          "stop" : 1743470094132,
          "duration" : 369
        }
      }, {
        "uid" : "115c0f723b26e24",
        "reportUrl" : "https://lambotik.github.io/Oblache/358//#testresult/115c0f723b26e24",
        "status" : "passed",
        "time" : {
          "start" : 1743383424574,
          "stop" : 1743383425102,
          "duration" : 528
        }
      }, {
        "uid" : "2f09bc5471e1c4ec",
        "reportUrl" : "https://lambotik.github.io/Oblache/357//#testresult/2f09bc5471e1c4ec",
        "status" : "passed",
        "time" : {
          "start" : 1743297095414,
          "stop" : 1743297095734,
          "duration" : 320
        }
      }, {
        "uid" : "a025e3439c8100cb",
        "reportUrl" : "https://lambotik.github.io/Oblache/356//#testresult/a025e3439c8100cb",
        "status" : "passed",
        "time" : {
          "start" : 1743210319794,
          "stop" : 1743210320129,
          "duration" : 335
        }
      }, {
        "uid" : "9d25efa1c416dfab",
        "reportUrl" : "https://lambotik.github.io/Oblache/355//#testresult/9d25efa1c416dfab",
        "status" : "passed",
        "time" : {
          "start" : 1743123953326,
          "stop" : 1743123953701,
          "duration" : 375
        }
      }, {
        "uid" : "da5f3a265d091211",
        "reportUrl" : "https://lambotik.github.io/Oblache/354//#testresult/da5f3a265d091211",
        "status" : "passed",
        "time" : {
          "start" : 1743037560900,
          "stop" : 1743037561278,
          "duration" : 378
        }
      }, {
        "uid" : "e01de95f661ed5e4",
        "reportUrl" : "https://lambotik.github.io/Oblache/353//#testresult/e01de95f661ed5e4",
        "status" : "passed",
        "time" : {
          "start" : 1742951171587,
          "stop" : 1742951171961,
          "duration" : 374
        }
      }, {
        "uid" : "f35d003903326503",
        "reportUrl" : "https://lambotik.github.io/Oblache/352//#testresult/f35d003903326503",
        "status" : "passed",
        "time" : {
          "start" : 1742864786609,
          "stop" : 1742864786919,
          "duration" : 310
        }
      }, {
        "uid" : "c74d08afd75c446c",
        "reportUrl" : "https://lambotik.github.io/Oblache/351//#testresult/c74d08afd75c446c",
        "status" : "passed",
        "time" : {
          "start" : 1742778482447,
          "stop" : 1742778482976,
          "duration" : 529
        }
      }, {
        "uid" : "9c6fe07c9f7c389a",
        "reportUrl" : "https://lambotik.github.io/Oblache/350//#testresult/9c6fe07c9f7c389a",
        "status" : "passed",
        "time" : {
          "start" : 1742692233439,
          "stop" : 1742692233836,
          "duration" : 397
        }
      }, {
        "uid" : "d125315f2909aabb",
        "reportUrl" : "https://lambotik.github.io/Oblache/349//#testresult/d125315f2909aabb",
        "status" : "passed",
        "time" : {
          "start" : 1742605472228,
          "stop" : 1742605472619,
          "duration" : 391
        }
      }, {
        "uid" : "39107ee84769a01a",
        "reportUrl" : "https://lambotik.github.io/Oblache/348//#testresult/39107ee84769a01a",
        "status" : "passed",
        "time" : {
          "start" : 1742519164672,
          "stop" : 1742519165209,
          "duration" : 537
        }
      }, {
        "uid" : "817906148aa2cc2c",
        "reportUrl" : "https://lambotik.github.io/Oblache/347//#testresult/817906148aa2cc2c",
        "status" : "passed",
        "time" : {
          "start" : 1742432673617,
          "stop" : 1742432673993,
          "duration" : 376
        }
      }, {
        "uid" : "d5789f32a5019a50",
        "reportUrl" : "https://lambotik.github.io/Oblache/346//#testresult/d5789f32a5019a50",
        "status" : "passed",
        "time" : {
          "start" : 1742346362629,
          "stop" : 1742346362940,
          "duration" : 311
        }
      }, {
        "uid" : "5d1745f43efdfb30",
        "reportUrl" : "https://lambotik.github.io/Oblache/345//#testresult/5d1745f43efdfb30",
        "status" : "passed",
        "time" : {
          "start" : 1742259912348,
          "stop" : 1742259912852,
          "duration" : 504
        }
      }, {
        "uid" : "6a77b628ded1b486",
        "reportUrl" : "https://lambotik.github.io/Oblache/344//#testresult/6a77b628ded1b486",
        "status" : "passed",
        "time" : {
          "start" : 1742173639015,
          "stop" : 1742173639325,
          "duration" : 310
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "63c275915eb02e97.json",
  "parameterValues" : [ ]
}