{
  "uid" : "cfaa72c2c4b58b4f",
  "name" : "GET tos.",
  "fullName" : "tests_api.test_bd.TestGET#test_tos",
  "historyId" : "1bd6d480cd29dd301e6e77cd0f9194c6",
  "time" : {
    "start" : 1743901858371,
    "stop" : 1743901858656,
    "duration" : 285
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 502",
  "statusTrace" : "self = <tests_api.test_bd.TestGET object at 0x7fe6451deb10>\n\n    @allure.title('GET tos.')\n    def test_tos(self):\n        response = API.get_tos(token=TestGET.token)\n        file_name = LOADING_REPORT_DIR / 'my_report1.html'\n        attach = file_name\n        allure.attach.file(attach, name=f\"Report {datetime.today()}\", attachment_type=allure.attachment_type.HTML)\n>       Checking.check_status_code(response, 200)\n\ntests_api/test_bd.py:68: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 502",
    "statusTrace" : "self = <tests_api.test_bd.TestGET object at 0x7fe6451deb10>\n\n    @allure.title('GET tos.')\n    def test_tos(self):\n        response = API.get_tos(token=TestGET.token)\n        file_name = LOADING_REPORT_DIR / 'my_report1.html'\n        attach = file_name\n        allure.attach.file(attach, name=f\"Report {datetime.today()}\", attachment_type=allure.attachment_type.HTML)\n>       Checking.check_status_code(response, 200)\n\ntests_api/test_bd.py:68: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [502]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 502\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "Endpoint: /tos",
      "time" : {
        "start" : 1743901858654,
        "stop" : 1743901858654,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Request:",
      "time" : {
        "start" : 1743901858654,
        "stop" : 1743901858654,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': 'None'}",
        "time" : {
          "start" : 1743901858654,
          "stop" : 1743901858654,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Body: None",
        "time" : {
          "start" : 1743901858654,
          "stop" : 1743901858654,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Response:",
      "time" : {
        "start" : 1743901858654,
        "stop" : 1743901858654,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Status code: 502",
        "time" : {
          "start" : 1743901858654,
          "stop" : 1743901858654,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "JSON: <html>\r\n<head><title>502 Bad Gateway</title></head>\r\n<body>\r\n<center><h1>502 Bad Gateway</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n",
        "time" : {
          "start" : 1743901858654,
          "stop" : 1743901858654,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Assert status code: 200 == Response status code: 502",
      "time" : {
        "start" : 1743901858655,
        "stop" : 1743901858655,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 502\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "a150677a53b20d86",
      "name" : "Report 2025-04-06 01:10:58.654004",
      "source" : "a150677a53b20d86.html",
      "type" : "text/html",
      "size" : 1651560
    } ],
    "parameters" : [ ],
    "stepsCount" : 8,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "GET"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestGET"
  }, {
    "name" : "host",
    "value" : "fv-az1341-331"
  }, {
    "name" : "thread",
    "value" : "2519-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 11,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 141,
        "unknown" : 0,
        "total" : 152
      },
      "items" : [ {
        "uid" : "622ce1d67c6507e7",
        "reportUrl" : "https://lambotik.github.io/Oblache/363//#testresult/622ce1d67c6507e7",
        "status" : "passed",
        "time" : {
          "start" : 1743815129320,
          "stop" : 1743815129656,
          "duration" : 336
        }
      }, {
        "uid" : "fe27139eb11225a3",
        "reportUrl" : "https://lambotik.github.io/Oblache/362//#testresult/fe27139eb11225a3",
        "status" : "passed",
        "time" : {
          "start" : 1743728780628,
          "stop" : 1743728781249,
          "duration" : 621
        }
      }, {
        "uid" : "1692e2c3fc3a6144",
        "reportUrl" : "https://lambotik.github.io/Oblache/361//#testresult/1692e2c3fc3a6144",
        "status" : "passed",
        "time" : {
          "start" : 1743642399276,
          "stop" : 1743642399643,
          "duration" : 367
        }
      }, {
        "uid" : "f6ebc7bee2dbf048",
        "reportUrl" : "https://lambotik.github.io/Oblache/360//#testresult/f6ebc7bee2dbf048",
        "status" : "passed",
        "time" : {
          "start" : 1743556055716,
          "stop" : 1743556056169,
          "duration" : 453
        }
      }, {
        "uid" : "d8ca3edd0b2682cc",
        "reportUrl" : "https://lambotik.github.io/Oblache/359//#testresult/d8ca3edd0b2682cc",
        "status" : "passed",
        "time" : {
          "start" : 1743470090783,
          "stop" : 1743470091095,
          "duration" : 312
        }
      }, {
        "uid" : "e130406795700c1a",
        "reportUrl" : "https://lambotik.github.io/Oblache/358//#testresult/e130406795700c1a",
        "status" : "passed",
        "time" : {
          "start" : 1743383419998,
          "stop" : 1743383420500,
          "duration" : 502
        }
      }, {
        "uid" : "199bc7ebd4f5c2b6",
        "reportUrl" : "https://lambotik.github.io/Oblache/357//#testresult/199bc7ebd4f5c2b6",
        "status" : "passed",
        "time" : {
          "start" : 1743297092453,
          "stop" : 1743297092769,
          "duration" : 316
        }
      }, {
        "uid" : "3410f5d5d3b2677e",
        "reportUrl" : "https://lambotik.github.io/Oblache/356//#testresult/3410f5d5d3b2677e",
        "status" : "passed",
        "time" : {
          "start" : 1743210316757,
          "stop" : 1743210317138,
          "duration" : 381
        }
      }, {
        "uid" : "bd0ac387cb65d237",
        "reportUrl" : "https://lambotik.github.io/Oblache/355//#testresult/bd0ac387cb65d237",
        "status" : "passed",
        "time" : {
          "start" : 1743123949831,
          "stop" : 1743123950254,
          "duration" : 423
        }
      }, {
        "uid" : "bdfcaba16bead34",
        "reportUrl" : "https://lambotik.github.io/Oblache/354//#testresult/bdfcaba16bead34",
        "status" : "passed",
        "time" : {
          "start" : 1743037557530,
          "stop" : 1743037557919,
          "duration" : 389
        }
      }, {
        "uid" : "3312cfc0605484ff",
        "reportUrl" : "https://lambotik.github.io/Oblache/353//#testresult/3312cfc0605484ff",
        "status" : "passed",
        "time" : {
          "start" : 1742951168684,
          "stop" : 1742951169058,
          "duration" : 374
        }
      }, {
        "uid" : "f0e238ff3245cd0d",
        "reportUrl" : "https://lambotik.github.io/Oblache/352//#testresult/f0e238ff3245cd0d",
        "status" : "passed",
        "time" : {
          "start" : 1742864783595,
          "stop" : 1742864783975,
          "duration" : 380
        }
      }, {
        "uid" : "9ac4e641b0cf56c7",
        "reportUrl" : "https://lambotik.github.io/Oblache/351//#testresult/9ac4e641b0cf56c7",
        "status" : "passed",
        "time" : {
          "start" : 1742778477790,
          "stop" : 1742778478326,
          "duration" : 536
        }
      }, {
        "uid" : "5ecd5827ae52d474",
        "reportUrl" : "https://lambotik.github.io/Oblache/350//#testresult/5ecd5827ae52d474",
        "status" : "passed",
        "time" : {
          "start" : 1742692230069,
          "stop" : 1742692230463,
          "duration" : 394
        }
      }, {
        "uid" : "c1167a5051a0a177",
        "reportUrl" : "https://lambotik.github.io/Oblache/349//#testresult/c1167a5051a0a177",
        "status" : "passed",
        "time" : {
          "start" : 1742605469129,
          "stop" : 1742605469560,
          "duration" : 431
        }
      }, {
        "uid" : "a18d03c9d3a5eef9",
        "reportUrl" : "https://lambotik.github.io/Oblache/348//#testresult/a18d03c9d3a5eef9",
        "status" : "passed",
        "time" : {
          "start" : 1742519160044,
          "stop" : 1742519160579,
          "duration" : 535
        }
      }, {
        "uid" : "342e78269fb70897",
        "reportUrl" : "https://lambotik.github.io/Oblache/347//#testresult/342e78269fb70897",
        "status" : "passed",
        "time" : {
          "start" : 1742432669562,
          "stop" : 1742432670070,
          "duration" : 508
        }
      }, {
        "uid" : "9debea1ed20450d1",
        "reportUrl" : "https://lambotik.github.io/Oblache/346//#testresult/9debea1ed20450d1",
        "status" : "passed",
        "time" : {
          "start" : 1742346359304,
          "stop" : 1742346359690,
          "duration" : 386
        }
      }, {
        "uid" : "5d6e9006650e9b2e",
        "reportUrl" : "https://lambotik.github.io/Oblache/345//#testresult/5d6e9006650e9b2e",
        "status" : "passed",
        "time" : {
          "start" : 1742259907807,
          "stop" : 1742259908337,
          "duration" : 530
        }
      }, {
        "uid" : "2458dd39b5922cfc",
        "reportUrl" : "https://lambotik.github.io/Oblache/344//#testresult/2458dd39b5922cfc",
        "status" : "passed",
        "time" : {
          "start" : 1742173636241,
          "stop" : 1742173636547,
          "duration" : 306
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "cfaa72c2c4b58b4f.json",
  "parameterValues" : [ ]
}