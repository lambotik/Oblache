{
  "uid" : "8af663d83fac570f",
  "name" : "POST create_docker_container_without_token",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_create_docker_container_without_token",
  "historyId" : "f833256fb8ca072b26357ead25c8b408",
  "time" : {
    "start" : 1741309529402,
    "stop" : 1741309529930,
    "duration" : 528
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 400",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7fbd7cb1c080>\n\n    @allure.title('POST create_docker_container_without_token')\n    def test_post_create_docker_container_without_token(self):\n        result = API.post_create_docker_container(token='incorrect_token')\n>       Checking.check_status_code(result, 401)\n\ntests_api/test_bd.py:404: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 401\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 400\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 400",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7fbd7cb1c080>\n\n    @allure.title('POST create_docker_container_without_token')\n    def test_post_create_docker_container_without_token(self):\n        result = API.post_create_docker_container(token='incorrect_token')\n>       Checking.check_status_code(result, 401)\n\ntests_api/test_bd.py:404: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 401\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 400\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "post_create_docker_container",
      "time" : {
        "start" : 1741309529402,
        "stop" : 1741309529929,
        "duration" : 527
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /container_create",
        "time" : {
          "start" : 1741309529929,
          "stop" : 1741309529929,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false,
        "stepsCount" : 0
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1741309529929,
          "stop" : 1741309529929,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': 'incorrect_token'}",
          "time" : {
            "start" : 1741309529929,
            "stop" : 1741309529929,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false,
          "stepsCount" : 0
        }, {
          "name" : "Body: {\"docker_image\": \"nginx\", \"int_ports\": \"80\", \"env\": 3, \"region\": 3}",
          "time" : {
            "start" : 1741309529929,
            "stop" : 1741309529929,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false,
          "stepsCount" : 0
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true,
        "stepsCount" : 2
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1741309529929,
          "stop" : 1741309529929,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 400",
          "time" : {
            "start" : 1741309529929,
            "stop" : 1741309529929,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false,
          "stepsCount" : 0
        }, {
          "name" : "JSON: {\n    \"msg_code\": -1,\n    \"msg\": \"endpoint is disabled\"\n}\n",
          "time" : {
            "start" : 1741309529929,
            "stop" : 1741309529929,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false,
          "stepsCount" : 0
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true,
        "stepsCount" : 2
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true,
      "stepsCount" : 7
    }, {
      "name" : "Assert status code: 401 == Response status code: 400",
      "time" : {
        "start" : 1741309529929,
        "stop" : 1741309529929,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 400\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true,
      "stepsCount" : 0
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 9
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "fv-az1344-444"
  }, {
    "name" : "thread",
    "value" : "2445-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 86,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 36,
        "unknown" : 0,
        "total" : 122
      },
      "items" : [ {
        "uid" : "bf08fc40b4c7976e",
        "reportUrl" : "https://lambotik.github.io/Oblache/23//#testresult/bf08fc40b4c7976e",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1741273265244,
          "stop" : 1741273265776,
          "duration" : 532
        }
      }, {
        "uid" : "b4c9346814c67ddb",
        "reportUrl" : "https://lambotik.github.io/Oblache/22//#testresult/b4c9346814c67ddb",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1741273016998,
          "stop" : 1741273017307,
          "duration" : 309
        }
      }, {
        "uid" : "d5769c13485edee5",
        "reportUrl" : "https://lambotik.github.io/Oblache/21//#testresult/d5769c13485edee5",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1741272404377,
          "stop" : 1741272404694,
          "duration" : 317
        }
      }, {
        "uid" : "9192f907648c8ce3",
        "reportUrl" : "https://lambotik.github.io/Oblache/20//#testresult/9192f907648c8ce3",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1741271081857,
          "stop" : 1741271082386,
          "duration" : 529
        }
      }, {
        "uid" : "e2094077baf7d1d1",
        "reportUrl" : "https://lambotik.github.io/Oblache/19//#testresult/e2094077baf7d1d1",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1741270263342,
          "stop" : 1741270263880,
          "duration" : 538
        }
      }, {
        "uid" : "8ba0533702c05b5d",
        "reportUrl" : "https://lambotik.github.io/Oblache/333//#testresult/8ba0533702c05b5d",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1741223079311,
          "stop" : 1741223079621,
          "duration" : 310
        }
      }, {
        "uid" : "e84596d2713469c2",
        "reportUrl" : "https://lambotik.github.io/Oblache/332//#testresult/e84596d2713469c2",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1741136679993,
          "stop" : 1741136680301,
          "duration" : 308
        }
      }, {
        "uid" : "7fbd5c333cf1cba0",
        "reportUrl" : "https://lambotik.github.io/Oblache/331//#testresult/7fbd5c333cf1cba0",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1741050276498,
          "stop" : 1741050276805,
          "duration" : 307
        }
      }, {
        "uid" : "1dd1befda73a6ca9",
        "reportUrl" : "https://lambotik.github.io/Oblache/330//#testresult/1dd1befda73a6ca9",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1740963967348,
          "stop" : 1740963967727,
          "duration" : 379
        }
      }, {
        "uid" : "1274b9b940e93994",
        "reportUrl" : "https://lambotik.github.io/Oblache/329//#testresult/1274b9b940e93994",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1740877666850,
          "stop" : 1740877667215,
          "duration" : 365
        }
      }, {
        "uid" : "2b686e6e20639567",
        "reportUrl" : "https://lambotik.github.io/Oblache/328//#testresult/2b686e6e20639567",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1740791302650,
          "stop" : 1740791302963,
          "duration" : 313
        }
      }, {
        "uid" : "5d8a2cc7080563f5",
        "reportUrl" : "https://lambotik.github.io/Oblache/327//#testresult/5d8a2cc7080563f5",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1740704634012,
          "stop" : 1740704634330,
          "duration" : 318
        }
      }, {
        "uid" : "58f38c6cb2f3c2c4",
        "reportUrl" : "https://lambotik.github.io/Oblache/326//#testresult/58f38c6cb2f3c2c4",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1740618212007,
          "stop" : 1740618212364,
          "duration" : 357
        }
      }, {
        "uid" : "5e96830df405aef7",
        "reportUrl" : "https://lambotik.github.io/Oblache/325//#testresult/5e96830df405aef7",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1740531815247,
          "stop" : 1740531815587,
          "duration" : 340
        }
      }, {
        "uid" : "7b7d435891e4512d",
        "reportUrl" : "https://lambotik.github.io/Oblache/324//#testresult/7b7d435891e4512d",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1740445424594,
          "stop" : 1740445424963,
          "duration" : 369
        }
      }, {
        "uid" : "a137b37f11fce8c5",
        "reportUrl" : "https://lambotik.github.io/Oblache/323//#testresult/a137b37f11fce8c5",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1740359093738,
          "stop" : 1740359094258,
          "duration" : 520
        }
      }, {
        "uid" : "35639b29bee1c393",
        "reportUrl" : "https://lambotik.github.io/Oblache/322//#testresult/35639b29bee1c393",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1740272824061,
          "stop" : 1740272824580,
          "duration" : 519
        }
      }, {
        "uid" : "fe01ae56fad64475",
        "reportUrl" : "https://lambotik.github.io/Oblache/321//#testresult/fe01ae56fad64475",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1740186045755,
          "stop" : 1740186046072,
          "duration" : 317
        }
      }, {
        "uid" : "f4f8835011382843",
        "reportUrl" : "https://lambotik.github.io/Oblache/320//#testresult/f4f8835011382843",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1740099782316,
          "stop" : 1740099782826,
          "duration" : 510
        }
      }, {
        "uid" : "a9e0d2afc82ea0b0",
        "reportUrl" : "https://lambotik.github.io/Oblache/319//#testresult/a9e0d2afc82ea0b0",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1740013368046,
          "stop" : 1740013368404,
          "duration" : 358
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "8af663d83fac570f.json",
  "parameterValues" : [ ]
}