{
  "uid" : "58bd893e3b14fd3",
  "name" : "POST checking ports_len positive",
  "fullName" : "tests_api.test_bd.TestPOST#test_post_checking_ports_len_positive",
  "historyId" : "c6f631852f230d7f46e21d1143ab0d56",
  "time" : {
    "start" : 1741309527247,
    "stop" : 1741309527770,
    "duration" : 523
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code: 400",
  "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7fbd7ca05f10>\n\n    @allure.title('POST checking ports_len positive')\n    def test_post_checking_ports_len_positive(self):\n        result = API.post_create_docker_container_checking_ports(\n            token=TestPOST.token,\n            port_len=\"80-89\")\n>       Checking.check_status_code(result, 201)\n\ntests_api/test_bd.py:374: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 201\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 400\n\ntests_api/utils/checking.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code: 400",
    "statusTrace" : "self = <tests_api.test_bd.TestPOST object at 0x7fbd7ca05f10>\n\n    @allure.title('POST checking ports_len positive')\n    def test_post_checking_ports_len_positive(self):\n        result = API.post_create_docker_container_checking_ports(\n            token=TestPOST.token,\n            port_len=\"80-89\")\n>       Checking.check_status_code(result, 201)\n\ntests_api/test_bd.py:374: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 201\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response\n        :param status_code:\n        \"\"\"\n        with allure.step(f'Assert status code: {status_code} == Response status code: {result.status_code}'):\n>           assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\nE           AssertionError: Incorrect status code: 400\n\ntests_api/utils/checking.py:16: AssertionError",
    "steps" : [ {
      "name" : "post_create_docker_container",
      "time" : {
        "start" : 1741309527247,
        "stop" : 1741309527769,
        "duration" : 522
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Endpoint: /container_create",
        "time" : {
          "start" : 1741309527769,
          "stop" : 1741309527769,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false,
        "stepsCount" : 0
      }, {
        "name" : "Request:",
        "time" : {
          "start" : 1741309527769,
          "stop" : 1741309527769,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Headers: {'Content-Type': 'application/json', 'Authorization': '111ac29e-5669-47f4-9b7b-8fb229cf4ff5'}",
          "time" : {
            "start" : 1741309527769,
            "stop" : 1741309527769,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false,
          "stepsCount" : 0
        }, {
          "name" : "Body: {\"docker_image\": \"nginx\", \"int_ports\": f\"80-89\", \"env\": 3, \"region\": 3}",
          "time" : {
            "start" : 1741309527769,
            "stop" : 1741309527769,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false,
          "stepsCount" : 0
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true,
        "stepsCount" : 2
      }, {
        "name" : "Response:",
        "time" : {
          "start" : 1741309527769,
          "stop" : 1741309527769,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Status code: 400",
          "time" : {
            "start" : 1741309527769,
            "stop" : 1741309527769,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false,
          "stepsCount" : 0
        }, {
          "name" : "JSON: {\n    \"msg_code\": -1,\n    \"msg\": \"endpoint is disabled\"\n}\n",
          "time" : {
            "start" : 1741309527769,
            "stop" : 1741309527769,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false,
          "stepsCount" : 0
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true,
        "stepsCount" : 2
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true,
      "stepsCount" : 7
    }, {
      "name" : "Assert status code: 201 == Response status code: 400",
      "time" : {
        "start" : 1741309527769,
        "stop" : 1741309527769,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Incorrect status code: 400\n",
      "statusTrace" : "  File \"/home/runner/work/Oblache/Oblache/tests_api/utils/checking.py\", line 16, in check_status_code\n    assert status_code == result.status_code, f'Incorrect status code: {result.status_code}'\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true,
      "stepsCount" : 0
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 9
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "POST"
  }, {
    "name" : "parentSuite",
    "value" : "tests_api"
  }, {
    "name" : "subSuite",
    "value" : "TestPOST"
  }, {
    "name" : "host",
    "value" : "fv-az1344-444"
  }, {
    "name" : "thread",
    "value" : "2445-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_api.test_bd"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 86,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 36,
        "unknown" : 0,
        "total" : 122
      },
      "items" : [ {
        "uid" : "1a54aa7432f66ae7",
        "reportUrl" : "https://lambotik.github.io/Oblache/23//#testresult/1a54aa7432f66ae7",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1741273263048,
          "stop" : 1741273263585,
          "duration" : 537
        }
      }, {
        "uid" : "6b3c76b914814b1d",
        "reportUrl" : "https://lambotik.github.io/Oblache/22//#testresult/6b3c76b914814b1d",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1741273015712,
          "stop" : 1741273016020,
          "duration" : 308
        }
      }, {
        "uid" : "fb431da191a4e02c",
        "reportUrl" : "https://lambotik.github.io/Oblache/21//#testresult/fb431da191a4e02c",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1741272402891,
          "stop" : 1741272403212,
          "duration" : 321
        }
      }, {
        "uid" : "a113d4f6f7f13839",
        "reportUrl" : "https://lambotik.github.io/Oblache/20//#testresult/a113d4f6f7f13839",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1741271079716,
          "stop" : 1741271080236,
          "duration" : 520
        }
      }, {
        "uid" : "6b7cf28b7474b695",
        "reportUrl" : "https://lambotik.github.io/Oblache/19//#testresult/6b7cf28b7474b695",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1741270261174,
          "stop" : 1741270261709,
          "duration" : 535
        }
      }, {
        "uid" : "d25e1be1cb296d4a",
        "reportUrl" : "https://lambotik.github.io/Oblache/333//#testresult/d25e1be1cb296d4a",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1741223078046,
          "stop" : 1741223078350,
          "duration" : 304
        }
      }, {
        "uid" : "533f5f9e621bb5d5",
        "reportUrl" : "https://lambotik.github.io/Oblache/332//#testresult/533f5f9e621bb5d5",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1741136678638,
          "stop" : 1741136678947,
          "duration" : 309
        }
      }, {
        "uid" : "58fb1bd908e2a1",
        "reportUrl" : "https://lambotik.github.io/Oblache/331//#testresult/58fb1bd908e2a1",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1741050275175,
          "stop" : 1741050275495,
          "duration" : 320
        }
      }, {
        "uid" : "480b82c5a29bf36f",
        "reportUrl" : "https://lambotik.github.io/Oblache/330//#testresult/480b82c5a29bf36f",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1740963965834,
          "stop" : 1740963966198,
          "duration" : 364
        }
      }, {
        "uid" : "bd058293d8f7f6fb",
        "reportUrl" : "https://lambotik.github.io/Oblache/329//#testresult/bd058293d8f7f6fb",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1740877665332,
          "stop" : 1740877665697,
          "duration" : 365
        }
      }, {
        "uid" : "dc7fc19cab2bce19",
        "reportUrl" : "https://lambotik.github.io/Oblache/328//#testresult/dc7fc19cab2bce19",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1740791301367,
          "stop" : 1740791301686,
          "duration" : 319
        }
      }, {
        "uid" : "9daf01f994136f5a",
        "reportUrl" : "https://lambotik.github.io/Oblache/327//#testresult/9daf01f994136f5a",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1740704632716,
          "stop" : 1740704633030,
          "duration" : 314
        }
      }, {
        "uid" : "122f11cf2ad2aabe",
        "reportUrl" : "https://lambotik.github.io/Oblache/326//#testresult/122f11cf2ad2aabe",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1740618210508,
          "stop" : 1740618210871,
          "duration" : 363
        }
      }, {
        "uid" : "f3ffaeaefa0beb46",
        "reportUrl" : "https://lambotik.github.io/Oblache/325//#testresult/f3ffaeaefa0beb46",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1740531813934,
          "stop" : 1740531814249,
          "duration" : 315
        }
      }, {
        "uid" : "7cf88315cf62ab85",
        "reportUrl" : "https://lambotik.github.io/Oblache/324//#testresult/7cf88315cf62ab85",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1740445423057,
          "stop" : 1740445423428,
          "duration" : 371
        }
      }, {
        "uid" : "c0076647b1d56609",
        "reportUrl" : "https://lambotik.github.io/Oblache/323//#testresult/c0076647b1d56609",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1740359091647,
          "stop" : 1740359092160,
          "duration" : 513
        }
      }, {
        "uid" : "ed37589160812c71",
        "reportUrl" : "https://lambotik.github.io/Oblache/322//#testresult/ed37589160812c71",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1740272821972,
          "stop" : 1740272822480,
          "duration" : 508
        }
      }, {
        "uid" : "5c71e6dff8b0bf30",
        "reportUrl" : "https://lambotik.github.io/Oblache/321//#testresult/5c71e6dff8b0bf30",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1740186044428,
          "stop" : 1740186044752,
          "duration" : 324
        }
      }, {
        "uid" : "cbed6e74a1907d05",
        "reportUrl" : "https://lambotik.github.io/Oblache/320//#testresult/cbed6e74a1907d05",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1740099780205,
          "stop" : 1740099780722,
          "duration" : 517
        }
      }, {
        "uid" : "d7ac6c460a7f01f6",
        "reportUrl" : "https://lambotik.github.io/Oblache/319//#testresult/d7ac6c460a7f01f6",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code: 400",
        "time" : {
          "start" : 1740013366551,
          "stop" : 1740013366914,
          "duration" : 363
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "58bd893e3b14fd3.json",
  "parameterValues" : [ ]
}